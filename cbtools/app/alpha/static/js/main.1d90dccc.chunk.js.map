{"version":3,"sources":["services/functions.js","components/standardSearchHeader.js","panels/getCities.js","panels/gettingAuth.js","panels/notFound.js","panels/hello.js","components/standardRequestAccess.js","panels/getEmail.js","panels/getPhoneNumber.js","panels/joinGroup.js","panels/allowMessagesFromGroup.js","panels/routeDialog.js","panels/getAppVersion.js","panels/readQRCode.js","panels/downloadFile.js","panels/fillForm.js","panels/wallPost.js","panels/getChairs.js","panels/showStoryBox.js","panels/renderList.js","panels/selectGeo.js","panels/getUserInfo.js","panels/getUserData.js","App.js","index.js"],"names":["smoothScrollToTop","console","log","c","document","documentElement","scrollTop","body","window","scrolling","requestAnimationFrame","scrollTo","getSplittedAndFilteredString","st","sep","String","toLowerCase","split","filter","e","onChange","key","onClose","closeIcon","title","setSearch","hashParams","after","isDesktopWebPlatfrom","get","className","onClick","GetCitiesPanel","props","saveScrolls","scrolls","state","page","pageYOffset","selectCountry","countryId","activeHash","sendResponse","countries","find","id","setState","selectedCountryId","loadCities","selectCity","city","a","countryName","clearCities","length","loadCountries","cities","changeSearchQuery","q","target","value","toLocaleLowerCase","loadedCountries","loadedCities","this","goToCities","addEventListener","removeEventListener","vkApi","country_ids","Number","country","need_all","count","items","country_id","canChangeCountry","header","mode","aside","map","size","countryIdParams","renderCities","match","React","Component","onRequestToken","centered","icon","action","type","renderAction","bridge","send","before","requests","actionText","nameField","photoField","content","hideButton","showSpinner","botName","botPhoto","src","style","textAlign","marginTop","GetEmailPanel","getEmail","supports","then","res","email","catch","sendError","error_code","GetPhoneNumberPanel","getPhoneNumber","phone_number","JoinGroupPanel","joinGroup","AllowMessagesFromGroupPanel","subscribeGroupMessages","RouteDialogPanel","routeDialog","href","GetAppVersionPanel","ReadQRCodePanel","scanQR","DownloadFilePanel","downloadFile","isAndroid","isWEB","url","filename","canDownload","download","FillFormPanel","handleInput","currentTarget","checked","formQuery","fields","forEach","row","i","name","isValid","bottomMessage","options","indexOf","regExpString","Array","isArray","regExpFlags","regExp","RegExp","submitForm","preventDefault","formIsValid","form","info","Object","prototype","toString","call","JSON","parse","action_text","default_value","required","defaultValue","placeholder","maxLength","max_length","inputType","top","bottom","status","defaultChecked","text","r","description","renderTextField","renderSelectField","renderTextAreaField","renderCheckboxField","renderRadioField","rowsFormQuery","same_with","sameWithValue","renderRow","WallPostPanel","wallPost","data","message","friends_only","attachments","signed","publish_date","mark_as_ads","close_comments","GetChairsPanel","showScrollToTop","nextPage","backActions","push","clearRegions","searchQuery","loadRegions","goBack","history","back","clearSchool","clearMetroStation","clearUniversity","selectedCityId","cityName","loadSchools","loadMetroStations","loadUniversities","selectRegion","region","selectChair","chair","selectedUniversityId","universityName","selectedFacultyId","facultyName","regions","clearTimeout","searchTimeout","setTimeout","selectedSchoolId","unversities","loadedUniversities","loadedMetroStations","selectedMetroStationId","metroStations","schools","loadedSchools","clearFaculty","faculties","loadedFaculties","clearChair","chairs","loadedChairs","selectUniversity","universityId","loadFaculties","selectSchool","schoolId","selectMetroStation","stationId","selectFaculty","facultyId","loadChairs","renderPage","chairName","regionName","metroStationName","selectedChairId","selectedRegionId","loadedRegions","renderChairs","renderFaculties","renderSchools","renderMetroStations","renderUniversities","renderRegions","renderCountries","method","isEducationMethod","schoolName","goToRegions","goToSchools","goToMetroStations","goToUniversities","goToFaculties","goToChairs","onpopstate","error","slice","city_ids","pushState","city_id","stations","getTargetName","university_id","faculty_id","university","school","station","faculty","searchKey","vertical","ShowStoryBoxPanel","showStoryBox","backgroundType","blob","locked","attachment","stickers","getAll","params","background_type","sticker","decodeURIComponent","RenderListPanel","loadMore","nextPageUrl","loading","fetchMore","hasMore","makeSearch","event","list","enable_server_search","sendSelectedItems","selectedItemIds","selectItem","item","isSelectedItem","splice","itemsGalleries","load_more_url","enableSearch","Boolean","enable_search","cardSize","windowWidth","innerWidth","refresh","URL","keys","searchParams","append","fetch","json","has_more","next_page_url","card","querySelector","offsetWidth","onresize","updateCardWidth","itemId","payload","k","buttons","button","selectedStateColor","selected_state","color","selectedStateLabel","label","selectedStateIcon","renderActionIcon","sendClick","stretched","rel","link","enable_select","itemsMatchByTitle","__key","itemsMatchByDescription","listType","ratio","aspect_ratio","galleryStyles","height","avatar_src","avatar_size","multiline","items_","el","arr","fluid","haveSelectButton","getButtons","b","flckityOptions","initialIndex","pageDots","prevNextButtons","fullscreen","adaptiveHeight","wrapAround","xs","md","images","flickityRef","on","selectedIndex","alt","renderButtons","empty_search_error_text","empty_error_text","pageStart","loader","threshold","classnames","disabled","renderIcon","complete_action_icon","complete_action_text","SelectGeoPanel","DG","center","zoom","GetUserEmailPanel","getInfo","GetUserDataPanel","getData","scope","permission","scopeSelected","getDataField","error_message","disabledAll","phone","useToken","dataFields","fieldsTypes","minimal","personal","photos","getPermissionTitle","makeApiDataRequest","userToken","getUserInfoByToken","token","access_token","u","apiMethod","apiErrorMessage","renderRequestsContent","App","response","close","appPayload","hash","location","replace","success","botId","wasClosed","queryParams","Date","getTime","requestToken","activePanel","makeApiCall","cache","requestbase64","btoa","stringify","apiCache","apiCallsCounter","lastTimeApiCallLastTick","lastTimeApiCallFirstTick","sleep","error_data","error_reason","queryString","search","URLSearchParams","isIOS","supportsHashes","databaseMethods","popout","subscribe","detail","setAttribute","scheme","getAppOptions","setOptions","Map","__proto__","set","alreadyAuth","ts","Promise","resolve","reject","ReactDOM","render","getElementById","onerror","errorMsg","lineNumber","columnNumber","textAoutput","stack","navigator","userAgent","innerHTML"],"mappings":"otBACaA,G,MAAoB,SAApBA,IACXC,QAAQC,IAAI,iBACV,IAAMC,EAAIC,SAASC,gBAAgBC,WAAaF,SAASG,KAAKD,UAM1DH,EAAI,GACNK,OAAOC,WAAY,EACjBD,OAAOE,sBAAsBV,GAC7BQ,OAAOG,SAAS,EAAGR,EAAIA,EAAI,IAE7BK,OAAOC,WAAY,IAIZG,EAA+B,SAACC,GAAD,IAAKC,EAAL,uDAAS,IAAT,OAC1CC,OAAOF,GAAIG,cAAcC,MAAMH,GAAKI,QAAO,SAAAC,GAAC,QAAMA,MCHrC,G,OAAA,YAAgF,IAA7EC,EAA4E,EAA5EA,SAA8BC,GAA8C,EAAlEC,QAAkE,EAAzDC,UAAyD,EAA9CF,KAAKG,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MAE3EC,EAAyD,gBAAlCF,EAAWG,IAAI,eAe5C,OAdA5B,QAAQC,IAAIwB,EAAWG,IAAI,gBAcnB,oCAAE,kBAAC,IAAD,CAAaR,IAAKA,GACzBI,EAAY,kBAAC,IAAD,CAAQL,SAAUA,EAAUU,UAAYF,EAAmC,GAAZ,YAC5E,yBAAKG,QAAS,WACZ/B,MAECwB,IAAgBE,EAAWG,IAAI,SAAWH,EAAWG,IAAI,SAAW,mBAG1DF,KCtBIK,E,kDACnB,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IA8BRC,YAAc,SAACf,GACb,EAAKgB,QAAQ,EAAKC,MAAMC,MAAQ7B,OAAO8B,aAhCrB,EA+FpBC,cAAgB,SAACC,GAEI,kBADE,EAAKP,MAAnBQ,WAEL,EAAKR,MAAMS,aAAa,CACtB,WAAcF,EACd,cAAiB,EAAKJ,MAAMO,UAAUC,MAAK,SAAAzC,GAAC,OAAIA,EAAE0C,KAAOL,KAAWhB,QAGtE,EAAKsB,SAAS,CACZC,kBAAmBP,EACnBH,KAAM,WACL,WACD,EAAKW,iBA3GS,EAgHpBC,WAhHoB,uCAgHP,WAAOC,GAAP,eAAAC,EAAA,sDACNzB,EAAc,EAAKO,MAAnBP,WAEL,EAAKO,MAAMS,aAAa,CACtB,QAAWQ,EAAKL,GAChB,WAAcK,EAAK1B,MACnB,WAAc,EAAKY,MAAMW,kBACzB,cAAiBrB,EAAWG,IAAI,eAAiB,EAAKO,MAAMgB,YAAc,EAAKhB,MAAMgB,YAAc,EAAKhB,MAAMO,UAAUC,MAAK,SAAAzC,GAAC,OAAIA,EAAE0C,KAAO,EAAKT,MAAMW,qBAAmBvB,QAG3K,EAAK6B,cAVM,2CAhHO,wDA6HpBA,YAAc,WAOS,EAAKpB,MAAnBP,WAEQG,IAAI,gBAAkB,EAAKO,MAAMO,UAAUW,QACxD,EAAKC,gBAGP,EAAKT,SAZU,CACbU,OAAQ,GACRT,kBAAmB,EACnBK,YAAa,MAjIG,EAmKpBK,kBAAoB,SAACtC,GACnB,IAAIuC,EAAIvC,EAAEwC,OAAOC,MACb,EAAKxB,MAAMW,kBACb,EAAKC,WAAWU,GAEhB,EAAKZ,SAAS,CACZM,YAAarC,OAAO2C,GAAGG,uBAtK3B,EAAKzB,MAAQ,CACXO,UAAW,GACXa,OAAQ,GACRT,kBAAmB,EACnBe,iBAAiB,EACjBC,cAAc,EACdX,YAAa,GACbf,KAAM,aAGR,EAAKF,QAAL,aACE,UAAa,GADf,YAEe,GAfG,E,gEAqBC6B,KAAK/B,MAAnBP,WACUG,IAAI,cACjBmC,KAAKC,aACKD,KAAK5B,MAAMO,UAAUW,QAC/BU,KAAKT,gBAGP/C,OAAO0D,iBAAiB,SAAUF,KAAK9B,aAAa,K,6CAQpD1B,OAAO2D,oBAAoB,SAAUH,KAAK9B,e,2CAI1C1B,OAAOG,SAAS,EAAGqD,KAAK7B,QAAQ6B,KAAK5B,MAAMC,S,yKAIjB2B,KAAK/B,MAA1BP,E,EAAAA,WAAY0C,E,EAAAA,M,SACIA,EAAM,4BAA6B,CACtDC,YAAaC,OAAO5C,EAAWG,IAAI,iB,OAGrC0C,GAJIA,E,QAIc,GAElBP,KAAKlB,SAAS,CACZC,kBAAmBwB,EAAQ1B,GAC3BO,YAAamB,EAAQ/C,MACrBsC,iBAAiB,EACjBzB,KAAM,WACL,WACD,EAAKW,gB,iRAIYU,E,+BAAE,GAErBM,KAAKlB,SAAS,CACZgB,iBAAiB,I,SAGGE,KAAK/B,MAAMmC,MAAM,wBAAyB,CAC9DI,SAAU,EACVd,IACAe,MAAO,M,OAHL9B,E,OAMJqB,KAAKlB,SAAS,CACZgB,iBAAiB,EACjBnB,UAAWA,EAAU+B,Q,8QAIPhB,E,+BAAE,GAClBM,KAAKlB,SAAS,CACZiB,cAAc,I,SAGGC,KAAK/B,MAAMmC,MAAM,qBAAsB,CACxDO,WAAYX,KAAK5B,MAAMW,kBACvBW,M,OAFEF,E,OAKJQ,KAAKlB,SAAS,CACZiB,cAAc,EACdP,OAAQA,EAAOkB,Q,2IAkDF,IAAD,SACiBV,KAAK5B,MAA7BoB,EADO,EACPA,OAAQO,EADD,EACCA,aAEXa,EAA4D,OAD3CZ,KAAK/B,MAAnBP,WAC2BG,IAAI,sBACtC,OACG2B,EAAOF,QAAWS,EAClBP,EAAOF,OACR,6BACE,kBAAC,IAAD,CAAOuB,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAAOH,EAAmB,kBAAC,IAAD,CAAM7C,QAASiC,KAAKX,aAApB,yFAA0D,MAA7G,oFACb,kBAAC,IAAD,KACGG,EAAOwB,KAAI,SAAA9B,GAAI,OACd,kBAAC,IAAD,CAAMnB,QAAS,kBAAM,EAAKkB,WAAWC,IAAO7B,IAAK,OAAS6B,EAAKL,IAC5DK,EAAK1B,aANC,kBAAC,IAAD,uKADiB,kBAAC,IAAD,CAAcyD,KAAK,Q,+BA4B9C,IAAD,SAC6DjB,KAAK5B,MAAnEO,EADC,EACDA,UAAWmB,EADV,EACUA,gBAAiBV,EAD3B,EAC2BA,YAAaL,EADxC,EACwCA,kBACzCrB,EAAcsC,KAAK/B,MAAnBP,WACHwD,EAAkBxD,EAAWG,IAAI,cAErC,OACE,kBAAC,IAAD,CAAOgB,GAAImB,KAAK/B,MAAMY,IACpB,kBAAC,EAAD,CAAsBnB,WAAYA,EAAYD,WAAW,EAAMJ,IAAK0B,EAAoB,UAAY,OAAQ3B,SAAU4C,KAAKP,qBACzHd,EAAUW,SAAWQ,GAAoBoB,IAAoBpB,IAAqBA,EAAkB,kBAAC,IAAD,CAAcmB,KAAK,OACxHtC,EAAUW,QAAW4B,GAAmBpB,IAAoBV,EAAe,kBAAC,IAAD,uKACzEL,EAUUiB,KAAKmB,eAVK,kBAAC,IAAD,CAAON,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,0FAClC,kBAAC,IAAD,KACGnC,EAAUzB,QAAO,SAAAf,GAChB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAMhC,MAChD4B,KAAI,SAAAT,GAAO,OACZ,kBAAC,IAAD,CAAMxC,QAAS,kBAAM,EAAKQ,cAAcgC,EAAQ1B,KAAKxB,IAAK,UAAYkD,EAAQ1B,IAC3E0B,EAAQ/C,iB,GA/LiB6D,IAAMC,W,kBCGnC,kBAAEC,EAAF,EAAEA,eAAgB1C,EAAlB,EAAkBA,GAAIJ,EAAtB,EAAsBA,WAAYf,EAAlC,EAAkCA,WAAlC,OACb,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,IAAD,CACE+D,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAQT,KAAK,KAAKlD,QAASwD,GAA3B,2DAFV,kCAXiB,WAAc,IAAbI,EAAY,uDAAP,GACzB,OAAQA,GACN,IAAK,aACH,MAAO,4EACT,QACE,MAAO,6HASDC,CAAanD,GAHrB,mUCdW,kBAAEI,EAAF,EAAEA,GAAInB,EAAN,EAAMA,WAAN,OACb,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,EAAYF,MAAM,kBACpD,kBAAC,IAAD,CAAKM,UAAU,gBAAf,6GACuB,6BADvB,mJ,mCCEW,kBAAEe,EAAF,EAAEA,GAAInB,EAAN,EAAMA,WAAN,OACb,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,EAAYF,MAAM,0CACpD,kBAAC,IAAD,CACEiE,KAAM,kBAAC,IAAD,MACNZ,OAAO,gBACPa,OAAQ,kBAAC,IAAD,CAAQT,KAAK,KAAKlD,QAAS,WAC/B8D,IAAOC,KAAK,yBAA0B,KACrCC,OAAQ,kBAAC,IAAD,OAFL,qIAHV,0KAMiC,6BANjC,gH,kBCJW,G,OAAA,YAAoI,IAAlIrE,EAAiI,EAAjIA,WAAYsE,EAAqH,EAArHA,SAAUjE,EAA2G,EAA3GA,QAASkE,EAAkG,EAAlGA,WAAYP,EAAsF,EAAtFA,OAAQD,EAA8E,EAA9EA,KAAMS,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,WAA6D,IAAjDC,eAAiD,MAAzC,KAAyC,EAAnCC,EAAmC,EAAnCA,WAAmC,IAAvBC,mBAAuB,SAE3IJ,IAAWA,EAAY,YACvBC,IAAYA,EAAa,aAE9B,IAAII,EAAU7E,EAAWG,IAAIqE,IAAc,wCACvCM,EAAW9E,EAAWG,IAAIsE,IAAe,GAE7C,OACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMrB,KAAK,OAAOhD,UAAU,kBAAiB,kBAAC,IAAD,CAC3C2D,KAAMe,EAAW,kBAAC,IAAD,CAAQvB,KAAM,GAAIwB,IAAKD,IAAcf,GAAc,kBAAC,IAAD,MACpEZ,OAAQ0B,EACRb,OAAQA,IAAmBW,EAAoL,KAAvK,kBAAC,IAAD,CAAQpB,KAAK,KAAKc,OAAQO,EAAc,kBAAC,IAAD,CAASrB,KAAK,QAAQnD,UAAU,kBAAoB,KAAMC,QAASA,GAAUkE,GAA0B,4DACvLD,EAAS,yBAAKU,MAAO,CAACC,UAAW,OAAQC,UAAW,KAAMR,QCb3CS,E,4MAEnBC,SAAW,WACLjB,IAAOkB,SAAS,oBAClBlB,IAAOC,KAAK,mBAAoB,IAAIkB,MAAK,SAAAC,GACvC,EAAKhF,MAAMS,aAAa,CACtBwE,MAAOD,EAAIC,WAEZC,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,iHAA6BjG,MAGpD,EAAKc,MAAMmF,UAAU,gOAAkD,CACrEC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAK8C,SACdpF,WAAYA,EACZsE,SAAS,wM,GA3BwBX,IAAMC,WCA5BgC,E,4MAEnBC,eAAiB,WACX1B,IAAOkB,SAAS,0BAClBlB,IAAOC,KAAK,yBAA0B,IAAIkB,MAAK,SAAAC,GAC7C,EAAKhF,MAAMS,aAAa,CACtB8E,aAAcP,EAAIO,kBAEnBL,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,2LAAsCjG,MAG7D,EAAKc,MAAMmF,UAAU,gTAA4D,CAC/EC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAKuD,eACd7F,WAAYA,EACZsE,SAAS,mP,GA3B8BX,IAAMC,WCLlCmC,E,4MAEnBC,UAAY,WAAO,IACZhG,EAAc,EAAKO,MAAnBP,WAEDmE,IAAOkB,SAAS,qBAClBlB,IAAOC,KAAK,oBAAqB,CAC/B,SAAYxB,OAAO5C,EAAWG,IAAI,eACjCmF,MAAK,SAAAC,GACN,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,+KAAoCjG,MAG3D,EAAKc,MAAMmF,UAAU,oSAA0D,CAC7EC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAK0D,UACdhG,WAAYA,EACZsE,SAAS,oLACTC,WAAW,mDACXE,WAAW,cACXD,UAAU,oB,GAhCwBb,IAAMC,WCA7BqC,E,4MAEnBC,uBAAyB,WAAO,IACzBlG,EAAc,EAAKO,MAAnBP,WACLmE,IAAOC,KAAK,iCAAkC,CAC5C,SAAYxB,OAAO5C,EAAWG,IAAI,aAClC,IAAOH,EAAWG,IAAI,SACrBmF,MAAK,SAAAC,GACN,EAAKhF,MAAMS,aAAauE,O,uDAIjB,IAAD,EACiBjD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAK4D,uBACdlG,WAAYA,EACZsE,SAAS,uPACTC,WAAW,4E,GAtBoCZ,IAAMC,W,iBCI1CuC,E,4MAEnBC,YAAc,WACZ,IADkB,EACdb,EAAM,GADQ,cAGO,EAAKhF,MAAMP,YAHlB,IAGlB,2BAAgD,CAAC,IAAD,yBAAtCL,EAAsC,KAAjCuC,EAAiC,KAC9CqD,EAAI5F,GAAOuC,GAJK,8BAQlB,OADA,EAAK3B,MAAMS,aAAauE,IACjB,G,uDAGE,IAAD,EACiBjD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEA,WAAYA,EACZsE,SAAS,wMACTP,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAMqC,KAAM,0BAA4BrG,EAAWG,IAAI,UAAWE,QAASiC,KAAK8D,YAAanE,OAAO,UAAS,kBAAC,IAAD,CAAQsB,KAAK,MAAMvD,EAAWG,IAAI,eAAiBH,EAAWG,IAAI,eAAiB,4F,GAxBtKwD,IAAMC,WCN/B0C,E,mLAEI,IAAD,OAChBnC,IAAOkB,SAAS,4BAClBlB,IAAOC,KAAK,2BAA4B,IAAIkB,MAAK,SAAAC,GAC/C,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,4OAA+CjG,MAGtE6C,KAAK/B,MAAMmF,UAAU,gYAA2E,CAC9FC,WAAY,mB,+BAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IADpC,iG,GApB0C2D,IAAMC,W,kBCKjC2C,E,4MAEnBC,OAAS,WACHrC,IAAOkB,SAAS,0BAClBlB,IAAOC,KAAK,yBAA0B,IAAIkB,MAAK,SAAAC,GAC7C,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,oHAA2BjG,MAGlD,EAAKc,MAAMmF,UAAU,4IAA+B,CAClDC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEA,WAAYA,EACZsE,SAAS,uJACTN,OAAQ,kBAAC,IAAD,CAAQT,KAAK,KAAKlD,QAASiC,KAAKkE,OAAQnC,OAAQ,kBAAC,IAAD,OAAhD,+F,GAzB2BV,IAAMC,W,kBCA9B6C,E,4MAEnBC,aAAe,WAAO,IACf1G,EAAc,EAAKO,MAAnBP,WACClB,OAAO6H,WAAa7H,OAAO8H,QAC3BzC,IAAOkB,SAAS,wBAClBlB,IAAOC,KAAK,uBAAwB,CAClCyC,IAAK7G,EAAWG,IAAI,YACpB2G,SAAU9G,EAAWG,IAAI,eACxBmF,MAAK,SAAAC,GACN,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,8HAA2BjG,MAGlD,EAAKc,MAAMmF,UAAU,+PAAmD,CACtEC,WAAY,mB,uDAMT,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEL+G,EAAcjI,OAAO6H,WAAa7H,OAAO8H,MAE/C,OACE,kBAAC,IAAD,CAAOzF,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAKoE,aACd1G,WAAYA,EACZsE,SAAS,mIACTN,OACE,kBAAC,IAAD,CACEK,OAAQ,kBAAC,IAAD,MACRd,KAAK,KACLlD,QAAS0G,EAAc,KAAOzE,KAAKoE,aACnCL,KAAMU,EAAc/G,EAAWG,IAAI,YAAc,KACjD6G,SAAUD,EAAc/G,EAAWG,IAAI,aAAe,KACtD8B,OAAO,UANT,qD,GAnCmC0B,IAAMC,W,gBCWhCqD,E,kDAEnB,WAAa1G,GAAQ,IAAD,uBAClB,cAAMA,IAmDR2G,YAAc,SAACzH,KAAqB,yDAAC,IAC7ByC,EAAQzC,EAAE0H,cAAcjF,MAGC,aAAzBzC,EAAE0H,cAAclD,OAChB/B,EAAQzC,EAAE0H,cAAcC,SAI5B,IAAMC,EAAS,eAAO,EAAK3G,MAAM2G,WAEjCA,EAAUC,OAAOC,SAAQ,SAACC,EAAKC,GAC7B,GAAID,EAAIE,OAASjI,EAAE0H,cAAcO,OAC/BL,EAAUC,OAAOG,GAAGvF,MAAQA,EAC5BmF,EAAUC,OAAOG,GAAGE,QAAU,KAC9BN,EAAUC,OAAOG,GAAGG,cAAgB,KAEhCJ,EAAIK,QAAQnE,QAAgE,IAAvD,CAAC,SAAU,QAAS,YAAYoE,QAAQN,EAAIvD,OAAc,CACjF,IAAI8D,EAAeC,MAAMC,QAAQT,EAAIK,QAAQnE,OAAS8D,EAAIK,QAAQnE,MAAM,GAAK8D,EAAIK,QAAQnE,MACrFwE,EAAcF,MAAMC,QAAQT,EAAIK,QAAQnE,OAAS8D,EAAIK,QAAQnE,MAAM,GAAK,GAExEyE,EAAS,IAAIC,OAAOL,EAAcG,GAClCV,EAAItF,MAAMwB,MAAMyE,GAClBd,EAAUC,OAAOG,GAAGE,SAAU,EAE9BN,EAAUC,OAAOG,GAAGE,SAAU,MAMtC,EAAKvG,SAAS,CACViG,eApFY,EA6OpBgB,WAAa,SAAC5I,GAEZ,GADAA,EAAE6I,iBACE,EAAKC,cAAe,CACtB,IAAIC,EAAO,GACS,EAAK9H,MAAlB2G,UACGC,OAAOC,SAAQ,SAAAC,GACvBgB,EAAKhB,EAAIE,MAAQF,EAAItF,SAEvB3D,QAAQkK,KAAK,WAAYD,GACzB,EAAKjI,MAAMS,aAAawH,KAtPR,IAMdnB,EAHiB9G,EAAdP,WAGoBG,IAAI,QAG3BoI,GAAc,EAClB,GAAkD,oBAA9CG,OAAOC,UAAUC,SAASC,KAAKxB,IAAoCA,EAAUzF,OAC/E,IACEyF,EAAYyB,KAAKC,MAAM1B,GACvBkB,GAAc,EACd,MAAO9I,GACP8I,GAAc,OAGhBA,GAAc,EAGhB,IAAKA,EACH,OAAO,gBAAKhI,MAAMmF,UAAU,+KAAyC,CACnEC,WAAY,oBAIhB,IAAIpB,EAAa8C,EAAU2B,aAAe,yDA3BxB,OA6Bd3B,EAAUC,QAAUU,MAAMC,QAAQZ,EAAUC,SAC9CD,EAAUC,OAAOC,SAAQ,SAACC,EAAKC,GAAO,IAC7BxD,EAAgDuD,EAAhDvD,KAAMyD,EAA0CF,EAA1CE,KAAMuB,EAAoCzB,EAApCyB,cAAepB,EAAqBL,EAArBK,QAASqB,EAAY1B,EAAZ0B,SAE3C7B,EAAUC,OAAOG,GAAK,CACpB0B,aAAcF,EACd/G,MAAO+G,GAAiB,KACxBC,WACArB,UACAH,OACAzD,OACA0D,QAAS,SAKf,EAAKjH,MAAL,eAxCW,GAwCX,CAEE6D,aACA8C,cAhDgB,E,4DAyFHG,GACf,OACE,kBAAC,IAAD,CACEE,KAAMF,EAAIE,KACVyB,aAAc3B,EAAI2B,aAClBC,YAAa5B,EAAIK,QAAQuB,YACzBC,UAAW7B,EAAIK,QAAQyB,WACvBrF,KAAMuD,EAAI+B,WAAa,OACvBC,IAAKhC,EAAIK,QAAQ2B,IAAMhC,EAAIK,QAAQ2B,KAAOhC,EAAI0B,SAAW,KAAO,IAAM,GACtExJ,SAAU4C,KAAK4E,YACfuC,OAAQjC,EAAII,cACZ8B,OAAwB,OAAhBlC,EAAIG,QAAmB,KAAOH,EAAIG,QAAU,QAAU,Y,wCAKjDH,GACjB,OACE,kBAAC,IAAD,Q,0CAIiBA,GACnB,OACE,kBAAC,IAAD,CACEE,KAAMF,EAAIE,KACVyB,aAAc3B,EAAI2B,aAClBC,YAAa5B,EAAIK,QAAQuB,YACzBC,UAAW7B,EAAIK,QAAQyB,WACvBE,IAAKhC,EAAIK,QAAQ2B,IAAMhC,EAAIK,QAAQ2B,KAAOhC,EAAI0B,SAAW,KAAO,IAAM,GACtExJ,SAAU4C,KAAK4E,YACfuC,OAAQjC,EAAII,cACZ8B,OAAwB,OAAhBlC,EAAIG,QAAmB,KAAOH,EAAIG,QAAU,QAAU,Y,0CAM/CH,GACnB,OACE,kBAAC,IAAD,CACEE,KAAMF,EAAIE,KACViC,eAAgBnC,EAAI2B,aACpBzJ,SAAU4C,KAAK4E,YACfsC,IAAKhC,EAAIK,QAAQ2B,IAAMhC,EAAIK,QAAQ2B,KAAOhC,EAAI0B,SAAW,KAAO,IAAM,GACtEO,OAAQjC,EAAII,eAEXJ,EAAIK,QAAQ+B,Q,uCAKDpC,GAAM,IAAD,OACrB,OACEA,EAAIK,QAAQ7E,OAASgF,MAAMC,QAAQT,EAAIK,QAAQ7E,OAC/C,kBAAC,IAAD,CAAiBwG,IAAKhC,EAAIK,QAAQ2B,IAAMhC,EAAIK,QAAQ2B,KAAOhC,EAAI0B,SAAW,KAAO,IAAM,GAAIQ,OAAwB,OAAhBlC,EAAIG,QAAmB,KAAOH,EAAIG,QAAU,QAAU,QAAS8B,OAAQjC,EAAII,eAAgBJ,EAAIK,QAAQ7E,MAAMM,KAAI,SAAAuG,GAAC,OACnN,kBAAC,IAAD,CACEnC,KAAMF,EAAIE,KACViC,eAAgBnC,EAAI2B,eAAiBU,EAAE3H,MACvCxC,SAAU,EAAKwH,YACf4C,YAAaD,EAAEC,YACf5H,MAAO2H,EAAE3H,OACT2H,EAAED,UACkB,O,gCAKjBpC,GACT,OAAQA,EAAIvD,MACV,IAAK,OACH,OAAO3B,KAAKyH,gBAAgBvC,GAC9B,IAAK,SACH,OAAOlF,KAAK0H,kBAAkBxC,GAChC,IAAK,WACH,OAAOlF,KAAK2H,oBAAoBzC,GAClC,IAAK,WACH,OAAOlF,KAAK4H,oBAAoB1C,GAClC,IAAK,QACH,OAAOlF,KAAK6H,iBAAiB3C,GAC/B,IAAK,WACH,OAAOlF,KAAKyH,gBAAL,eACFvC,EADE,CAEL+B,UAAW,cAEf,QACE,OAAO,Q,oCAMX,IAAIhB,GAAc,EAEdlB,EAAS,eAAO/E,KAAK5B,MAAM2G,WAE3B+C,EAAgB/C,EAAUC,QAAU,GAiDxC,OAhDA8C,EAAa,YAAOA,IAEN7C,SAAQ,SAACC,EAAKC,GAO1B,GANID,EAAI0B,WAAc1B,EAAItF,QAA4C,IAAlC,CAAC,UAAU4F,QAAQN,EAAIvD,QACzDsE,GAAc,EACdf,EAAIG,SAAU,EACdH,EAAII,cAAgB,kHAGlBJ,EAAItF,MAAO,CAEb,GAAIsF,EAAIK,QAAQwC,UAAW,CACzB,IAAIC,EAAgBF,EAAclJ,MAAK,SAAA2I,GAAC,OAAIA,EAAEnC,OAASF,EAAIK,QAAQwC,aAC/DC,IACFA,EAAgBA,EAAcpI,SACRsF,EAAItF,QACxBqG,GAAc,EACdf,EAAIG,SAAU,EACdH,EAAII,cAAgB,yJAAmCJ,EAAIK,QAAQwC,WAKzE,GAAI7C,EAAIK,QAAQnE,QAAgE,IAAvD,CAAC,SAAU,QAAS,YAAYoE,QAAQN,EAAIvD,MAAc,CACjF,IAAI8D,EAAeC,MAAMC,QAAQT,EAAIK,QAAQnE,OAAS8D,EAAIK,QAAQnE,MAAM,GAAK8D,EAAIK,QAAQnE,MACrFwE,EAAcF,MAAMC,QAAQT,EAAIK,QAAQnE,OAAS8D,EAAIK,QAAQnE,MAAM,GAAK,GAExEyE,EAAS,IAAIC,OAAOL,EAAcG,GAElCV,EAAItF,MAAMwB,MAAMyE,GAClBX,EAAIG,SAAU,GAEdH,EAAIG,SAAU,EACdH,EAAII,cAAgB,0KAK1BwC,EAAc3C,GAAd,eACKD,MAKPlF,KAAKlB,SAAS,CACZiG,cAGKkB,I,+BAgBE,IAAD,SACwBjG,KAAK5B,MAA9B2G,EADC,EACDA,UAAW9C,EADV,EACUA,WADV,EAEiBjC,KAAK/B,MAAvBY,EAFC,EAEDA,GAAInB,EAFH,EAEGA,WACPoK,EAAgB/C,EAAUC,QAAU,GACxC,OACE,kBAAC,IAAD,CAAOnG,GAAIA,GACT,kBAAC,EAAD,CAAsBnB,WAAYA,IAClC,kBAAC,IAAD,KACGoK,EAAc9G,KAAI,SAACuG,GAAD,OAAO,EAAKU,UAAUV,MACzC,kBAAC,IAAD,CAAQtG,KAAK,KAAKlD,QAASiC,KAAK+F,YAAa9D,S,GArQZZ,IAAMC,WCT5B4G,E,4MAEnBC,SAAW,WAAO,IACTzK,EAAc,EAAKO,MAAnBP,WACP,GAAImE,IAAOkB,SAAS,2BAA4B,CAC9C,IAAIqF,EAAO,GAEP1K,EAAWG,IAAI,aACjBuK,EAAKC,QAAU3K,EAAWG,IAAI,YAG5BH,EAAWG,IAAI,kBACjBuK,EAAKE,aAAehI,OAAkD,IAA3CA,OAAO5C,EAAWG,IAAI,mBAG/CH,EAAWG,IAAI,iBACjBuK,EAAKG,YAAc7K,EAAWG,IAAI,gBAGhCH,EAAWG,IAAI,YACjBuK,EAAKI,OAASlI,OAA4C,IAArCA,OAAO5C,EAAWG,IAAI,aAGzCH,EAAWG,IAAI,kBACjBuK,EAAKK,aAAenI,OAAO5C,EAAWG,IAAI,kBAGxCH,EAAWG,IAAI,iBACjBuK,EAAKM,YAAcpI,OAAiD,IAA1CA,OAAO5C,EAAWG,IAAI,kBAG9CH,EAAWG,IAAI,oBACjBuK,EAAKO,eAAiBrI,OAAoD,IAA7CA,OAAO5C,EAAWG,IAAI,qBAGrDgE,IAAOC,KAAK,0BAA2BsG,GAAMpF,MAAK,SAAAC,GAChD,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,wKAAkCjG,WAGzD,EAAKc,MAAMmF,UAAU,2QAAqD,CACxEC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAKmI,SACdzK,WAAYA,EACZuE,WAAW,2EACXD,SAAS,+P,GAzDwBX,IAAMC,W,mBCQ5BsH,G,kDACnB,WAAa3K,GAAQ,IAAD,uBAClB,cAAMA,IAyHRC,YAAc,SAACf,GACb,EAAKgB,QAAQ,EAAKC,MAAMC,MAAQ7B,OAAO8B,YAEnC9B,OAAO8B,YAAc,MAAQ,EAAKF,MAAMyK,gBAC1C,EAAK/J,SAAS,CACZ+J,iBAAiB,IAEV,EAAKzK,MAAMyK,iBAAmBrM,OAAO8B,aAAe,KAC7D,EAAKQ,SAAS,CACZ+J,iBAAiB,KAnIH,EA4SpBtK,cAAgB,SAACC,EAAWhB,GAAW,IAC9BiB,EAAc,EAAKR,MAAnBQ,WACY,kBAAfA,EACF,EAAKR,MAAMS,aAAa,CACtB,WAAcF,EACd,cAAiBhB,KAGnB,EAAKsL,WAEL,EAAKC,YAAYC,KAAoB,iBAAfvK,EAAgC,EAAKwK,aAAe,EAAK5J,aAE/E,EAAKP,SAAS,CACZC,kBAAmBP,EACnB0K,YAAa,GACb9J,YAAa5B,EACba,KAAM,WACL,WACkB,iBAAfI,EACF,EAAK0K,cAEL,EAAKnK,kBAjUO,EA2UpBoK,OAAS,WACPnN,QAAQC,IAAI,QACZM,OAAO6M,QAAQC,QA7UG,EAgVpBrK,WAhVoB,uCAgVP,WAAOC,GAAP,eAAAC,EAAA,sDAGQ,gBAFZV,EAAc,EAAKR,MAAnBQ,YAGL,EAAKR,MAAMS,aAAa,CACtB,WAAc,EAAKN,MAAMW,kBACzB,cAAiB,EAAKX,MAAMgB,YAC5B,QAAWF,EAAKL,GAChB,WAAcK,EAAK1B,SAGrB,EAAKsL,WAEL,EAAKC,YAAYC,KAAoB,iBAAfvK,EAAgC,EAAK8K,YAC5C,uBAAf9K,EAAsC,EAAK+K,kBAAoB,EAAKC,iBAEpE,EAAK3K,SAAS,CACZ4K,eAAgBxK,EAAKL,GACrBqK,YAAa,GACbS,SAAUzK,EAAK1B,MACfa,KAAqB,iBAAfI,EAAgC,UAA2B,uBAAfA,EAAsC,iBAAmB,iBAC1G,WACkB,iBAAfA,EACF,EAAKmL,cACmB,uBAAfnL,EACT,EAAKoL,oBAEL,EAAKC,uBA3BA,2CAhVO,wDAiXpBC,aAjXoB,uCAiXL,WAAOC,GAAP,SAAA7K,EAAA,sDACQ,EAAKlB,MAAnBQ,WAEP,EAAKR,MAAMS,aAAa,CACtB,WAAc,EAAKN,MAAMW,kBACzB,cAAiB,EAAKX,MAAMgB,YAC5B,UAAa4K,EAAOnL,GACpB,aAAgBmL,EAAOxM,QAPZ,2CAjXK,wDA4XpByM,YA5XoB,uCA4XN,WAAOC,GAAP,SAAA/K,EAAA,sDACZ,EAAKlB,MAAMS,aAAa,CACtB,SAAYwL,EAAMrL,GAClB,YAAeqL,EAAM1M,MAErB,QAAW,EAAKY,MAAMsL,gBAAkB,EACxC,WAAc,EAAKtL,MAAMuL,UAAY,GAErC,WAAc,EAAKvL,MAAMW,mBAAqB,EAC9C,cAAiB,EAAKX,MAAMgB,aAAe,GAE3C,cAAiB,EAAKhB,MAAM+L,sBAAwB,EACpD,iBAAoB,EAAK/L,MAAMgM,gBAAkB,GAGjD,WAAc,EAAKhM,MAAMiM,mBAAqB,EAC9C,cAAiB,EAAKjM,MAAMkM,aAAe,KAhBjC,2CA5XM,wDAmcpBjL,YAAc,WASS,EAAKpB,MAAnBP,WAEQG,IAAI,gBAAkB,EAAKO,MAAMO,UAAUW,QACxD,EAAKC,gBAGP,EAAKpB,QAAL,OAAyB,EACzB,EAAKW,SAfU,CACbU,OAAQ,GACRT,kBAAmB,EACnBK,YAAa,GACb8J,YAAa,GACb7K,KAAM,eAzcU,EAsdpB4K,aAAe,WAQQ,EAAKhL,MAAnBP,WAEQG,IAAI,gBAAkB,EAAKO,MAAMO,UAAUW,QACxD,EAAKC,gBAGP,EAAKpB,QAAL,QAA0B,EAE1B,EAAKW,SAfU,CACbyL,QAAS,GACTxL,kBAAmB,EACnBK,YAAa,GACb8J,YAAa,MA3dG,EAqhBpBzJ,kBAAoB,SAACtC,GACnB,IAAIuC,EAAIvC,EAAEwC,OAAOC,MACVnB,EAAc,EAAKR,MAAnBQ,WAEP+L,aAAa,EAAKC,eAClB,EAAKA,cAAgBC,YAAW,WAE9B,EAAKvM,QAAQ,EAAKC,MAAMC,MAAQ,EAChC,EAAKS,SAAS,CACZoK,YAAanM,OAAO2C,GAAGG,uBAGrB,EAAKzB,MAAMW,mBAAsB,EAAKX,MAAMsL,gBAAmB,EAAKtL,MAAM+L,sBAMnE,EAAK/L,MAAMsL,gBAAmB,EAAKtL,MAAM+L,sBAAyB,EAAK/L,MAAMuM,mBACnE,iBAAflM,EACF,EAAKmL,YAAYlK,GAEE,uBAAfjB,GACD,EAAKqL,iBAAiBpK,IAVR,iBAAfjB,EACF,EAAK0K,YAAYzJ,GAEjB,EAAKV,WAAWU,KAWnB,MAhjBe,EAwnBpB+J,gBAAkB,WAAO,IAChB/L,EAAc,EAAKO,MAAnBP,WAWP,EAAKS,QAAL,aAA+B,EAE/B,EAAKW,SAXU,CACb4K,eAAgB,EAChBkB,YAAa,GACbC,oBAAoB,EACpBV,qBAAsB,EACtBjB,YAAa,GACb7K,KAAM,WAKgB,WAClBX,EAAWG,IAAI,YACjB,EAAK0B,oBAxoBS,EA6oBpBiK,kBAAoB,WAAO,IAClB9L,EAAc,EAAKO,MAAnBP,WAcP,EAAKS,QAAL,eAAiC,EAEjC,EAAKW,SAdU,CACb4K,eAAgB,EAChBkB,YAAa,GACbC,oBAAoB,EACpBV,qBAAsB,EACtBjB,YAAa,GACb7K,KAAM,SACNyM,qBAAqB,EACrBC,uBAAwB,EACxBC,cAAe,KAKO,WAClBtN,EAAWG,IAAI,YACjB,EAAK0B,oBAhqBS,EAqqBpBgK,YAAc,WAAO,IACZ7L,EAAc,EAAKO,MAAnBP,WAUP,EAAKS,QAAL,QAA0B,EAE1B,EAAKW,SAVU,CACb4K,eAAgB,EAChBuB,QAAS,GACTC,eAAe,EACfP,iBAAkB,EAClBzB,YAAa,KAKS,WAClBxL,EAAWG,IAAI,YACjB,EAAK0B,oBAprBS,EAyrBpB4L,aAAe,WAAO,IACbzN,EAAc,EAAKO,MAAnBP,WAUP,EAAKS,QAAL,UAA4B,EAE5B,EAAKW,SAVU,CACbqL,qBAAsB,EACtBiB,UAAW,GACXC,iBAAiB,EACjBnC,YAAa,GACb7K,KAAM,iBAKgB,WAClBX,EAAWG,IAAI,kBACjB,EAAK0B,oBAxsBS,EA6sBpB+L,WAAa,WAAO,IACX5N,EAAc,EAAKO,MAAnBP,WAUP,EAAKS,QAAL,OAAyB,EAEzB,EAAKW,SAVU,CACbuL,kBAAmB,EACnBkB,OAAQ,GACRC,cAAc,EACdtC,YAAa,GACb7K,KAAM,cAKgB,WAClBX,EAAWG,IAAI,eACjB,EAAK0B,oBA5tBS,EAiuBpBkM,iBAAmB,SAACC,EAAclO,GAEb,qBADE,EAAKS,MAAnBQ,WAEL,EAAKR,MAAMS,aAAa,CACtB,WAAc,EAAKN,MAAMW,kBACzB,cAAiB,EAAKX,MAAMgB,YAC5B,QAAW,EAAKhB,MAAMsL,eACtB,WAAc,EAAKtL,MAAMuL,SACzB,cAAiB+B,EACjB,iBAAoBlO,KAGtB,EAAKsL,WACL,EAAKC,YAAYC,KAAK,EAAKmC,cAC3B,EAAKrM,SAAS,CACZqL,qBAAsBuB,EACtBxC,YAAa,GACbkB,eAAgB5M,EAChBa,KAAM,cACL,WACD,EAAKsN,qBArvBS,EA0vBpBC,aAAe,SAACC,EAAUrO,GACH,EAAKS,MAAnBQ,WACP,EAAKR,MAAMS,aAAa,CACtB,WAAc,EAAKN,MAAMW,kBACzB,cAAiB,EAAKX,MAAMgB,YAC5B,QAAW,EAAKhB,MAAMsL,eACtB,WAAc,EAAKtL,MAAMuL,SACzB,UAAakC,EACb,aAAgBrO,KAlwBA,EAswBpBsO,mBAAqB,SAACC,EAAWvO,GACV,EAAKS,MAAnBQ,WACP,EAAKR,MAAMS,aAAa,CACtB,WAAc,EAAKN,MAAMW,kBACzB,cAAiB,EAAKX,MAAMgB,YAC5B,QAAW,EAAKhB,MAAMsL,eACtB,WAAc,EAAKtL,MAAMuL,SACzB,WAAcoC,EACd,cAAiBvO,KA9wBD,EAkxBpBwO,cAAgB,SAACC,EAAWzO,GAEP,kBADE,EAAKS,MAAnBQ,WAEL,EAAKR,MAAMS,aAAa,CACtB,WAAc,EAAKN,MAAMW,kBACzB,cAAiB,EAAKX,MAAMgB,YAC5B,QAAW,EAAKhB,MAAMsL,eACtB,WAAc,EAAKtL,MAAMuL,SACzB,cAAiB,EAAKvL,MAAM+L,qBAC5B,iBAAoB,EAAK/L,MAAMgM,eAC/B,WAAc6B,EACd,cAAiBzO,KAGnB,EAAKsL,WACL,EAAKC,YAAYC,KAAK,EAAKsC,YAC3B,EAAKxM,SAAS,CACZuL,kBAAmB4B,EACnB/C,YAAa,GACboB,YAAa9M,EACba,KAAM,WACL,WACD,EAAK6N,kBAxyBS,EA05BpBC,WAAa,WAAO,IAAD,EAuCb,EAAK/N,MArCPO,EAFe,EAEfA,UACAa,EAHe,EAGfA,OACAoL,EAJe,EAIfA,YACAQ,EALe,EAKfA,UACAG,EANe,EAMfA,OACAN,EAPe,EAOfA,QACAV,EARe,EAQfA,QACAS,EATe,EASfA,cAEA5L,EAXe,EAWfA,YACAuK,EAZe,EAYfA,SAOA5K,GAnBe,EAafqL,eAbe,EAcfgC,UAde,EAefC,WAfe,EAgBfC,iBAhBe,EAmBfvN,mBACA2K,EApBe,EAoBfA,eACAS,EArBe,EAqBfA,qBACAE,EAtBe,EAsBfA,kBACAkC,EAvBe,EAuBfA,gBACA5B,EAxBe,EAwBfA,iBACA6B,EAzBe,EAyBfA,iBACAzB,EA1Be,EA0BfA,uBAEAjL,EA5Be,EA4BfA,gBACAC,EA7Be,EA6BfA,aACA8K,EA9Be,EA8BfA,mBACAQ,EA/Be,EA+BfA,gBACAG,EAhCe,EAgCfA,aACAN,EAjCe,EAiCfA,cACAuB,EAlCe,EAkCfA,cACA3B,EAnCe,EAmCfA,oBAnCe,KAqCf5B,YAI+B,EAAKjL,OAA/BP,EAzCU,EAyCVA,WAAYe,EAzCF,EAyCEA,WAGnB,OAGKqB,IAAoBnB,EAAUW,QAA0C,MAAhC5B,EAAWG,IAAI,eACtB,MAAhCH,EAAWG,IAAI,gBAA2BuB,GAAeU,GAAmBf,IAAsBJ,EAAUW,QAI7GS,IAAiBP,EAAOF,QAAwC,MAA7B5B,EAAWG,IAAI,YAAuBkB,GAC3C,MAA7BrB,EAAWG,IAAI,aAAwB8L,GAAY5J,IAAiBP,EAAOF,QAI5EuL,IAAuBD,EAAYtL,QAA6C,MAAnC5B,EAAWG,IAAI,mBAA4F,IAAhE,CAAC,eAAgB,sBAAsB2H,QAAQ/G,IAGvI4M,IAAoBD,EAAU9L,QAA0C,MAAhC5B,EAAWG,IAAI,eAGvD2N,IAAiBD,EAAOjM,OAKpBP,GAAsB2K,GAAmBS,GAAyBE,EAE3DX,GAAmBS,GAAyBE,EAM5CF,GAAyBE,EAQzBA,EAGH,EAAKqC,eAFL,EAAKC,kBARO,iBAAflO,EACK,EAAKmO,gBACY,uBAAfnO,EACF,EAAKoO,sBAEL,EAAKC,qBAXK,iBAAfrO,EACK,EAAKsO,gBAEL,EAAK5L,eALN,EAAK6L,mBAqBflN,GAAqBf,GAAsBJ,EAAUW,QAAWoK,GAAmB8C,GAAqBrC,GAAyBE,KAEjItK,GAAkB2J,GAAmBlK,EAAOF,SAAWP,GAAuBoL,GAAyBE,GAAoC,iBAAf5L,KAC5HgO,GAAmBD,GAAqBjC,EAAQjL,SAAWP,GAAuBoL,GAAyBE,GAAoC,iBAAf5L,KAEhIoM,GAAwBV,GAAyBS,EAAYtL,SAAWoK,GAAmBW,IAAqF,IAAhE,CAAC,eAAgB,sBAAsB7E,QAAQ/G,MAC/J4M,GAAqBhB,GAAsBe,EAAU9L,SAAW6K,KAEhEe,GAAmBP,GAAqBM,EAAQ3L,SAAWoK,GAAiC,iBAAfjL,KAC7EqM,GAAyBC,GAA2BC,EAAc1L,SAAWoK,GAAiC,uBAAfjL,KAE/F+M,GAAkBe,GAAoBhB,EAAOjM,SAAW+K,GAQrDtL,GAAsB2K,GAAmBS,GAAyBE,GAGnEX,GAAmBS,GAAyBE,GAAoC,iBAAf5L,KACjE+N,GAAqBrC,GAAyBE,GAAoC,iBAAf5L,IAQnE0L,IAAyBE,GAAoC,iBAAf5L,IAC9CkM,IAAqBN,GAAoC,iBAAf5L,EAEzB,iBAAfA,EACK,EAAKmO,gBACY,uBAAfnO,EACF,EAAKoO,sBAEL,EAAKC,qBAEJzC,EAEAkC,OAAL,EACE,EAAKG,eAFL,EAAKC,kBAjBO,iBAAflO,EACK,EAAKsO,gBAEL,EAAK5L,eARN,EAAK6L,kBALb,kBAAC,IAAD,CAAc/L,KAAK,OAngCL,IAIdgM,EADehP,EAAdP,WACmBG,IAAI,UAJV,OAKlB,EAAKqP,mBAAoI,IAAhH,CAAC,gBAAiB,mBAAoB,cAAe,eAAgB,sBAAsB1H,QAAQyH,GAE5H,EAAK7O,MAAQ,CACXO,UAAW,GACXa,OAAQ,GACRoL,YAAa,GACbQ,UAAW,GACXG,OAAQ,GACRN,QAAS,GACTV,QAAS,GACTS,cAAe,GAEfjM,kBAAmB,EACnB2K,eAAgB,EAChBW,kBAAmB,EACnBF,qBAAsB,EACtBoC,gBAAiB,EACjB5B,iBAAkB,EAClB6B,iBAAkB,EAClBzB,uBAAwB,EAExBjL,iBAAiB,EACjBC,cAAc,EACd8K,oBAAoB,EACpBQ,iBAAiB,EACjBG,cAAc,EACdN,eAAe,EACfuB,eAAe,EACf3B,qBAAqB,EAErB1L,YAAa,GACbuK,SAAU,GACVS,eAAgB,GAChBE,YAAa,GACb8B,UAAW,GACXe,WAAY,GACZd,WAAY,GACZC,iBAAkB,GAElBpD,YAAa,GAEb7K,KAAM,YAENwK,iBAAiB,GAGnB,EAAK1K,QAAU,CACb,UAAa,EACb,OAAU,EACV,QAAW,EACX,YAAe,EACf,UAAa,EACb,OAAU,EACV,eAAkB,EAClB,QAAW,GAGb,EAAK4K,YAAc,GA9DD,E,gEAkEE,IAAD,OACfmE,EAAoBlN,KAAKkN,kBADV,EAEYlN,KAAK/B,MAA/BP,EAFc,EAEdA,WAAYe,EAFE,EAEFA,WAEbf,EAAWG,IAAI,cACE,iBAAfY,EACFuB,KAAKoN,cAELpN,KAAKC,aAEEvC,EAAWG,IAAI,YAAcqP,EACnB,iBAAfzO,EACFuB,KAAKqN,cACmB,uBAAf5O,EACTuB,KAAKsN,oBAELtN,KAAKuN,mBAEE7P,EAAWG,IAAI,kBAAoBqP,EAC5ClN,KAAKwN,gBACI9P,EAAWG,IAAI,eAAiBqP,EACzClN,KAAKyN,aACKzN,KAAK5B,MAAMO,UAAUW,QAC/BU,KAAKT,gBAGP/C,OAAOkR,WAAa,SAACvQ,GAEnB,GADAlB,QAAQC,IAAIiB,GACG,aAAXA,EAAEwE,OACJ1F,QAAQC,IAAI,EAAK6M,aACb,EAAKA,YAAYzJ,QAAU,EAAKyJ,YAAY,EAAKA,YAAYzJ,OAAS,IAAI,CAC5E,IACE,EAAKyJ,YAAY,EAAKA,YAAYzJ,OAAS,KAC3C,MAAOnC,GACPlB,QAAQ0R,MAAMxQ,GAGhB,EAAK4L,YAAc,EAAKA,YAAY6E,MAAM,EAAG,EAAK7E,YAAYzJ,OAAS,KAO7E9C,OAAO0D,iBAAiB,SAAUF,KAAK9B,e,6CAIvC1B,OAAO2D,oBAAoB,SAAUH,KAAK9B,e,2CAItC1B,OAAOC,WACXD,OAAOG,SAAS,EAAGqD,KAAK7B,QAAQ6B,KAAK5B,MAAMC,S,yKAkBjB2B,KAAK/B,MAA1BP,E,EAAAA,WAAY0C,E,EAAAA,M,SAEIA,EAAM,4BAA6B,CACtDC,YAAaC,OAAO5C,EAAWG,IAAI,iB,OAGrC0C,GAJIA,E,QAIc,GAElBP,KAAKlB,SAAS,CACZC,kBAAmBwB,EAAQ1B,GAC3BO,YAAamB,EAAQ/C,MACrBsC,iBAAiB,EACjBzB,KAAM,WACL,WACD,EAAKW,gB,gRAKmBgB,KAAK/B,MAA1BP,E,EAAAA,WAAY0C,E,EAAAA,M,SAEIA,EAAM,4BAA6B,CACtDC,YAAaC,OAAO5C,EAAWG,IAAI,iB,OAGrC0C,GAJIA,E,QAIc,GAElBP,KAAKlB,SAAS,CACZC,kBAAmBwB,EAAQ1B,GAC3BO,YAAamB,EAAQ/C,MACrBsC,iBAAiB,IAChB,WACD,EAAKqJ,iB,qRAKmBnJ,KAAK/B,MAA1BP,E,EAAAA,WAAY0C,E,EAAAA,M,SAECA,EAAM,yBAA0B,CAChDyN,SAAUvN,OAAO5C,EAAWG,IAAI,c,OAGlCqB,GAJIA,E,QAIQ,GAEZc,KAAKlB,SAAS,CACZ4K,eAAgBxK,EAAKL,GACrB8K,SAAUzK,EAAK1B,MACfuC,cAAc,IACb,WACD,EAAK+J,sB,gRAKmB9J,KAAK/B,MAA1BP,E,EAAAA,WAAY0C,E,EAAAA,M,SAECA,EAAM,yBAA0B,CAChDyN,SAAUvN,OAAO5C,EAAWG,IAAI,c,OAGlCqB,GAJIA,E,QAIQ,GAEZc,KAAKlB,SAAS,CACZ4K,eAAgBxK,EAAKL,GACrB8K,SAAUzK,EAAK1B,MACfuC,cAAc,IACb,WACD,EAAK6J,iB,sRAKmB5J,KAAK/B,MAA1BP,E,EAAAA,WAAY0C,E,EAAAA,M,SAECA,EAAM,yBAA0B,CAChDyN,SAAUvN,OAAO5C,EAAWG,IAAI,c,OAGlCqB,GAJIA,E,QAIQ,GAEZc,KAAKlB,SAAS,CACZ4K,eAAgBxK,EAAKL,GACrB8K,SAAUzK,EAAK1B,MACfuC,cAAc,IACb,WACD,EAAK8J,uB,uQAKmB7J,KAAK/B,MAA1BP,E,EAAAA,W,EAAY0C,MAEjBJ,KAAKlB,SAAS,CACZqL,qBAAsB7J,OAAO5C,EAAWG,IAAI,kBAC5CgN,oBAAoB,IACnB,WACD,EAAKc,mB,oQAKmB3L,KAAK/B,MAA1BP,E,EAAAA,W,EAAY0C,MAEjBJ,KAAKlB,SAAS,CACZuL,kBAAmB/J,OAAO5C,EAAWG,IAAI,eACzCwN,iBAAiB,IAChB,WACD,EAAKa,gB,iRAIYxM,E,+BAAE,GAErBM,KAAKlB,SAAS,CACZgB,iBAAiB,I,SAGGE,KAAK/B,MAAMmC,MAAM,wBAAyB,CAC9DI,SAAU,EACVd,IACAe,MAAO,M,OAHL9B,E,OAMJqB,KAAKlB,SAAS,CACZgB,iBAAiB,EACjBnB,UAAWA,EAAU+B,Q,8QAIPhB,E,+BAAE,GAClBM,KAAKlB,SAAS,CACZiB,cAAc,I,SAGGC,KAAK/B,MAAMmC,MAAM,qBAAsB,CACxDO,WAAYX,KAAK5B,MAAMW,kBACvBW,M,OAFEF,E,OAKJQ,KAAKlB,SAAS,CACZiB,cAAc,EACdP,OAAQA,EAAOkB,Q,+QAIAhB,E,+BAAE,GACnBM,KAAKlB,SAAS,CACZ2N,eAAe,I,SAGGzM,KAAK/B,MAAMmC,MAAM,sBAAuB,CAC1DO,WAAYX,KAAK5B,MAAMW,kBACvBW,M,OAFE6K,E,OAKJvK,KAAKlB,SAAS,CACZ2N,eAAe,EACflC,QAASA,EAAQ7J,MACjBrC,KAAM,Y,uIAgCR7B,OAAO6M,QAAQyE,UAAU,KAAM,Q,8KAwETpO,E,+BAAE,GACxBM,KAAKlB,SAAS,CACZ+L,oBAAoB,I,SAGE7K,KAAK/B,MAAMmC,MAAM,2BAA4B,CACnE2N,QAAS/N,KAAK5B,MAAMsL,eACpBhK,M,OAFEkL,E,OAKJ5K,KAAKlB,SAAS,CACZ+L,oBAAoB,EACpBD,YAAaA,EAAYlK,MACzBrC,KAAM,iB,+QAISqB,E,+BAAE,GACnBM,KAAKlB,SAAS,CACZoM,eAAe,I,SAGGlL,KAAK/B,MAAMmC,MAAM,sBAAuB,CAC1D2N,QAAS/N,KAAK5B,MAAMsL,eACpBhK,M,OAFEuL,E,OAKJjL,KAAKlB,SAAS,CACZoM,eAAe,EACfD,QAASA,EAAQvK,MACjBrC,KAAM,Y,uQAKR2B,KAAKlB,SAAS,CACZgM,qBAAqB,I,SAGF9K,KAAK/B,MAAMmC,MAAM,4BAA6B,CACjE2N,QAAS/N,KAAK5B,MAAMsL,eACpBjJ,MAAO,M,OAFLuN,E,OAKJhO,KAAKlB,SAAS,CACZgM,qBAAqB,EACrBE,cAAegD,EAAStN,MACxBrC,KAAM,mB,2IA0CO,IAAD,SAC8B2B,KAAK5B,MAA1CoB,EADO,EACPA,OAIHoB,GALU,EACCb,aADD,EACemJ,YAImC,OAF3ClJ,KAAK/B,MAAnBP,WAE2BG,IAAI,uBAEtC,OACE,kBAAC,IAAD,CAAOgD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAAOH,EAAmB,kBAAC,IAAD,CAAQ9C,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKoJ,QAAzD,yFAA4F,MAA/I,mFAAqKpJ,KAAKiO,kBACvL,kBAAC,IAAD,KACGzO,EAAOwB,KAAI,SAAA9B,GAAI,OACd,kBAAC,IAAD,CAAMnB,QAAS,kBAAM,EAAKkB,WAAWC,IAAO7B,IAAK,OAAS6B,EAAKL,IAC5DK,EAAK1B,UAGRgC,EAAOF,OAAwC,KAA/B,kBAAC,IAAD,yG,sCAOR,IAAD,SACgBU,KAAK5B,MAA7BmM,EADQ,EACRA,QAIH3J,GALW,EACCsI,YAIgD,OAF3ClJ,KAAK/B,MAAnBP,WAE2BG,IAAI,uBAEtC,OACE,kBAAC,IAAD,CAAOgD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAAOH,EAAmB,kBAAC,IAAD,CAAQ9C,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKoJ,QAAzD,yFAA4F,MAA/I,0FACb,kBAAC,IAAD,KACGmB,EAAQvJ,KAAI,SAAAgJ,GAAM,OACjB,kBAAC,IAAD,CAAMjM,QAAS,kBAAM,EAAKgM,aAAaC,IAAS3M,IAAK,SAAW2M,EAAOnL,IACpEmL,EAAOxM,UAGV+M,EAAQjL,OAA0C,KAAjC,kBAAC,IAAD,qH,sCAqCT,IACTb,EAAcuB,KAAK/B,MAAnBQ,WACP,OAAIuB,KAAKkN,kBACY,iBAAfzO,EACK,iCACiB,uBAAfA,EACF,GAEA,2EAIJ,K,wCAEW,IAAD,SACgBuB,KAAK5B,MAA/BO,EADU,EACVA,UAAWuK,EADD,EACCA,YAClB,OACE,kBAAC,IAAD,CAAOrI,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,yFAA0Cd,KAAKiO,kBAC5D,kBAAC,IAAD,KACGtP,EAAUzB,QAAO,SAAAf,GAChB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChDlI,KAAI,SAAAT,GAAO,OACZ,kBAAC,IAAD,CAAMxC,QAAS,kBAAM,EAAKQ,cAAcgC,EAAQ1B,GAAI0B,EAAQ/C,QAAQH,IAAK,UAAYkD,EAAQ1B,IAC1F0B,EAAQ/C,UAGVmB,EAAUzB,QAAO,SAAAf,GAChB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChD5J,OAAwC,KAA9B,kBAAC,IAAD,mG,2KAMFI,E,+BAAE,GACrBM,KAAKlB,SAAS,CACZuM,iBAAiB,I,SAGGrL,KAAK/B,MAAMmC,MAAM,wBAAyB,CAC9D8N,cAAelO,KAAK5B,MAAM+L,qBAC1BzK,IACAe,MAAO,M,OAHL2K,E,OAMJpL,KAAKlB,SAAS,CACZuM,iBAAiB,EACjBD,UAAWA,EAAU1K,MACrBrC,KAAM,c,gQAKR2B,KAAKlB,SAAS,CACZ0M,cAAc,I,SAGGxL,KAAK/B,MAAMmC,MAAM,qBAAsB,CACxD+N,WAAYnO,KAAK5B,MAAMiM,kBACvB5J,MAAO,M,OAFL8K,E,OAKJvL,KAAKlB,SAAS,CACZ0M,cAAc,EACdD,OAAQA,EAAO7K,MACfrC,KAAM,W,iJAyLa,IAAD,SACe2B,KAAK5B,MAAjCwM,EADa,EACbA,YAAa1B,EADA,EACAA,YACbxL,EAAcsC,KAAK/B,MAAnBP,WACP,OACE,kBAAC,IAAD,CAAOmD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAA4C,MAArCrD,EAAWG,IAAI,mBAA6B,kBAAC,IAAD,CAAQC,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKoJ,QAAzD,mFAA2F,MAAvK,wHACb,kBAAC,IAAD,KACGwB,EAAY1N,QAAO,SAAAf,GAClB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChDlI,KAAI,SAAAoN,GAAU,OACf,kBAAC,IAAD,CAAMrQ,QAAS,kBAAM,EAAK0N,iBAAiB2C,EAAWvP,GAAIuP,EAAW5Q,QAAQH,IAAK,YAAc+Q,EAAWvP,IACxGuP,EAAW5Q,UAIboN,EAAY1N,QAAO,SAAAf,GACpB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChD5J,OAAgD,KAAtC,kBAAC,IAAD,mJ,sCAOH,IAAD,SACgBU,KAAK5B,MAA7B6M,EADQ,EACRA,QACAvN,GAFQ,EACCwL,YACKlJ,KAAK/B,MAAnBP,YACP,OACE,kBAAC,IAAD,CAAOmD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAA4C,MAArCrD,EAAWG,IAAI,mBAA6B,kBAAC,IAAD,CAAQC,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKuJ,aAAzD,mFAAgG,MAA5K,oFACb,kBAAC,IAAD,KACG0B,EAAQjK,KAAI,SAAAqN,GAAM,OACjB,kBAAC,IAAD,CAAMtQ,QAAS,kBAAM,EAAK6N,aAAayC,EAAOxP,GAAIwP,EAAO7Q,QAAQH,IAAK,SAAWgR,EAAOxP,IACrFwP,EAAO7Q,UAIVyN,EAAQ3L,OAAsC,KAA7B,kBAAC,IAAD,6F,4CAOH,IAAD,SACgBU,KAAK5B,MAAnC4M,EADc,EACdA,cAAe9B,EADD,EACCA,YACfxL,EAAcsC,KAAK/B,MAAnBP,WAEP,OACE,kBAAC,IAAD,CAAOmD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAA4C,MAArCrD,EAAWG,IAAI,mBAA6B,kBAAC,IAAD,CAAQC,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKoJ,QAAzD,mFAA2F,MAAvK,gGACb,kBAAC,IAAD,KACG4B,EAAc9N,QAAO,SAAAf,GACpB,OAAOY,OAAOZ,EAAEiJ,MAAMvF,oBAAoBuB,MAAM8H,MAC/ClI,KAAI,SAAAsN,GAAO,OACZ,kBAAC,IAAD,CAAMvQ,QAAS,kBAAM,EAAK+N,mBAAmBwC,EAAQzP,GAAIyP,EAAQlJ,OAAO/H,IAAK,UAAYiR,EAAQzP,IAC9FyP,EAAQlJ,SAIV4F,EAAc9N,QAAO,SAAAf,GACtB,OAAOY,OAAOZ,EAAEiJ,MAAMvF,oBAAoBuB,MAAM8H,MAC/C5J,OAA0C,KAAhC,kBAAC,IAAD,+G,wCAQD,IAAD,SACgBU,KAAK5B,MAA/BgN,EADU,EACVA,UAAWlC,EADD,EACCA,YACXxL,EAAcsC,KAAK/B,MAAnBP,WACP,OACE,kBAAC,IAAD,CAAOmD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAAmD,OAA5CrD,EAAWG,IAAI,yBAAoC,kBAAC,IAAD,CAAQC,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKoJ,QAAzD,uHAAiG,MAApL,4GACb,kBAAC,IAAD,KACGgC,EAAUlO,QAAO,SAAAf,GAChB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChDlI,KAAI,SAAAuN,GAAO,OACZ,kBAAC,IAAD,CAAMxQ,QAAS,kBAAM,EAAKiO,cAAcuC,EAAQ1P,GAAI0P,EAAQ/Q,QAAQH,IAAK,UAAYkR,EAAQ1P,IAC1F0P,EAAQ/Q,UAGV4N,EAAUlO,QAAO,SAAAf,GAClB,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChD5J,OAA8C,KAApC,kBAAC,IAAD,uI,qCAMJ,IAAD,SACgBU,KAAK5B,MAA5BmN,EADO,EACPA,OAAQrC,EADD,EACCA,YACRxL,EAAcsC,KAAK/B,MAAnBP,WACP,OACE,kBAAC,IAAD,CAAOmD,OAAQ,kBAAC,IAAD,CAAQC,KAAK,YAAYC,MAAgD,OAAzCrD,EAAWG,IAAI,sBAAiC,kBAAC,IAAD,CAAQC,UAAU,SAASgD,KAAK,WAAW/C,QAASiC,KAAKoJ,QAAzD,2GAA+F,MAA/K,gGACb,kBAAC,IAAD,KACGmC,EAAOrO,QAAO,SAAAf,GACb,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChDlI,KAAI,SAAAkJ,GAAK,OACV,kBAAC,IAAD,CAAMnM,QAAS,kBAAM,EAAKkM,YAAYC,IAAQ7M,IAAK,QAAU6M,EAAMrL,IAChEqL,EAAM1M,UAGR+N,EAAOrO,QAAO,SAAAf,GACf,OAAOY,OAAOZ,EAAEqB,OAAOqC,oBAAoBuB,MAAM8H,MAChD5J,OAAyC,KAA/B,kBAAC,IAAD,yG,+BAiJV,IAAD,EAeJU,KAAK5B,MANPW,GATM,EAGNJ,UAHM,EAINa,OAJM,EAMNJ,YANM,EAONuK,SAPM,EASN5K,mBACA2K,EAVM,EAUNA,eACAS,EAXM,EAWNA,qBACAE,EAZM,EAYNA,kBACAkC,EAbM,EAaNA,gBAIK7O,EAAcsC,KAAK/B,MAAnBP,WAGH8Q,GADkB9Q,EAAWG,IAAI,cACrB,IAchB,OAPE2Q,GALEzP,GAAsB2K,GAAmBS,GAAyBoC,GAE3D7C,GAAmBS,GAAyBoC,EAE5CpC,IAAyBE,EACtB,UACHA,EACG,QAEA,UANA,aAFA,OAYZ,kBAAC,IAAD,CAAOxL,GAAImB,KAAK/B,MAAMY,IACpB,kBAAC,EAAD,CAAsBnB,WAAYA,EAAYD,WAAW,EAAMJ,IAAKmR,EAAWpR,SAAU4C,KAAKP,oBAE7FO,KAAKmM,aACN,kBAAC,IAAD,CAAasC,SAAS,UACnBzO,KAAK5B,MAAMyK,gBAAkB,kBAAC,IAAD,CAAQ9K,QAAS,kBAAM/B,KAAqB8B,UAAU,wBAAuB,kBAAC,KAAD,OAAmC,W,GA9kC5GuD,IAAMC,WCb7BoN,G,4MAGnBC,aAAe,WAAO,IACfjR,EAAc,EAAKO,MAAnBP,WAEL,GAAImE,IAAOkB,SAAS,wBAAyB,CAC3C,IAAI6L,EAAiBlR,EAAWG,IAAI,oBAAsB,OAEtD0G,EAAM7G,EAAWG,IAAI,OACrBgR,EAAOnR,EAAWG,IAAI,QACtBiR,EAA8C,IAArCxO,OAAO5C,EAAWG,IAAI,WAC/BkR,EAAarR,EAAWG,IAAI,cAC5BmR,EAAWtR,EAAWuR,OAAO,YAE7BC,EAAS,GAiBb,GAfIN,IAAgBM,EAAOC,gBAAkBP,GACzCrK,IAAK2K,EAAO3K,IAAMA,GAClBsK,IAAMK,EAAOL,KAAOA,GAExBG,EAAS/J,SAAQ,SAACmK,EAASjK,GACzB,IACEiK,EAAU5I,KAAKC,MAAM4I,mBAAmBD,IACxC,MAAOjS,GACPiS,EAAU,GAEZJ,EAAS7J,GAAKiK,KAGZJ,EAAS1P,SAAQ4P,EAAOF,SAAWA,GAEnCD,EACF,IACEA,EAAavI,KAAKC,MAAMsI,GACxBG,EAAOH,WAAaA,EACpB,MAAO5R,GACP+R,EAAOH,WAAa,GAKxBG,EAAOJ,OAASA,EAEhBjN,IAAOC,KAAK,uBAAwBoN,GAAQlM,MAAK,SAAAC,GAC/C,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,8KAAmCjG,WAI1D,EAAKc,MAAMmF,UAAU,+PAAmD,CACtEC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAK2O,aACdjR,WAAYA,EACZsE,SAAS,sMACTC,WAAW,kF,GAnE0BZ,IAAMC,W,qKCkChCgO,I,yDAEnB,WAAarR,GAAQ,IAAD,uBAClB,cAAMA,IA2BRsR,SA5BoB,sBA4BT,sBAAApQ,EAAA,0DACL,EAAKf,MAAMoR,YADN,mBAEF,EAAKC,QAFH,yCAGE,EAAKC,aAHP,oCAMP,EAAK5Q,SAAS,CACZ6Q,SAAS,IAPJ,mBASA,GATA,2CA5BS,EAkFpBC,WAAa,SAACC,GACPrT,OAAOC,WACVT,IAEE,EAAK8T,KAAKvK,QAAQwK,sBAEpB,EAAKL,UAAUG,EAAMlQ,OAAOC,OAAO,GAErC,EAAKd,SAAS,CACZoK,YAAa2G,EAAMlQ,OAAOC,SA3FV,EA2KpBoQ,kBAAoB,WAClB,OAAO,EAAKtR,aAAa,CACvB,kBAAqB,EAAKN,MAAM6R,mBA7KhB,EA+OpBC,WAAa,WAAc,IAAbC,EAAY,uDAAP,GACjB,GAAIA,EAAKtR,GAAI,CACX,IAAIoR,EAAe,YAAO,EAAK7R,MAAM6R,iBACjC,EAAKG,eAAeD,GACtBF,EAAgBI,OAAOJ,EAAgBzK,QAAQ2K,EAAKtR,IAAK,GAEzDoR,EAAgBjH,KAAKmH,EAAKtR,IAG5B,EAAKC,SAAS,CAACmR,sBAxPC,IAKdH,EAFiB7R,EAAdP,WAEeG,IAAI,QACrBiS,EAAKvK,UAASuK,EAAKvK,QAAU,IAGlC,IAAI7E,EAAQoP,EAAKpP,MATC,OAWlB,EAAKoP,KAAOA,EAEZ,EAAKQ,eAAiB,GACtB,EAAKlS,MAAQ,CACXsC,QACAiP,UAASG,EAAKvK,QAAQgL,cACtBf,YAAa,EAAKM,KAAKvK,QAAQgL,eAAiB,GAChDC,aAAcC,QAAQ,EAAKX,KAAKvK,QAAQmL,eACxCxH,YAAa,GACbyH,SAAU,EACVC,YAAapU,OAAOqU,WACpBZ,gBAAiB,IAGnB,EAAKR,SAAU,EAzBG,E,wDAyCa,IAAD,OAArB/P,EAAqB,uDAAnB,GAAIoR,EAAe,wDAE9B9Q,KAAKyP,SAAU,EAFe,IAGvB/R,EAAcsC,KAAK/B,MAAnBP,WAGH8R,EAAc9P,GAAKoR,EAAUpT,EAAWG,IAAI,kBAAoBmC,KAAK5B,MAAMoR,YAC1EtG,EAAelJ,KAAK5B,MAApB8K,YAED3E,EAAM,IAAIwM,IAAIvB,GAElBN,EAAS,CACPxP,EAAGA,GAAQwJ,GAOb,OAJA9C,OAAO4K,KAAK9B,GAAQjK,SAAQ,SAAA5H,GAAG,OAAIkH,EAAI0M,aAAaC,OAAO7T,EAAK6R,EAAO7R,OAIhE8T,aAAM5M,GAAKvB,KAAX,uCAAgB,WAAOC,GAAP,mBAAA9D,EAAA,sEACT8D,EAAImO,OADK,OACrBnO,EADqB,OAEjBvC,EAAQhB,GAAKoR,EAAW7N,EAAI6M,KAAKpP,OAAS,GAAOuC,EAAIvC,OAAS,GAE9DiP,KAAUjQ,IAAKoR,IAAiBL,QAAQxN,EAAIoO,UAC5C7B,EAAc9P,GAAKoR,EAAU7N,EAAI6M,KAAKvK,QAAQgL,cAAiBtN,EAAIqO,eAAiB,GAExF,EAAKxS,SAAS,CACZ4B,MAAM,GAAD,mBAAM,EAAKtC,MAAMsC,OAAjB,YAA2BA,IAChCiP,UACAH,gBAGF,EAAKC,SAAU,EAbM,2CAAhB,uDAcJtM,OAAM,SAAAhG,GACP,EAAK2B,SAAS,CACZ6Q,SAAS,IAEX,EAAKF,SAAU,O,0CAiBG,IAAD,OACf8B,EAAOnV,SAASoV,cAAc,SAC9BD,GACFvR,KAAKlB,SAAS,CACZ6R,SAAUY,EAAKE,cAInBjV,OAAOkV,SAAW,WAChB,IAAIH,EAAOnV,SAASoV,cAAc,SAC9BZ,EAAcpU,OAAOqU,YAErBD,GAAe,KAAO,EAAKxS,MAAMwS,YAAc,KAAOA,EAAc,KAAO,EAAKxS,MAAMwS,aAAe,OACvG,EAAKe,iBAAkB,GAGrBJ,GACF,EAAKzS,SAAS,CACZ6R,SAAUY,EAAKE,YACfb,mB,2CAON,GAAI5Q,KAAK2R,gBAAiB,CACxB,IAAIJ,EAAOnV,SAASoV,cAAc,SAClCxR,KAAK2R,iBAAkB,EACnBJ,GACFvR,KAAKlB,SAAS,CACZ6R,SAAUY,EAAKE,iB,6CAOrBjV,OAAOkV,SAAW,O,mCAGE,IAAVjQ,EAAS,uDAAJ,GACf,OAAQA,GACN,IAAK,SACH,OAAO,kBAAC,KAAD,MACT,QACE,OAAO,Q,yCAIe,IAAVA,EAAS,uDAAJ,GACrB,OAAQA,GACN,IAAK,OACH,OAAO,kBAAC,KAAD,MACT,IAAK,SACH,OAAO,kBAAC,KAAD,MACT,QACE,OAAO,Q,kCAIqB,IAAvBmQ,EAAsB,uDAAf,EAAGC,EAAY,uDAAJ,GAC3B,OAAO7R,KAAKtB,aAAa,CACvB,eAAkBmT,EAClB,iBAAoBD,M,qCAIG,IAAbrM,EAAY,uDAAJ,GACpB,OAAOvF,KAAK/B,MAAMS,aAAX,eACF6G,EADE,CAEL,UAAavF,KAAK8P,KAAKnO,KACvB,UAAa3B,KAAK8P,KAAK1K,MAAQ,Q,sCAUP,IAAD,OAAZ+K,EAAY,uDAAP,GAAI2B,EAAG,uCACrBC,EAAU5B,EAAK4B,SAAW,GACzBA,EAAQzS,SAAQyS,EAAU/R,KAAK8P,KAAKvK,QAAQwM,SAAW,IAFnC,IAGlBnB,EAAe5Q,KAAK5B,MAApBwS,YACP,OACE,yBAAK9S,UAAU,WACZiU,EAAQ/Q,KAAI,SAACgR,EAAQ7M,GAEpB,IAAI9H,EAAM,UAAY8H,EAAI,IAAM2M,EAC5B7Q,EAAO2P,EAAc,KAAOA,EAAc,IAAM,IAAM,KACtDR,EAAiB,EAAKA,eAAeD,GAGzC,IAAI6B,EAAOtQ,SAAUsQ,EAAOtQ,OAAOC,KAqCjC,OAAO,KAnCP,IAAIsQ,EAAqBD,EAAOtQ,OAAOwQ,gBAAkBF,EAAOtQ,OAAOwQ,eAAeC,MAAQH,EAAOtQ,OAAOwQ,eAAeC,MAAQH,EAAOG,MACtIC,EAAqBJ,EAAOtQ,OAAOwQ,gBAAkBF,EAAOtQ,OAAOwQ,eAAeG,MAAQL,EAAOtQ,OAAOwQ,eAAeG,MAAQL,EAAOtQ,OAAO2Q,MAC7IC,EAAoBN,EAAOtQ,OAAOwQ,gBAAkBF,EAAOtQ,OAAOwQ,eAAezQ,KAAOuQ,EAAOtQ,OAAOwQ,eAAezQ,KAAOuQ,EAAOvQ,KAEvI,OAAQuQ,EAAOtQ,OAAOC,MACpB,IAAK,OACH,OAAQ,yBAAK7D,UAAU,cAAcT,IAAKA,GACpC,kBAAC,IAAD,CAAQ0E,OAAQ,EAAKwQ,iBAAiBP,EAAOvQ,MAAOR,KAAMA,EAAMlD,QAAS,kBAAMiU,EAAOtQ,OAAOmQ,QAAU,EAAKW,UAAUrC,EAAKtR,GAAImT,EAAOtQ,OAAOmQ,SAAW,MAAMY,WAAS,EAAC3R,KAAMkR,EAAOG,OAAS,WAC3LH,EAAOtQ,OAAO2Q,QAGzB,IAAK,YACH,OACE,yBAAKvU,UAAU,cAAcT,IAAKA,GAChC,kBAAC,IAAD,CAAMqV,IAAI,sBAAsB3O,KAAMiO,EAAOtQ,OAAOiR,MAAQ,GAAIhT,OAAO,UACrE,kBAAC,IAAD,CAAQoC,OAAQ,EAAKwQ,iBAAiBP,EAAOvQ,MAAOR,KAAMA,EAAMwR,WAAS,EAAC3R,KAAMkR,EAAOG,OAAS,WAC7FH,EAAOtQ,OAAO2Q,SAKzB,IAAK,SACH,OAAI,EAAKvC,KAAKvK,QAAQqN,cAElB,yBAAK9U,UAAU,cAAcT,IAAKA,GAChC,kBAAC,IAAD,CAAQ0E,OAAQqO,GAAiBkC,EAAoB,EAAKC,iBAAiBD,GAA0D,EAAKC,iBAAiBP,EAAOvQ,MAAO1D,QAAS,kBAAM,EAAKmS,WAAWC,IAAOlP,KAAMA,EAAMwR,WAAS,EAAC3R,KAAMsP,EAAiB6B,EAAqBD,EAAOG,OAAS,WAC9R/B,EAAiBgC,EAAqBJ,EAAOtQ,OAAO2Q,QAKpD,Y,iCAWXlC,GACV,OAAIA,EAAK4B,SAAW5B,EAAK4B,QAAQzS,OAAe6Q,EAAK4B,QAC9C/R,KAAK8P,KAAKvK,QAAQwM,SAAW,K,uCAgBZ,IAAV5B,EAAS,uDAAJ,GACnB,QAAIA,EAAKtR,KACiD,IAAjDmB,KAAK5B,MAAM6R,gBAAgBzK,QAAQ2K,EAAKtR,M,+BAOxC,IAAD,SACiBmB,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WADH,EAEesC,KAAK5B,MAAvBsC,EAFG,EAEHA,MAAOiP,EAFJ,EAEIA,QACRzG,EAAclJ,KAAK5B,MAAM8K,YAAYrJ,oBAMzC,IAAKG,KAAK8P,KAAKvK,QAAQwK,qBAAsB,CAC3C,IAAI8C,EAAoBnS,EAAMxD,QAAO,SAACiT,EAAMhL,GAC1C,QAAI,EAAK2K,KAAKvK,QAAQwK,uBACtBI,EAAK2C,MAAQ3N,GAC2D,IAAjEpI,OAAOoT,EAAK3S,OAAOqC,oBAAoB2F,QAAQ0D,OAGpD6J,EAA0BrS,EAAMxD,QAAO,SAACiT,EAAMhL,GAEhD,OADAgL,EAAK2C,MAAQ3N,GACiE,IAAvEpI,OAAOoT,EAAK3I,aAAa3H,oBAAoB2F,QAAQ0D,MAG9DxI,EAAK,YAAOmS,GACZE,EAAwB9N,SAAQ,SAACkL,GAC1B0C,EAAkBjU,MAAK,SAAAuG,GAAC,OAAIA,EAAE2N,QAAU3C,EAAK2C,UAChDpS,EAAMsI,KAAKmH,MAKjB,IAAI6C,EAAWhT,KAAK8P,KAAKnO,KACrBmO,EAAO,KA9BH,EA+BuC9P,KAAK5B,MAA/CuS,EA/BG,EA+BHA,SAAUC,EA/BP,EA+BOA,YAAaX,EA/BpB,EA+BoBA,gBAExBgD,EAAQjT,KAAK8P,KAAKvK,QAAQ2N,aAAelT,KAAK8P,KAAKvK,QAAQ2N,aAAajW,MAAM,KAAO,GACpFgW,EAAM3T,SAAQ2T,EAAQ,CAAC,GAAI,IAEhC,IACME,EAAgB,CAACC,OADFzC,EAAWsC,EAAM,GAAMA,EAAM,IAAM,QAKxD,GAAIvS,EAAMpB,OACR,OAAQ0T,GACN,IAAK,cACHlD,EAAOpP,EAAMM,KAAI,SAACmP,EAAMhL,GAAP,OACf,kBAAC,IAAD,CACEpD,OAAQoO,EAAKkD,WAAa,kBAAC,IAAD,CAAQpS,KAAM,EAAK6O,KAAKvK,QAAQ+N,aAAe,GAAI7Q,IAAK0N,EAAKkD,aAAgB,KACvG7L,YAAa2I,EAAK3I,YAClB+L,UAAW,EAAKzD,KAAKvK,QAAQgO,UAC7BxP,KAAMoM,EAAKwC,KACXhT,OAAO,SACP+S,IAAI,sBACJrV,IAAK,YAAc8H,GACnBgL,EAAK3S,UAET,MACF,IAAK,QACH,IAAIgW,EAAS,GAEb9S,EAAMuE,SAAQ,SAACwO,EAAItO,GACjB,IAAIuO,EAAM,IACLvO,EAAI,GAAK,IAAM,IAClBuO,EAAI1K,KAAKtI,EAAMyE,IACXzE,EAAMyE,EAAI,GACZuO,EAAI1K,KAAKtI,EAAMyE,EAAI,IAEnBuO,EAAI1K,KAAK,OAIT0K,EAAIpU,QACNkU,EAAOxK,KAAK0K,MAIhB,IAAI/C,EAAWC,EAAc,IAAM,IAAM,IACzCd,EACE,kBAAC,QAAD,CAAM6D,OAAK,GACT,kBAAC,OAAD,KACCjT,EAAMM,KAAI,SAACmP,EAAM2B,GAChB,GAAI3B,EAAM,CAER,IAAIyD,EAAmB,EAAKC,WAAW1D,GAAMvR,MAAK,SAAAkV,GAAC,OAAIA,EAAEpS,QAA4B,WAAlBoS,EAAEpS,OAAOC,QACtEoS,EAAiB,CACrBC,aAAc,EAAK1D,eAAeH,EAAKtR,KAAO,EAC9CoV,UAAU,EACVC,iBAAiB,EACjBC,YAAY,EACZC,gBAAgB,EAChBC,YAAY,GAGd,OACE,kBAAC,OAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGlX,IAAK,OAASyU,EAAI,IAAM3B,EAAKtR,IAAI,kBAAC,IAAD,CAAMiC,KAAK,SAAShD,UAAU,OAAOmD,KAAM0P,GAC/FR,EAAKqE,QAAU9O,MAAMC,QAAQwK,EAAKqE,QACjC,6BACC,EAAK1E,KAAKvK,QAAQqN,gBAAkBgB,EAAmB,kBAAC,IAAD,CAAUvM,eAAgB,EAAK+I,eAAeD,GAAO/S,SAAU,kBAAM,EAAK8S,WAAWC,IAAOrS,UAAU,mBAAqB,KACnL,kBAAC,KAAD,CAAU2W,YAAa,SAAAtY,GACrBA,EAAEuY,GAAG,UAAU,kBAAM,EAAKpE,eAAeH,EAAKtR,IAAM1C,EAAEwY,kBACrDpP,QAASwO,EACVhW,QAAS,kBAAM8D,IAAOC,KAAK,qBAAsB,CAC/C,OAAUqO,EAAKqE,OACf,YAAe,EAAKlE,eAAeH,EAAKtR,KAAO,MAG/CsR,EAAKqE,OAAOxT,KAAI,SAAAyB,GAAG,OAAK,yBAAK3E,UAAU,cAAa,yBAAK4E,MAAOyQ,EAAe1Q,IAAKA,EAAKmS,IAAI,yCAGhG,KACF,kBAAC,IAAD,CAAK9W,UAAU,gBACd,yBAAKA,UAAU,sBAAsBqS,EAAK3S,MAAQ,2BAAI2S,EAAK3S,OAAa,KACvE2S,EAAK3I,YAAc,0BAAM1J,UAAU,qBAClC,0BAAMA,UAAU,eAAeqS,EAAK3I,cAC5B,MAET,EAAKqN,cAAc1E,EAAM2B,EAAI,QAKlC,OAAQ,yBAAKhU,UAAU,mBA2DnCgS,EAAQ,kBAAC,IAAD,KAAS5G,EAAelJ,KAAK8P,KAAKvK,QAAQuP,wBAA0B9U,KAAK8P,KAAKvK,QAAQuP,wBAA0B,oIAA+B9U,KAAK8P,KAAKvK,QAAQwP,iBAAmB/U,KAAK8P,KAAKvK,QAAQwP,iBAAmB,iEAGnO,OACE,kBAAC,IAAD,CAAOlW,GAAIA,GACT,kBAAC,EAAD,CAAsBnB,WAAYA,EAAYC,MAAOqC,KAAK5B,MAAMoS,aAAe,kBAAC,IAAD,CAAa/B,SAAS,OAAM,kBAAC,IAAD,CAAQrR,SAAU4C,KAAK4P,cAA8B,OAChK,kBAAC,KAAD,CACEoF,UAAW,EACXrF,QAASA,EACTsF,OAAQ,yBAAKvS,MAvLE,CACnBE,UAAW,KAsL2B,kBAAC,IAAD,OAClC2M,SAAUvP,KAAKuP,SACf2F,UAAW,IAEX,yBAAKpX,UAAWqX,KAAW,eAAgB,CACzC,OAAUnV,KAAK5B,MAAMoS,gBAEpBV,IAGJ9P,KAAK8P,KAAKvK,QAAQqN,cAAgB,kBAAC,IAAD,CAAanE,SAAS,UACrD,yBAAK3Q,UAAU,uBACb,yBAAKA,UAAU,8BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQmD,KAAK,IAAIwR,WAAS,EAAC9U,MAAO,kBAAC,IAAD,KAAUsS,EAAgB3Q,QAAmBwB,KAAK,aAAY,kBAAC,KAAD,QAElG,kBAAC,IAAD,CAAKhD,UAAU,kBACb,kBAAC,IAAD,CAAQsX,SAAqC,IAA3BnF,EAAgB3Q,OAAc2B,KAAK,IAAIlD,QAASiC,KAAKgQ,kBAAmByC,WAAS,EAAC1Q,OAAQ/B,KAAKqV,WAAWrV,KAAK8P,KAAKvK,QAAQ+P,uBAAwBtV,KAAK8P,KAAKvK,QAAQgQ,qBAAuBvV,KAAK8P,KAAKvK,QAAQgQ,qBAAuB,4CAI/O,U,GAxdkBlU,IAAMC,YCjC9BkU,I,yLAGjBhZ,OAAOiZ,GAAGzS,MAAK,WACXxG,OAAOiZ,GAAGzU,IAAI,MAAO,CACjB0U,OAAQ,CAAC,MAAO,OAChBC,KAAM,U,+BAKL,IACFjY,EAAcsC,KAAK/B,MAAnBP,WACP,OACE,kBAAC,IAAD,CAAOmB,GAAImB,KAAK/B,MAAMY,IACpB,kBAAC,EAAD,CAAsBnB,WAAYA,IAClC,yBAAKmB,GAAG,MAAMf,UAAU,+B,GAhBYuD,IAAMC,YCI7BsU,G,4MAEnBC,QAAU,WACJhU,IAAOkB,SAAS,uBAClBlB,IAAOC,KAAK,sBAAuB,IAAIkB,MAAK,SAAAC,GAC1C,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,wPAAiDjG,MAGxE,EAAKc,MAAMmF,UAAU,wWAAuE,CAC1FC,WAAY,kB,uDAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAK6V,QACdnY,WAAYA,EACZsE,SAAS,8O,GAzB4BX,IAAMC,WCgChCwU,I,yDAEnB,WAAa7X,GAAQ,IAAD,8BAClB,cAAMA,IAwCR6E,SAAW,WACLjB,IAAOkB,SAAS,uBAClBlB,IAAOC,KAAK,sBAAuB,IAAIkB,MAAK,SAAAC,GAC1C,EAAKhF,MAAMS,aAAauE,MACvBE,OAAM,SAAAhG,GACP,EAAKc,MAAMmF,UAAU,wPAAiDjG,MAGxE,EAAKc,MAAMmF,UAAU,wWAAuE,CAC1FC,WAAY,kBAlDE,EAuFpB0S,QAvFoB,sBAuFV,kCAAA5W,EAAA,sDACJiJ,EAAO,GADH,cAGe,EAAK4N,OAHpB,4DAGCC,EAHD,SAIF,EAAK7X,MAAM8X,cAAcD,GAJvB,iCAKqB,EAAKE,aAAaF,GALvC,OAKJ7N,EAAK6N,GALD,+BAOJ7N,EAAK6N,GAAc,CACjBtI,OAAO,EACPyI,cAAe,wKACf/S,WAAY,iBAVV,+IAeR,EAAKpF,MAAMS,aAAa0J,GAfhB,gEArFR,EAAK4N,MAAQpZ,EAA6BqB,EAAMP,WAAWG,IAAI,UAAY,IAErC,QAAlCI,EAAMP,WAAWG,IAAI,WAAoB,EAAKmY,MAAQ,CAAC,OAAQ,QAAS,UAE5E,EAAKZ,SAAWxY,EAA6BqB,EAAMP,WAAWG,IAAI,aAAe,IAAIX,QAAO,SAACiC,GAAD,MAAa,QAANA,KACnG,EAAKkX,YAAmD,QAArCpY,EAAMP,WAAWG,IAAI,YACxC,EAAKO,MAAQ,CACX8X,cAAe,CACbI,OAAO,EACPpT,OAAO,EACPiD,MAAM,GAERsJ,SAAS,GAGX,EAAK8G,SAA8D,IAAnDjW,OAAO,EAAKrC,MAAMP,WAAWG,IAAI,cACjD,EAAK2Y,WAAa,EAAKvY,MAAMP,WAAWG,IAAI,gBAAkB,YAE9D,EAAK4Y,YAAc,CACjBC,QAAS,uCACTC,SAAU,oHACVC,OAAQ,uFAGc,YAApB,EAAKJ,WACP,EAAKA,WAAa,EAAKC,YAAYC,QACN,uBAApB,EAAKF,WACd,EAAKA,WAAa,EAAKC,YAAYC,QAAU,IAAM,EAAKD,YAAYG,OACvC,aAApB,EAAKJ,WACd,EAAKA,WAAa,EAAKC,YAAYE,SACN,yBAApB,EAAKH,WACd,EAAKA,WAAa,EAAKC,YAAYC,QAAU,IAAM,EAAKD,YAAYE,SACvC,WAApB,EAAKH,WACd,EAAKA,WAAa,EAAKC,YAAYG,OACN,QAApB,EAAKJ,aACd,EAAKA,WAAa,EAAKC,YAAYC,QAAU,IAAM,EAAKD,YAAYG,OAAS,IAAM,EAAKH,YAAYE,UArCpF,E,oEAuDM,IAAD,OACvB,OAAK3W,KAAKgW,MAAM1W,OAMTU,KAAKgW,MAAMhV,KAAI,SAACiV,EAAY9Q,GACjC,OAAO,kBAAC,IAAD,CAAU9H,IAAK,cAAgB8H,EAAG/H,SAAU,SAACD,GAClD,EAAK2B,SAAS,CACZoX,cAAc,eACT,EAAK9X,MAAM8X,cADH,eAEVD,EAAa9Y,EAAEwC,OAAOmF,aAG1BsQ,SAAU,EAAKiB,cAAsD,IAAvC,EAAKjB,SAAS5P,QAAQyQ,GAAoBnY,UAAU,gBAAgBuJ,gBAAgB,GAAO,EAAKwP,mBAAmBZ,OAbpJ,kBAAC,IAAD,CAAKnY,UAAU,gBACb,0BAAMA,UAAU,eAAhB,8N,yCAgBcmY,GAClB,OAAQA,GACN,IAAK,QACH,MAAO,oDACT,IAAK,QACH,MAAO,oIACT,IAAK,OACH,MAAO,0IACT,QACE,OAAO,Q,4EAsBOA,G,4EACVA,E,OACD,U,OAWA,U,OASA,S,gDAnBIjW,KAAK8W,mBAAmB,mBAAoB,kHAA6B9T,MAAK,SAAAC,GAQnF,OANIA,EAAIC,QACND,EAAM,CACJC,MAAOD,EAAIC,QAIRD,M,gCAGFjD,KAAK8W,mBAAmB,yBAA0B,4LAAsC9T,MAAK,SAAAC,GAMlG,OALIA,EAAIO,eACNP,EAAM,CACJO,aAAcP,EAAIO,eAGfP,M,WAILjD,KAAKuW,S,qBACHvW,KAAK/B,MAAM8Y,U,0CACN/W,KAAKgX,mBAAmBhX,KAAK/B,MAAM8Y,Y,yBAExB/W,KAAK/B,MAAMsD,iB,eAAzB0V,E,yBACGjX,KAAKgX,mBAAmBC,I,iCAI5BjX,KAAK8W,mBAAmB,sBAAuB,0P,iCAE/C,M,yRAIaG,E,+BAAM,G,yCACX,CAACtJ,OAAO,EAAMtK,WAAY,kB,cAC3CpH,QAAQC,IAAI8D,KAAKwW,YACnBxW,KAAKlB,SAAS,CACZ2Q,SAAS,I,kBAGJzP,KAAK/B,MAAMmC,MAAM,YAAa,CACnC8W,aAAcD,EACdjS,OAAQhF,KAAKwW,aACZxT,MAAK,SAAAmU,GACN,OAAOA,EAAE,MACRhU,OAAM,SAAAhG,GACP,OAAO,aACLwQ,OAAO,GACJxQ,MAEJ6F,MAAK,SAAAuE,GAMN,OAJA,EAAKzI,SAAS,CACZ2Q,SAAS,IAGJlI,M,wLAIe6P,G,wFAAWC,E,+BAAgB,gJAA8B9R,E,+BAAQ,IACrF1D,IAAOkB,SAASqU,G,yCACXvV,IAAOC,KAAKsV,EAAW7R,GAASvC,MAAK,SAAAC,GAC1C,OAAOA,KACNE,OAAM,SAAAhG,GACP,OAAO,aACLwQ,OAAO,EACPyI,cAAeiB,GACZla,O,gCAIA,CACLwQ,OAAO,EACPyI,cAAe,+FACf/S,WAAY,iB,iIAKP,IAAD,EACiBrD,KAAK/B,MAAvBY,EADC,EACDA,GAAInB,EADH,EACGA,WAEX,OACE,kBAAC,IAAD,CAAOmB,GAAIA,EAAI2C,UAAQ,GACrB,kBAAC,EAAD,CAAsB9D,WAAYA,IAClC,kBAAC,EAAD,CACEK,QAASiC,KAAK+V,QACdrY,WAAYA,EACZ0E,QAASpC,KAAKsX,wBACdtV,SAAS,6MACTK,YAAarC,KAAKgW,MAAM1W,OACxBgD,YAAatC,KAAK5B,MAAMqR,e,GA7MYpO,IAAMC,YC0UrCiW,I,yDA9Ud,WAAatZ,GAAQ,IAAD,uBACnB,cAAMA,IAmKNS,aApKmB,sBAoKJ,8CAAAS,EAAA,yDAAOqY,EAAP,+BAAgB,GAAIC,IAApB,kCAEVC,EAFU,aAGbzK,OAAQ,EAAK7O,MAAMK,WACnBkZ,KAAMnb,OAAOob,SAASD,KAAKE,QAAQ,IAAK,KACrCL,IAGY7J,QAAO+J,EAAWI,SAAU,KAExCC,EAAQ,EAAKra,WAAWG,IAAI,WAVlB,gCAaLgE,IAAOC,KAAK,sBAAuB,CACvC,SAAYxB,OAAOyX,GACnB,QAAWL,IAfF,WAmBTD,EAnBS,oBAoBZ,EAAKO,WAAY,EAC2B,gBAAxC,EAAKC,YAAYpa,IAAI,gBAA4E,eAAxC,EAAKoa,YAAYpa,IAAI,eArBtE,iBAsBXrB,OAAO6M,QAAQC,OAtBJ,+BAwBXzH,IAAOC,KAAK,sBAAuB,CAAC,SAAYtF,OAAOob,SAASD,KAAO,KAAM,IAAIO,MAAOC,YAxB7E,UAyBLtW,IAAOC,KAAK,gBAAiB,CACjC,OAAU,UACV,QAAW4V,IA3BF,4CApKI,EAqMnBtU,UArMmB,sBAqMP,4CAAAjE,EAAA,6DAAOkJ,EAAP,+BAAe,GAAImP,EAAnB,+BAA4B,GAAIC,IAAhC,mDACJ,EAAK/Y,aAAL,eACH8Y,EADG,CAEN7J,OAAO,EACPyI,cAAe/N,IACboP,IALQ,2CArMO,EA6MpBW,aA7MoB,sBA6ML,sBAAAjZ,EAAA,+EAEP0C,IAAOC,KAAK,uBAAwB,CAC1C,OAnNmB,QAoNnB,MAAS,WACPkB,MAAK,SAAAiU,GAMP,OALA,EAAKnY,SAAS,CACbiY,UAAWE,EAAMC,aACjBmB,YAAwC,gBAA3B,EAAKja,MAAMia,YAAgC,EAAKja,MAAMK,WAAa,EAAKL,MAAMia,cAGrFpB,EAAMC,iBAXA,2CA7MK,EAkOpBoB,YAlOoB,uCAkON,WAAOrL,GAAP,iCAAA9N,EAAA,yDAAe+P,EAAf,+BAAsB,GAAIqJ,IAA1B,iCAETC,EAAgB,IAEhBD,EAJS,mBAKZC,EAAgBC,KAAKjS,KAAKkS,UAAU,CAACzL,EAAQiC,MACzC,EAAKyJ,SAASH,GANN,yCAM6B,EAAKG,SAASH,IAN3C,UAST,EAAKI,gBAAkB,IAAM,EATpB,sBAWR,EAAKC,wBAA0B,EAAKC,0BAA4B,KAXxD,wBAYX7c,QAAQ0R,MAAM,kBAAmB,KAAQ,EAAKkL,wBAA0B,EAAKC,2BAZlE,UAaL,EAAKC,MAAM,KAAQ,EAAKF,wBAA0B,EAAKC,2BAblD,eAiBN/B,EAAa,EAAK3Y,MAAlB2Y,UAEH,EAAK6B,gBAAkB,IAAM,IAChC,EAAKE,0BAA2B,IAAIZ,MAAOC,WAG5C,EAAKS,iBAAmB,EACxB,EAAKC,yBAA0B,IAAIX,MAAOC,UAxB7B,kBA0BNtW,IAAOC,KAAK,wBAAyB,CACxC,OAAUmL,EACV,WAAclQ,QAAO,IAAImb,MAAOC,WAChC,OAAS,aACR,EAAK,QACL,aAAgBpB,GACb7H,KAEHlM,MAAK,SAAAC,GAEP,OADIsV,IAAO,EAAKI,SAASH,GAAiBvV,EAAIuU,UACvCvU,EAAIuU,YACTrU,MAXE,uCAWI,WAAMhG,GAAN,SAAAgC,EAAA,yDACqC,IAAzChC,EAAE6b,WAAWC,aAAa5V,WADtB,uBAEPpH,QAAQ0R,MAAMxQ,GAFP,SAGD,EAAK4b,MAAM,KAHV,gCAIA,EAAKT,YAAYrL,EAAQiC,IAJzB,aAMD/R,EANC,2CAXJ,wDA1BM,4CAlOM,sDAGnB,EAAK+b,YAAc1c,OAAOob,SAASuB,OAEnC,EAAKN,wBAA0B,EAC/B,EAAKC,yBAA2B,EAEhC,EAAKF,gBAAkB,EAEvB,EAAKX,YAAc,IAAImB,gBAAgB,EAAKF,aAE5C1c,OAAO8H,MAAgD,gBAAxC,EAAK2T,YAAYpa,IAAI,gBAA4E,eAAxC,EAAKoa,YAAYpa,IAAI,eAE7FrB,OAAO6H,UAAoD,mBAAxC,EAAK4T,YAAYpa,IAAI,gBAA+E,6BAAxC,EAAKoa,YAAYpa,IAAI,eACpGrB,OAAO6c,MAAgD,eAAxC,EAAKpB,YAAYpa,IAAI,gBAA2E,yBAAxC,EAAKoa,YAAYpa,IAAI,eAE5F,EAAKyb,eAAiB,CACrB,aACA,gBACA,WACA,iBACA,YACA,yBACA,cACA,gBACA,aACA,eACA,WACA,WACA,cACA,gBACA,mBACA,eACA,eACA,eACA,qBACA,aACA,YACA,cACA,eAID,EAAKC,gBAAkB,CAAC,gBAAiB,aAAc,cAAe,gBAAiB,gBAAiB,mBAAoB,eAAgB,eAAgB,sBAC5J,EAAKZ,SAAW,GAChB,EAAKX,WAAY,EAGjB,IAAIta,EAAalB,OAAOob,SAASD,KAAKE,QAAQ,KAAM,KAjDjC,OAkDfna,EAAWma,QAAQ,IAAK,IAAIzW,MAAM,YAAW1D,EAAU,qCAAiCA,EAAWma,QAAQ,IAAK,MAIpHna,EAAa,IAAI0b,gBAAgB1b,GAEjC,EAAKA,WAAaA,EAGlB,EAAKU,MAAQ,CACZ2Y,UAAW,GACXsB,YAAa,UACb5Z,WAAY,GACZ+a,OAAQ,KACR9b,cAGDmE,IAAO4X,WAAU,SAACtc,GACZA,EAAEuc,SACe,4BAAlBvc,EAAEuc,OAAO/X,MAAyD,wBAAlBxE,EAAEuc,OAAO/X,MAAkC,EAAKqW,YAEvE,qBAAlB7a,EAAEuc,OAAO/X,KACnB,EAAKqW,WAAY,EACW,yBAAlB7a,EAAEuc,OAAO/X,MACnBvF,SAASG,KAAKod,aAAa,SAAUxc,EAAEuc,OAAOtR,KAAKwR,aA1ElC,E,iEAgFlB5Z,KAAK6Z,kB,0KAIDtU,EAAUvF,KAAKtC,YACfoc,EAAa,IAAIC,KAEVC,UAAU/K,OAAS,SAAU9R,GAAI,OAAO2c,EAAWjc,IAAIV,KAG9D6C,KAAKtC,WAAWG,IAAI,kB,iCACPsT,aAAMnR,KAAKtC,WAAWG,IAAI,mBAAmBsF,OAAM,SAAAhG,GAKlE,MAJA,EAAKiG,UAAU,gOAAf,eACIjG,EADJ,CAECkG,WAAY,gCAEPlG,K,cALPoI,E,gBAQgBA,EAAQ+B,O,OAAxB/B,E,iBAGCA,EAAUiB,KAAKC,MAAMlB,G,0DAErBvF,KAAKoD,UAAU,wNAA0C,CACxDC,WAAY,gC,2BAWd,IAAS8B,KANJI,EAAQA,SAAuD,oBAA5Ca,OAAOC,UAAUC,SAASC,KAAKhB,IACtDvF,KAAKoD,UAAU,gUAAuE,CACrFC,WAAY,kCAIAkC,EAAQA,QACrBuU,EAAWG,IAAI9U,EAAGI,EAAQA,QAAQJ,IAGnC2U,EAAWG,IAAI,iBAAkBja,KAAKtC,WAAWG,IAAI,mBAErD0H,EAAUuU,E,QAGX9Z,KAAKtC,WAAa6H,EAEd9G,EAAa8G,EAAQ1H,IAAI,WAEmB,IAA7CmC,KAAKsZ,eAAe9T,QAAQ/G,KAE9BA,EADGA,GAAcA,EAAWa,OACf,WAEA,SAIX+Y,EAAc,gBACd6B,EAAmE,WAArDla,KAAKiY,YAAYpa,IAAI,+BAE2B,IAA9CmC,KAAKuZ,gBAAgB/T,QAAQ/G,MAChD4Z,EAAc5Z,GAGXyb,GACHla,KAAKoY,eAGNpY,KAAKlB,SAAS,CACbL,aACA4Z,cACA3a,WAAY6H,I,2JAMkB,aAA1BvF,KAAK5B,MAAMK,YACduB,KAAKoD,UAAU,mFAAmB,CACjC,YAAe,qBACb,K,qEA4DO+W,G,0FACL,IAAIC,SAAQ,SAACC,EAASC,GAC5B5P,YAAW,kBAAM2P,GAAQ,KAAOF,O,iIAoDvB,IACL9B,EAAerY,KAAK5B,MAApBia,YADI,EAE2CrY,KAAK5B,MAAlDob,EAFE,EAEFA,OAAQzC,EAFN,EAEMA,UAAWrZ,EAFjB,EAEiBA,WAAYe,EAF7B,EAE6BA,WAWtC,MAToB,aAAhB4Z,GAA8C,gBAAhBA,GAAiD,UAAhBA,GAA4BtB,IAC7C,IAA9C/W,KAAKuZ,gBAAgB/T,QAAQ/G,KAChC4Z,EAAc,YAGoC,IAA/CrY,KAAKuZ,gBAAgB/T,QAAQ6S,KAChCA,EAAc,eAGK,YAAhBA,EAEF,kBAAC,IAAD,CAAMhb,IAAI,UAAUgb,YAAY,UAAUxX,QAAQ,GACjD,kBAAC,IAAD,CAAOhC,GAAG,UAAU2C,UAAQ,GAC3B,kBAAC,IAAD,CAAcP,KAAK,SAOtB,kBAAC,IAAD,CAAMoX,YAAaA,EAAamB,OAAQA,EAAQ3Y,QAAQ,GACvD,kBAAC,EAAD,CAAYhC,GAAG,QAAQnB,WAAYA,IACnC,kBAAC,EAAD,CAAemB,GAAG,WAAWnB,WAAYA,IAEzC,kBAAC,GAAD,CAAiBmB,GAAG,aAAaJ,WAAYuB,KAAK5B,MAAMK,WAAYC,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAG1I,kBAAC,EAAD,CAAemB,GAAG,WAAWJ,WAAYuB,KAAK5B,MAAMK,WAAYC,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IACtI,kBAAC,GAAD,CAAkBmB,GAAG,cAAcJ,WAAYuB,KAAK5B,MAAMK,WAAYC,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAC5I,kBAAC,GAAD,CAAkBmB,GAAG,cAAc0C,eAAgBvB,KAAKoY,aAAc3Z,WAAYuB,KAAK5B,MAAMK,WAAYC,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAE/K,kBAAC,EAAD,CAAemB,GAAG,WAAWJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAEjK,kBAAC,EAAD,CAAiBmB,GAAG,aAAaJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IACrK,kBAAC,EAAD,CAAmBmB,GAAG,eAAeJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAEzK,kBAAC,EAAD,CAAkBmB,GAAG,cAAcJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IACvK,kBAAC,EAAD,CAAemB,GAAG,WAAWJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAEjK,kBAAC,GAAD,CAAmBmB,GAAG,eAAeJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAEzK,kBAAC,EAAD,CAAgBmB,GAAG,YAAYJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IACnK,kBAAC,EAAD,CAAoBmB,GAAG,gBAAgBJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAC3K,kBAAC,EAAD,CAA6BmB,GAAG,yBAAyBJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAC7L,kBAAC,EAAD,CAAqBmB,GAAG,iBAAiBJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAc0B,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAE7K,kBAAC,EAAD,CAAgBmB,GAAG,aAAaJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAcqY,UAAWA,EAAW3W,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAC1L,kBAAC,GAAD,CAAgBmB,GAAG,cAAcJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAcqY,UAAWA,EAAW3W,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAC3L,kBAAC,GAAD,CAAgBmB,GAAG,YAAYJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW1E,aAAcsB,KAAKtB,aAAcqY,UAAWA,EAAW3W,MAAOJ,KAAKsY,YAAa5a,WAAYA,IAEzL,kBAAC,EAAD,CAAkBA,WAAYA,EAAYmB,GAAG,cAAcJ,WAAYuB,KAAK5B,MAAMK,WAAY2E,UAAWpD,KAAKoD,UAAW7B,eAAgBvB,KAAKoY,oB,GAzUhI/W,IAAMC,YClCxBO,IAAOC,KAAK,gBACZyY,IAASC,OAAO,kBAAC,GAAD,MAASpe,SAASqe,eAAe,SAIjDje,OAAOke,QAAU,SAAUC,EAAUpW,EAAKqW,EAAYC,EAAclN,GAChE,IAAImN,EAAc,aAAcH,EAC9B,KAAQpW,EAAM,IAAMqW,EAAa,IAAMC,EAAe,MAAQlN,GAAS,IAAIoN,MAAQ,cAAgBve,OAAOwe,UAAUC,UAKtH,OAHA7e,SAASG,KAAK2e,UAAYJ,EAC1B7e,QAAQ0R,MAAMA,GACd1R,QAAQkK,KAAK2U,IACN,K","file":"static/js/main.1d90dccc.chunk.js","sourcesContent":["\r\nexport const smoothScrollToTop = () => {\r\n  console.log('smooth to top')\r\n    const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n    // if (c > 30) {\r\n    //     return;\r\n    // }\r\n\r\n    if (c > 0) {\r\n      window.scrolling = true;\r\n        window.requestAnimationFrame(smoothScrollToTop);\r\n        window.scrollTo(0, c - c / 3);\r\n    } else {\r\n      window.scrolling = false;\r\n    }\r\n};\r\n\r\nexport const getSplittedAndFilteredString = (st, sep=',') => (\r\n  String(st).toLowerCase().split(sep).filter(e => !!e)\r\n)","import React from 'react';\r\n\r\nimport {\r\n  PanelHeader,\r\n  Search,\r\n  PanelHeaderButton\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {smoothScrollToTop} from '../services/functions';\r\n\r\nimport './css/standardSearchHeader.css';\r\n\r\nexport default ({ onChange, onClose, closeIcon, key, title, setSearch, hashParams, after}) => {\r\n\r\n  const isDesktopWebPlatfrom = hashParams.get('vk_platform') === 'desktop_web';\r\n  console.log(hashParams.get('vk_platform'))\r\n  /*left={<PanelHeaderButton onClick={(e) => {\r\n    if (onClose) {\r\n      onClose(e)\r\n    } else {\r\n\r\n      bridge.send(\"VKWebAppClose\", {\r\n        \"status\": \"success\", \r\n        \"payload\": {}\r\n      });\r\n\r\n      window.history.back();\r\n    }\r\n  }}*/\r\n  return (<><PanelHeader key={key}>\r\n    {setSearch ? <Search onChange={onChange} className={!isDesktopWebPlatfrom ? \"margins\" : \"\"}/> : \r\n    <div onClick={() => {\r\n      smoothScrollToTop();\r\n    }}>\r\n      {title ? title : hashParams.get(\"title\") ? hashParams.get(\"title\") : \"ChatBot Tools\"}\r\n    </div>\r\n  }\r\n  </PanelHeader>{after}</>);\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Search,\r\n  PanelSpinner,\r\n  Div,\r\n  Group,\r\n  Header,\r\n  List,\r\n  Cell,\r\n  Link\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetCitiesPanel extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      countries: [],\r\n      cities: [],\r\n      selectedCountryId: 0,\r\n      loadedCountries: false,\r\n      loadedCities: false,\r\n      countryName: '',\r\n      page: 'countries'\r\n    }\r\n\r\n    this.scrolls = {\r\n      'countries': 0,\r\n      'countries': 0\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {hashParams} = this.props;\r\n    if (hashParams.get('country_id')) {\r\n      this.goToCities()\r\n    } else if (!this.state.countries.length) {\r\n      this.loadCountries();\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", this.saveScrolls, false);\r\n  }\r\n\r\n  saveScrolls = (e) => {\r\n    this.scrolls[this.state.page] = window.pageYOffset;\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener(\"scroll\", this.saveScrolls)\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    window.scrollTo(0, this.scrolls[this.state.page]);\r\n  }\r\n\r\n  async goToCities () {\r\n    let {hashParams, vkApi} = this.props;\r\n    let country = await  vkApi('database.getCountriesById', {\r\n      country_ids: Number(hashParams.get('country_id'))\r\n    });\r\n\r\n    country = country[0];\r\n\r\n    this.setState({\r\n      selectedCountryId: country.id,\r\n      countryName: country.title,\r\n      loadedCountries: true,\r\n      page: 'cities'\r\n    }, () => {\r\n      this.loadCities();\r\n    })\r\n  }\r\n\r\n  async loadCountries (q=\"\") {\r\n    \r\n    this.setState({\r\n      loadedCountries: false\r\n    });\r\n\r\n    let countries = await this.props.vkApi('database.getCountries', {\r\n      need_all: 1,\r\n      q,\r\n      count: 1000\r\n    });\r\n\r\n    this.setState({\r\n      loadedCountries: true,\r\n      countries: countries.items\r\n    })\r\n  }\r\n\r\n  async loadCities (q=\"\") {\r\n    this.setState({\r\n      loadedCities: false\r\n    });\r\n\r\n    let cities = await this.props.vkApi('database.getCities', {\r\n      country_id: this.state.selectedCountryId,\r\n      q\r\n    })\r\n\r\n    this.setState({\r\n      loadedCities: true,\r\n      cities: cities.items\r\n    })\r\n  }\r\n\r\n  selectCountry = (countryId) => {\r\n    const {activeHash} = this.props;\r\n    if (activeHash === \"selectCountry\") {\r\n      this.props.sendResponse({\r\n        \"country_id\": countryId,\r\n        \"country_title\": this.state.countries.find(c => c.id === countryId).title\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selectedCountryId: countryId,\r\n        page: 'cities'\r\n      }, () => {\r\n        this.loadCities();\r\n      });\r\n    } \r\n  }\r\n\r\n  selectCity = async (city) => {\r\n    let {hashParams} = this.props;\r\n    \r\n    this.props.sendResponse({\r\n      \"city_id\": city.id,\r\n      \"city_title\": city.title,\r\n      \"country_id\": this.state.selectedCountryId,\r\n      \"country_title\": hashParams.get('country_id') && this.state.countryName ? this.state.countryName : this.state.countries.find(c => c.id === this.state.selectedCountryId).title\r\n    });\r\n\r\n    this.clearCities();\r\n  } \r\n\r\n  clearCities = () => {\r\n    let newState = {\r\n      cities: [],\r\n      selectedCountryId: 0,\r\n      countryName: ''\r\n    }\r\n\r\n    const {hashParams} = this.props;\r\n\r\n    if (hashParams.get('country_id') && !this.state.countries.length) {\r\n      this.loadCountries();\r\n    }\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  renderCities () {\r\n    const {cities, loadedCities} = this.state;\r\n    const {hashParams} = this.props\r\n    let canChangeCountry = hashParams.get('can_change_country') !== 'no';\r\n    return (\r\n      !cities.length && !loadedCities ? <PanelSpinner size=\"l\"/> :\r\n      !cities.length ? <Div>Произошла неизвестная ошибка</Div> :\r\n      <div>\r\n        <Group header={<Header mode=\"secondary\" aside={canChangeCountry ? <Link onClick={this.clearCities}>Изменить страну</Link> : null}>Выберите город</Header>}>\r\n          <List>\r\n            {cities.map(city => (\r\n              <Cell onClick={() => this.selectCity(city)} key={\"city\" + city.id}>\r\n                {city.title}\r\n              </Cell>\r\n            ))}\r\n          </List>\r\n        </Group>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  changeSearchQuery = (e) => {\r\n    let q = e.target.value;\r\n    if (this.state.selectedCountryId) {\r\n      this.loadCities(q);\r\n    } else {\r\n      this.setState({\r\n        countryName: String(q).toLocaleLowerCase()\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {countries, loadedCountries, countryName, selectedCountryId} = this.state;\r\n    const {hashParams} = this.props;\r\n    let countryIdParams = hashParams.get('country_id');\r\n\r\n    return (\r\n      <Panel id={this.props.id}>\r\n        <StandardSearchHeader hashParams={hashParams} setSearch={true} key={selectedCountryId ? \"country\" : \"city\"} onChange={this.changeSearchQuery}/>\r\n        {!countries.length && !loadedCountries || (countryIdParams && !loadedCountries) || !loadedCountries ? <PanelSpinner size=\"l\"/> : \r\n        !countries.length && (countryIdParams && loadedCountries && !countryName) ? <Div>Произошла неизвестная ошибка</Div> : \r\n          !selectedCountryId ? <Group header={<Header mode=\"secondary\">Выберите страну</Header>}>\r\n            <List>\r\n              {countries.filter(c => {\r\n                return String(c.title).toLocaleLowerCase().match(countryName)\r\n              }).map(country => (\r\n                <Cell onClick={() => this.selectCountry(country.id)} key={\"country\" + country.id}>\r\n                  {country.title}\r\n                </Cell>\r\n              ))}\r\n            </List>\r\n          </Group> : this.renderCities()\r\n        }\r\n      </Panel>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Div,\r\n  Button,\r\n  Card,\r\n  CardGrid,\r\n  Placeholder\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport Icon56HideOutline from '@vkontakte/icons/dist/56/hide_outline';\r\n\r\nconst renderAction = (type=\"\") => {\r\n  switch (type) {\r\n    case 'selectCity':\r\n      return 'выбрать город';\r\n    default: \r\n      return 'пользоваться сервисом';\r\n  }\r\n}\r\nexport default ({onRequestToken, id, activeHash, hashParams}) => (\r\n  <Panel id={id} centered>\r\n    <StandardSearchHeader hashParams={hashParams}/>\r\n    <Placeholder\r\n      icon={<Icon56HideOutline/>}\r\n      action={<Button size=\"xl\" onClick={onRequestToken}>Разрешить</Button>}\r\n    >Чтобы {renderAction(activeHash)}, вам нужно разрешить доступ к общедоступной информации о вас.</Placeholder>\r\n  </Panel>\r\n)","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Div\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default ({id, hashParams}) => (\r\n  <Panel id={id} centered>\r\n    <StandardSearchHeader hashParams={hashParams} title=\"ChatBot Tools\"/>\r\n    <Div className=\"align-center\">\r\n      Страница не найдена. <br/>Проверьте название метода.\r\n    </Div>\r\n  </Panel>\r\n)","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Div,\r\n  Link,\r\n  Button,\r\n  Placeholder\r\n} from '@vkontakte/vkui'\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Icon24Services from '@vkontakte/icons/dist/24/services';\r\nimport Icon56MessageReadOutline from '@vkontakte/icons/dist/56/message_read_outline';\r\n\r\nexport default ({id, hashParams}) => (\r\n  <Panel id={id} centered>\r\n    <StandardSearchHeader hashParams={hashParams} title=\"Привет!\"/>\r\n    <Placeholder\r\n      icon={<Icon56MessageReadOutline/>}\r\n      header=\"ChatBot Tools\"\r\n      action={<Button size=\"xl\" onClick={() => {\r\n          bridge.send(\"VKWebAppAddToCommunity\", {});\r\n        }} before={<Icon24Services/>}>Установить в сообщество</Button>}\r\n    >Это новые возможности для Ваших <br/> чат-ботов ВКонтакте.</Placeholder>\r\n  </Panel>\r\n)","import React from 'react';\r\n\r\nimport {\r\n  CardGrid,\r\n  Placeholder,\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Spinner\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon56LockOutline from '@vkontakte/icons/dist/56/lock_outline';\r\n\r\nimport './css/standardRequestAccess.css';\r\n\r\nexport default ({hashParams, requests, onClick, actionText, action, icon, nameField, photoField, content=null, hideButton, showSpinner=false}) => {\r\n  \r\n  if (!nameField) nameField = 'bot_name';\r\n  if (!photoField) photoField = 'bot_photo';\r\n\r\n  let botName = hashParams.get(nameField) || \"Чат-бот\"\r\n  let botPhoto = hashParams.get(photoField) || \"\";\r\n\r\n  return (\r\n  <CardGrid>\r\n    <Card mode=\"tint\" className=\"full-size-card\"><Placeholder\r\n      icon={botPhoto ? <Avatar size={82} src={botPhoto}/> : icon ? icon : <Icon56LockOutline/>}\r\n      header={botName}\r\n      action={action ? action : !hideButton ? <Button size=\"xl\" before={showSpinner ? <Spinner size=\"small\" className=\"white-spinner\"/> : null} onClick={onClick}>{actionText ? actionText : \"Разрешить\"}</Button> : null}\r\n    >{requests}<div style={{textAlign: 'left', marginTop: 12}}>{content}</div></Placeholder></Card>\r\n  </CardGrid>);\r\n};","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetEmailPanel extends React.Component {\r\n  \r\n  getEmail = () => {\r\n    if (bridge.supports(\"VKWebAppGetEmail\")) {\r\n      bridge.send(\"VKWebAppGetEmail\", {}).then(res => {\r\n        this.props.sendResponse({\r\n          email: res.email\r\n        })\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось получить email\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Получение email на этом устройстве не доступно\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.getEmail} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает доступ к Вашему email адресу\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetPhoneNumberPanel extends React.Component {\r\n  \r\n  getPhoneNumber = () => {\r\n    if (bridge.supports(\"VKWebAppGetPhoneNumber\")) {\r\n      bridge.send(\"VKWebAppGetPhoneNumber\", {}).then(res => {\r\n        this.props.sendResponse({\r\n          phone_number: res.phone_number\r\n        });\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось получить номер телефона\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Получение номера телефона на этом устройстве не доступно\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    };\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.getPhoneNumber} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает доступ к Вашему номеру телефона\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class JoinGroupPanel extends React.Component {\r\n  \r\n  joinGroup = () => {\r\n    let {hashParams} = this.props\r\n    \r\n    if (bridge.supports(\"VKWebAppJoinGroup\")) {\r\n      bridge.send(\"VKWebAppJoinGroup\", {\r\n        \"group_id\": Number(hashParams.get('group_id'))\r\n      }).then(res => {\r\n        this.props.sendResponse(res);\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось вступить в сообщество\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Вступление в сообщество на этом устройстве не доступно\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.joinGroup} \r\n          hashParams={hashParams} \r\n          requests=\"Предлагает вступить в сообщество\"\r\n          actionText=\"Вступить\"\r\n          photoField=\"group_photo\"\r\n          nameField=\"group_name\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class AllowMessagesFromGroupPanel extends React.Component {\r\n  \r\n  subscribeGroupMessages = () => {\r\n    let {hashParams} = this.props\r\n    bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\r\n      \"group_id\": Number(hashParams.get('group_id')),\r\n      \"key\": hashParams.get('key')\r\n    }).then(res => {\r\n      this.props.sendResponse(res);\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.subscribeGroupMessages} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает подписку на сообщения сообщества\"\r\n          actionText=\"Подписаться\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Link,\r\n  Button,\r\n  Gradient\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Icon56MessageReadOutline from '@vkontakte/icons/dist/56/message_read_outline';\r\n\r\nexport default class RouteDialogPanel extends React.Component {\r\n  \r\n  routeDialog = () => {\r\n    let res = {}\r\n    \r\n    for (let [key, value] of this.props.hashParams) {\r\n      res[key] = value\r\n    }\r\n    \r\n    this.props.sendResponse(res)\r\n    return true;\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <Gradient>\r\n          <StandardRequestAccess \r\n            hashParams={hashParams} \r\n            requests=\"Перенаправление к диалогу с чат-ботом\"\r\n            icon={<Icon56MessageReadOutline/>}\r\n            action={<Link href={'https://vk.com/im?sel=-' + hashParams.get('bot_id')} onClick={this.routeDialog} target=\"_blank\"><Button size=\"xl\">{hashParams.get('action_text') ? hashParams.get('action_text') : \"Быстрый диалог\"}</Button></Link>}\r\n          />\r\n        </Gradient>\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetAppVersionPanel extends React.Component {\r\n  \r\n  componentWillMount () {\r\n    if (bridge.supports(\"VKWebAppGetClientVersion\")) {\r\n      bridge.send(\"VKWebAppGetClientVersion\", {}).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось получить ифнормацию о приложении\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Получение информации о версии приложения не доступно на этом устройстве\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        Получаем версию ...\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Button\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport Icon24ScanViewfinderOutline from '@vkontakte/icons/dist/24/scan_viewfinder_outline';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class ReadQRCodePanel extends React.Component {\r\n  \r\n  scanQR = () => {\r\n    if (bridge.supports(\"VKWebAppOpenCodeReader\")) {\r\n      bridge.send(\"VKWebAppOpenCodeReader\", {}).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"QR не удалось прочитать\", e)\r\n      })\r\n    } else {\r\n      this.props.sendError(\"Чтение QR не поддерживается\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          hashParams={hashParams} \r\n          requests=\"Предлагает просканировать QR\"\r\n          action={<Button size=\"xl\" onClick={this.scanQR} before={<Icon24ScanViewfinderOutline/>}>Просканировать</Button>}\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  Button\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport Icon24Download from '@vkontakte/icons/dist/24/download';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class DownloadFilePanel extends React.Component {\r\n  \r\n  downloadFile = () => {\r\n    let {hashParams} = this.props;\r\n    if (!(window.isAndroid || window.isWEB)) {\r\n      if (bridge.supports(\"VKWebAppDownloadFile\")) {\r\n        bridge.send(\"VKWebAppDownloadFile\", {\r\n          url: hashParams.get('file_url'),\r\n          filename: hashParams.get('file_name')\r\n        }).then(res => {\r\n          this.props.sendResponse(res)\r\n        }).catch(e => {\r\n          this.props.sendError(\"Не удалось скачать файл\", e)\r\n        })\r\n      } else {\r\n        this.props.sendError(\"Скачивание файла не доступно на этом устройстве\", {\r\n          error_code: \"not_supports\"\r\n        })\r\n      }   \r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n    \r\n    const canDownload = window.isAndroid || window.isWEB;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.downloadFile} \r\n          hashParams={hashParams} \r\n          requests=\"Предлагает скачать файл\"\r\n          action={\r\n            <Button \r\n              before={<Icon24Download/>} \r\n              size=\"xl\" \r\n              onClick={canDownload ? null : this.downloadFile} \r\n              href={canDownload ? hashParams.get('file_url') : null} \r\n              download={canDownload ? hashParams.get('file_name') : null}\r\n              target=\"_blank\"\r\n            >Скачать</Button>}\r\n\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  FormLayout,\r\n  Input,\r\n  Textarea,\r\n  Checkbox,\r\n  Select,\r\n  Button,\r\n  Radio,\r\n  FormLayoutGroup\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\n/*\r\n  form {\r\n    fields: [],\r\n    action_text: \"Отправить\"\r\n  }\r\n*/\r\nexport default class FillFormPanel extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const {hashParams} = props\r\n\r\n    let form = {}\r\n    let formQuery = hashParams.get('form')\r\n    let dataLink\r\n\r\n    let formIsValid = false;\r\n    if (Object.prototype.toString.call(formQuery) !== '[object Object]' && formQuery.length) {\r\n      try {\r\n        formQuery = JSON.parse(formQuery);\r\n        formIsValid = true;\r\n      } catch (e) {\r\n        formIsValid = false;\r\n      }\r\n    } else {\r\n      formIsValid = true;\r\n    }\r\n\r\n    if (!formIsValid) {\r\n      return this.props.sendError(\"Форма не оформлена неправильно JSON[]\", {\r\n        error_code: \"invalid_format\"\r\n      })\r\n    }\r\n\r\n    let actionText = formQuery.action_text || \"Отправить\";\r\n\r\n    if (formQuery.fields && Array.isArray(formQuery.fields)) {\r\n      formQuery.fields.forEach((row, i) => {\r\n        const {type, name, default_value, options, required} = row;\r\n        // const [type, name=\"\", defaultValue=\"\", options={}, required=false] = row;\r\n        formQuery.fields[i] = {\r\n          defaultValue: default_value,\r\n          value: default_value || null,\r\n          required,\r\n          options,\r\n          name,\r\n          type,\r\n          isValid: null\r\n        }\r\n      });\r\n    }\r\n\r\n    this.state = {\r\n      ...form,\r\n      actionText,\r\n      formQuery\r\n    }\r\n  }\r\n\r\n  handleInput = (e, needSave=true) => {\r\n      let value = e.currentTarget.value;\r\n      \r\n\r\n      if (e.currentTarget.type === 'checkbox') {\r\n          value = e.currentTarget.checked;\r\n      }\r\n\r\n\r\n      const formQuery = {...this.state.formQuery}\r\n\r\n      formQuery.fields.forEach((row, i) => {\r\n        if (row.name === e.currentTarget.name) {\r\n          formQuery.fields[i].value = value\r\n          formQuery.fields[i].isValid = null\r\n          formQuery.fields[i].bottomMessage = null\r\n\r\n          if (row.options.match && [\"select\", \"radio\", \"checkbox\"].indexOf(row.type) === -1) {\r\n            let regExpString = Array.isArray(row.options.match) ? row.options.match[0] : row.options.match\r\n            let regExpFlags = Array.isArray(row.options.match) ? row.options.match[1] : \"\"\r\n\r\n            let regExp = new RegExp(regExpString, regExpFlags);\r\n            if (row.value.match(regExp)) {\r\n              formQuery.fields[i].isValid = true;\r\n            } else {\r\n              formQuery.fields[i].isValid = false;\r\n            }\r\n          }\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n          formQuery\r\n      });\r\n  };\r\n\r\n\r\n  renderTextField (row) {\r\n    return (\r\n      <Input \r\n        name={row.name}\r\n        defaultValue={row.defaultValue}\r\n        placeholder={row.options.placeholder}\r\n        maxLength={row.options.max_length}\r\n        type={row.inputType || \"text\"}\r\n        top={row.options.top ? row.options.top + (row.required ? \" *\" : \"\") : \"\"}\r\n        onChange={this.handleInput}\r\n        bottom={row.bottomMessage}\r\n        status={row.isValid === null ? null : row.isValid ? 'valid' : 'error'}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderSelectField (row) {\r\n    return (\r\n      <Select />\r\n    )\r\n  }\r\n\r\n  renderTextAreaField (row) {\r\n    return (\r\n      <Textarea \r\n        name={row.name}\r\n        defaultValue={row.defaultValue}\r\n        placeholder={row.options.placeholder}\r\n        maxLength={row.options.max_length}\r\n        top={row.options.top ? row.options.top + (row.required ? \" *\" : \"\") : \"\"}\r\n        onChange={this.handleInput}\r\n        bottom={row.bottomMessage}\r\n        status={row.isValid === null ? null : row.isValid ? 'valid' : 'error'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  renderCheckboxField (row) {\r\n    return (\r\n      <Checkbox \r\n        name={row.name}\r\n        defaultChecked={row.defaultValue}\r\n        onChange={this.handleInput}\r\n        top={row.options.top ? row.options.top + (row.required ? \" *\" : \"\") : \"\"}\r\n        bottom={row.bottomMessage}\r\n      >\r\n        {row.options.text}\r\n      </Checkbox>\r\n    )\r\n  }\r\n\r\n  renderRadioField (row) {\r\n    return (\r\n      row.options.items && Array.isArray(row.options.items) ? \r\n      <FormLayoutGroup top={row.options.top ? row.options.top + (row.required ? \" *\" : \"\") : \"\"} status={row.isValid === null ? null : row.isValid ? 'valid' : 'error'} bottom={row.bottomMessage}>{row.options.items.map(r => (\r\n        <Radio\r\n          name={row.name}\r\n          defaultChecked={row.defaultValue === r.value}\r\n          onChange={this.handleInput}\r\n          description={r.description}\r\n          value={r.value}\r\n        >{r.text}</Radio>\r\n      ))}</FormLayoutGroup> : null\r\n    )\r\n  }\r\n\r\n\r\n  renderRow (row) {\r\n    switch (row.type) {\r\n      case 'text':\r\n        return this.renderTextField(row)\r\n      case 'select':\r\n        return this.renderSelectField(row)\r\n      case 'textarea':\r\n        return this.renderTextAreaField(row)\r\n      case 'checkbox':\r\n        return this.renderCheckboxField(row)\r\n      case 'radio':\r\n        return this.renderRadioField(row)\r\n      case 'password':\r\n        return this.renderTextField({\r\n          ...row,\r\n          inputType: 'password'\r\n        })\r\n      default:\r\n        return null\r\n    }\r\n\r\n  }\r\n  \r\n  formIsValid () {\r\n    let formIsValid = true;\r\n\r\n    let formQuery = {...this.state.formQuery};\r\n\r\n    let rowsFormQuery = formQuery.fields || [];\r\n    rowsFormQuery = [...rowsFormQuery]\r\n\r\n    rowsFormQuery.forEach((row, i) => {\r\n      if (row.required && (!row.value) && [\"select\"].indexOf(row.type) === -1) {\r\n        formIsValid = false\r\n        row.isValid = false;\r\n        row.bottomMessage = 'Это поле обязательно'\r\n      }\r\n\r\n      if (row.value) {\r\n        \r\n        if (row.options.same_with) {\r\n          let sameWithValue = rowsFormQuery.find(r => r.name === row.options.same_with)\r\n          if (sameWithValue) {\r\n            sameWithValue = sameWithValue.value\r\n            if (sameWithValue !== row.value) {\r\n              formIsValid = false;\r\n              row.isValid = false;\r\n              row.bottomMessage = 'Это поле не совпадает с полем ' + row.options.same_with\r\n            }\r\n          }\r\n        }\r\n\r\n        if (row.options.match && [\"select\", \"radio\", \"checkbox\"].indexOf(row.type) === -1) {\r\n          let regExpString = Array.isArray(row.options.match) ? row.options.match[0] : row.options.match\r\n          let regExpFlags = Array.isArray(row.options.match) ? row.options.match[1] : \"\"\r\n\r\n          let regExp = new RegExp(regExpString, regExpFlags);\r\n\r\n          if (row.value.match(regExp)) {\r\n            row.isValid = true;\r\n          } else {\r\n            row.isValid = false;\r\n            row.bottomMessage = 'Это поле неправильного формата'\r\n          }\r\n        }\r\n      }\r\n\r\n      rowsFormQuery[i] = {\r\n        ...row\r\n      }\r\n    })\r\n\r\n\r\n    this.setState({\r\n      formQuery\r\n    })\r\n\r\n    return formIsValid;\r\n  }\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (this.formIsValid()) {\r\n      let form = {}\r\n      const {formQuery} = this.state;\r\n      formQuery.fields.forEach(row => {\r\n        form[row.name] = row.value\r\n      });\r\n      console.info('is valid', form)\r\n      this.props.sendResponse(form)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {formQuery, actionText} = this.state;\r\n    const {id, hashParams} = this.props;\r\n    let rowsFormQuery = formQuery.fields || [];\r\n    return (\r\n      <Panel id={id}>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <FormLayout>\r\n          {rowsFormQuery.map((r) => this.renderRow(r))}\r\n          <Button size=\"xl\" onClick={this.submitForm}>{actionText}</Button>\r\n        </FormLayout>\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class WallPostPanel extends React.Component {\r\n  \r\n  wallPost = () => {\r\n    const {hashParams} = this.props;\r\n    if (bridge.supports(\"VKWebAppShowWallPostBox\")) {\r\n      let data = {}\r\n\r\n      if (hashParams.get('message')) {\r\n        data.message = hashParams.get('message')\r\n      }\r\n\r\n      if (hashParams.get('friends_only')) {\r\n        data.friends_only = Number(Number(hashParams.get('friends_only')) === 1)\r\n      }\r\n\r\n      if (hashParams.get('attachments')) {\r\n        data.attachments = hashParams.get('attachments')\r\n      }\r\n\r\n      if (hashParams.get('signed')) {\r\n        data.signed = Number(Number(hashParams.get('signed')) === 1)\r\n      }\r\n        \r\n      if (hashParams.get('publish_date')) {\r\n        data.publish_date = Number(hashParams.get('publish_date'))\r\n      }\r\n\r\n      if (hashParams.get('mark_as_ads')) {\r\n        data.mark_as_ads = Number(Number(hashParams.get('mark_as_ads')) === 1)\r\n      }\r\n\r\n      if (hashParams.get('close_comments')) {\r\n        data.close_comments = Number(Number(hashParams.get('close_comments')) === 1)\r\n      }\r\n\r\n      bridge.send(\"VKWebAppShowWallPostBox\", data).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось опубликовать запись\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Публикация записей на этом устройстве не доступна\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.wallPost} \r\n          hashParams={hashParams}\r\n          actionText=\"Опубликовать\"\r\n          requests=\"Предлагает опубликовать запись на Вашей стене\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Search,\r\n  PanelSpinner,\r\n  Div,\r\n  Group,\r\n  Header,\r\n  List,\r\n  Cell,\r\n  Link,\r\n  FixedLayout,\r\n  Button\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport {smoothScrollToTop} from '../services/functions';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport Icon28ArrowUpOutline from '@vkontakte/icons/dist/28/arrow_up_outline';\r\n\r\nexport default class GetChairsPanel extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    \r\n    let {hashParams} = props;\r\n    let method = hashParams.get('method');\r\n    this.isEducationMethod = ['selectFaculty', 'selectUniversity', 'selectChair', 'selectSchool', 'selectMetroStation'].indexOf(method) !== -1;\r\n\r\n    this.state = {\r\n      countries: [],\r\n      cities: [],\r\n      unversities: [],\r\n      faculties: [],\r\n      chairs: [],\r\n      schools: [],\r\n      regions: [],\r\n      metroStations: [],\r\n\r\n      selectedCountryId: 0,\r\n      selectedCityId: 0,\r\n      selectedFacultyId: 0,\r\n      selectedUniversityId: 0,\r\n      selectedChairId: 0,\r\n      selectedSchoolId: 0,\r\n      selectedRegionId: 0,\r\n      selectedMetroStationId: 0,\r\n\r\n      loadedCountries: false,\r\n      loadedCities: false,\r\n      loadedUniversities: false,\r\n      loadedFaculties: false,\r\n      loadedChairs: false,\r\n      loadedSchools: false,\r\n      loadedRegions: false,\r\n      loadedMetroStations: false,\r\n\r\n      countryName: '',\r\n      cityName: '',\r\n      universityName: '',\r\n      facultyName: '',\r\n      chairName: '',\r\n      schoolName: '',\r\n      regionName: '',\r\n      metroStationName: '',\r\n\r\n      searchQuery: '',\r\n\r\n      page: 'countries',\r\n\r\n      showScrollToTop: false\r\n    }\r\n\r\n    this.scrolls = {\r\n      'countries': 0,\r\n      'cities': 0,\r\n      'regions': 0,\r\n      'unversities': 0,\r\n      'faculties': 0,\r\n      'chairs': 0,\r\n      'metro_stations': 0,\r\n      'schools': 0\r\n    }\r\n\r\n    this.backActions = [];\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let isEducationMethod = this.isEducationMethod\r\n    let {hashParams, activeHash} = this.props;\r\n\r\n    if (hashParams.get('country_id')) {\r\n      if (activeHash === \"selectRegion\") {\r\n        this.goToRegions()\r\n      } else {\r\n        this.goToCities()\r\n      }\r\n    } else if (hashParams.get('city_id') && isEducationMethod) {\r\n      if (activeHash === \"selectSchool\") {\r\n        this.goToSchools()\r\n      } else if (activeHash === \"selectMetroStation\") {\r\n        this.goToMetroStations()\r\n      } else {\r\n        this.goToUniversities()\r\n      }\r\n    } else if (hashParams.get('university_id') && isEducationMethod) {\r\n      this.goToFaculties() \r\n    } else if (hashParams.get('faculty_id') && isEducationMethod) {\r\n      this.goToChairs() \r\n    } else if (!this.state.countries.length) {\r\n      this.loadCountries();\r\n    }\r\n\r\n    window.onpopstate = (e) => {\r\n      console.log(e)\r\n      if (e.type === \"popstate\") {\r\n        console.log(this.backActions)\r\n        if (this.backActions.length && this.backActions[this.backActions.length - 1]) {\r\n          try {\r\n            this.backActions[this.backActions.length - 1]();\r\n          } catch (e) {\r\n            console.error(e)\r\n          }\r\n          \r\n          this.backActions = this.backActions.slice(0, this.backActions.length - 1);\r\n\r\n        }\r\n        // window.history.pushState(null, null)\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", this.saveScrolls)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener(\"scroll\", this.saveScrolls)\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (window.scrolling) return;\r\n    window.scrollTo(0, this.scrolls[this.state.page]);\r\n  }\r\n\r\n  saveScrolls = (e) => {\r\n    this.scrolls[this.state.page] = window.pageYOffset;\r\n\r\n    if (window.pageYOffset > 320 && !this.state.showScrollToTop) {\r\n      this.setState({ \r\n        showScrollToTop: true\r\n      })\r\n    } else if (this.state.showScrollToTop && window.pageYOffset <= 320) {\r\n      this.setState({\r\n        showScrollToTop: false\r\n      })\r\n    }\r\n  }\r\n\r\n  async goToCities () {\r\n    let {hashParams, vkApi} = this.props;\r\n    \r\n    let country = await  vkApi('database.getCountriesById', {\r\n      country_ids: Number(hashParams.get('country_id'))\r\n    });\r\n\r\n    country = country[0];\r\n\r\n    this.setState({\r\n      selectedCountryId: country.id,\r\n      countryName: country.title,\r\n      loadedCountries: true,\r\n      page: 'cities'\r\n    }, () => {\r\n      this.loadCities();\r\n    })\r\n  }\r\n\r\n   async goToRegions () {\r\n    let {hashParams, vkApi} = this.props;\r\n    \r\n    let country = await  vkApi('database.getCountriesById', {\r\n      country_ids: Number(hashParams.get('country_id'))\r\n    });\r\n\r\n    country = country[0];\r\n\r\n    this.setState({\r\n      selectedCountryId: country.id,\r\n      countryName: country.title,\r\n      loadedCountries: true\r\n    }, () => {\r\n      this.loadRegions();\r\n    })\r\n  }\r\n\r\n  async goToUniversities () {\r\n    let {hashParams, vkApi} = this.props;\r\n    \r\n    let city = await  vkApi('database.getCitiesById', {\r\n      city_ids: Number(hashParams.get('city_id'))\r\n    });\r\n\r\n    city = city[0];\r\n\r\n    this.setState({\r\n      selectedCityId: city.id,\r\n      cityName: city.title,\r\n      loadedCities: true\r\n    }, () => {\r\n      this.loadUniversities();\r\n    })\r\n  }\r\n\r\n  async goToSchools () {\r\n    let {hashParams, vkApi} = this.props;\r\n    \r\n    let city = await  vkApi('database.getCitiesById', {\r\n      city_ids: Number(hashParams.get('city_id'))\r\n    });\r\n\r\n    city = city[0];\r\n\r\n    this.setState({\r\n      selectedCityId: city.id,\r\n      cityName: city.title,\r\n      loadedCities: true\r\n    }, () => {\r\n      this.loadSchools();\r\n    })\r\n  }\r\n\r\n  async goToMetroStations () {\r\n    let {hashParams, vkApi} = this.props;\r\n    \r\n    let city = await  vkApi('database.getCitiesById', {\r\n      city_ids: Number(hashParams.get('city_id'))\r\n    });\r\n\r\n    city = city[0];\r\n\r\n    this.setState({\r\n      selectedCityId: city.id,\r\n      cityName: city.title,\r\n      loadedCities: true\r\n    }, () => {\r\n      this.loadMetroStations();\r\n    })\r\n  }\r\n\r\n  async goToFaculties () {\r\n    let {hashParams, vkApi} = this.props;\r\n  \r\n    this.setState({\r\n      selectedUniversityId: Number(hashParams.get('university_id')),\r\n      loadedUniversities: true\r\n    }, () => {\r\n      this.loadFaculties();\r\n    })\r\n  }\r\n\r\n  async goToChairs () {\r\n    let {hashParams, vkApi} = this.props;\r\n  \r\n    this.setState({\r\n      selectedFacultyId: Number(hashParams.get('faculty_id')),\r\n      loadedFaculties: true\r\n    }, () => {\r\n      this.loadChairs();\r\n    })\r\n  }\r\n\r\n  async loadCountries (q=\"\") {\r\n    \r\n    this.setState({\r\n      loadedCountries: false\r\n    });\r\n\r\n    let countries = await this.props.vkApi('database.getCountries', {\r\n      need_all: 1,\r\n      q,\r\n      count: 1000\r\n    });\r\n\r\n    this.setState({\r\n      loadedCountries: true,\r\n      countries: countries.items\r\n    })\r\n  }\r\n\r\n  async loadCities (q=\"\") {\r\n    this.setState({\r\n      loadedCities: false\r\n    });\r\n\r\n    let cities = await this.props.vkApi('database.getCities', {\r\n      country_id: this.state.selectedCountryId,\r\n      q\r\n    })\r\n\r\n    this.setState({\r\n      loadedCities: true,\r\n      cities: cities.items\r\n    })\r\n  }\r\n\r\n  async loadRegions (q=\"\") {\r\n    this.setState({\r\n      loadedRegions: false\r\n    });\r\n\r\n    let regions = await this.props.vkApi('database.getRegions', {\r\n      country_id: this.state.selectedCountryId,\r\n      q\r\n    })\r\n\r\n    this.setState({\r\n      loadedRegions: true,\r\n      regions: regions.items,\r\n      page: 'regions'\r\n    })\r\n  }\r\n\r\n  selectCountry = (countryId, title) => {\r\n    const {activeHash} = this.props;\r\n    if (activeHash === \"selectCountry\") {\r\n      this.props.sendResponse({\r\n        \"country_id\": countryId,\r\n        \"country_title\": title\r\n      });\r\n    } else {\r\n      this.nextPage();\r\n      \r\n      this.backActions.push(activeHash === \"selectRegion\" ? this.clearRegions : this.clearCities);\r\n\r\n      this.setState({\r\n        selectedCountryId: countryId,\r\n        searchQuery: '',\r\n        countryName: title,\r\n        page: 'cities'\r\n      }, () => {\r\n        if (activeHash === \"selectRegion\") {\r\n          this.loadRegions();\r\n        } else {\r\n          this.loadCities();\r\n        }\r\n      });\r\n    } \r\n  }\r\n\r\n  nextPage () {\r\n    window.history.pushState(null, null)\r\n  }\r\n\r\n  goBack = () => {\r\n    console.log('back')\r\n    window.history.back();\r\n  }\r\n\r\n  selectCity = async (city) => {\r\n    const {activeHash} = this.props;\r\n    \r\n    if (activeHash === \"selectCity\") {\r\n      this.props.sendResponse({\r\n        \"country_id\": this.state.selectedCountryId,\r\n        \"country_title\": this.state.countryName,\r\n        \"city_id\": city.id,\r\n        \"city_title\": city.title\r\n      });\r\n    } else {\r\n      this.nextPage();\r\n      \r\n      this.backActions.push(activeHash === \"selectSchool\" ? this.clearSchool : \r\n      activeHash === \"selectMetroStation\" ? this.clearMetroStation : this.clearUniversity);\r\n\r\n      this.setState({\r\n        selectedCityId: city.id,\r\n        searchQuery: '',\r\n        cityName: city.title,\r\n        page: activeHash === \"selectSchool\" ? \"schools\" : activeHash === \"selectMetroStation\" ? \"metro_stations\" : \"universities\"\r\n      }, () => {\r\n        if (activeHash === \"selectSchool\") {\r\n          this.loadSchools()\r\n        } else if (activeHash === \"selectMetroStation\") {\r\n          this.loadMetroStations()\r\n        } else {\r\n          this.loadUniversities()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selectRegion = async (region) => {\r\n    const {activeHash} = this.props;\r\n    \r\n    this.props.sendResponse({\r\n      \"country_id\": this.state.selectedCountryId,\r\n      \"country_title\": this.state.countryName,\r\n      \"region_id\": region.id,\r\n      \"region_title\": region.title\r\n    });\r\n  }\r\n\r\n  selectChair = async (chair) => {\r\n    this.props.sendResponse({\r\n      \"chair_id\": chair.id,\r\n      \"chair_title\": chair.title,\r\n      \r\n      \"city_id\": this.state.selectedCityId || 0,\r\n      \"city_title\": this.state.cityName || \"\",\r\n\r\n      \"country_id\": this.state.selectedCountryId || 0,\r\n      \"country_title\": this.state.countryName || \"\",\r\n\r\n      \"university_id\": this.state.selectedUniversityId || 0,\r\n      \"university_title\": this.state.universityName || \"\",\r\n\r\n\r\n      \"faculty_id\": this.state.selectedFacultyId || 0,\r\n      \"faculty_title\": this.state.facultyName || \"\"\r\n    });\r\n  }\r\n\r\n  async loadUniversities (q=\"\") {\r\n    this.setState({\r\n      loadedUniversities: false\r\n    });\r\n\r\n    let unversities = await this.props.vkApi('database.getUniversities', {\r\n      city_id: this.state.selectedCityId,\r\n      q\r\n    })\r\n\r\n    this.setState({\r\n      loadedUniversities: true,\r\n      unversities: unversities.items,\r\n      page: 'universities'\r\n    })\r\n  }\r\n\r\n  async loadSchools (q=\"\") {\r\n    this.setState({\r\n      loadedSchools: false\r\n    });\r\n\r\n    let schools = await this.props.vkApi('database.getSchools', {\r\n      city_id: this.state.selectedCityId,\r\n      q\r\n    })\r\n\r\n    this.setState({\r\n      loadedSchools: true,\r\n      schools: schools.items,\r\n      page: 'schools'\r\n    })\r\n  }\r\n\r\n  async loadMetroStations () {\r\n    this.setState({\r\n      loadedMetroStations: false\r\n    });\r\n\r\n    let stations = await this.props.vkApi('database.getMetroStations', {\r\n      city_id: this.state.selectedCityId,\r\n      count: 500\r\n    })\r\n\r\n    this.setState({\r\n      loadedMetroStations: true,\r\n      metroStations: stations.items,\r\n      page: 'metro_stations'\r\n    })\r\n  }\r\n\r\n  clearCities = () => {\r\n    let newState = {\r\n      cities: [],\r\n      selectedCountryId: 0,\r\n      countryName: '',\r\n      searchQuery: '',\r\n      page: 'countries'\r\n    }\r\n\r\n    const {hashParams} = this.props;\r\n\r\n    if (hashParams.get('country_id') && !this.state.countries.length) {\r\n      this.loadCountries();\r\n    }\r\n\r\n    this.scrolls['cities'] = 0;\r\n    this.setState(newState)\r\n  }\r\n\r\n  clearRegions = () => {\r\n    let newState = {\r\n      regions: [],\r\n      selectedCountryId: 0,\r\n      countryName: '',\r\n      searchQuery: ''\r\n    }\r\n\r\n    const {hashParams} = this.props;\r\n\r\n    if (hashParams.get('country_id') && !this.state.countries.length) {\r\n      this.loadCountries();\r\n    }\r\n    \r\n    this.scrolls['regions'] = 0;\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  renderCities () {\r\n    const {cities, loadedCities, searchQuery} = this.state;\r\n    \r\n    const {hashParams} = this.props;\r\n\r\n    let canChangeCountry = hashParams.get('can_change_country') !== 'no';\r\n\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={canChangeCountry ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.goBack}>Изменить страну</Button> : null}>Выберите город {this.getTargetName()}</Header>}>\r\n        <List>\r\n          {cities.map(city => (\r\n            <Cell onClick={() => this.selectCity(city)} key={\"city\" + city.id}>\r\n              {city.title}\r\n            </Cell>\r\n          ))}\r\n          {!cities.length ? <Div>Города не найдены</Div> : null}\r\n        </List>\r\n      </Group>\r\n    )\r\n\r\n  }\r\n\r\n  renderRegions () {\r\n    const {regions, searchQuery} = this.state;\r\n    \r\n    const {hashParams} = this.props;\r\n\r\n    let canChangeCountry = hashParams.get('can_change_country') !== 'no';\r\n\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={canChangeCountry ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.goBack}>Изменить страну</Button> : null}>Выберите регион</Header>}>\r\n        <List>\r\n          {regions.map(region => (\r\n            <Cell onClick={() => this.selectRegion(region)} key={\"region\" + region.id}>\r\n              {region.title}\r\n            </Cell>\r\n          ))}\r\n          {!regions.length ? <Div>Регионов не найдено</Div> : null}\r\n        </List>\r\n      </Group>\r\n    )\r\n\r\n  }\r\n\r\n  changeSearchQuery = (e) => {\r\n    let q = e.target.value;\r\n    const {activeHash} = this.props;\r\n\r\n    clearTimeout(this.searchTimeout);\r\n    this.searchTimeout = setTimeout(() => {\r\n    \r\n      this.scrolls[this.state.page] = 0;\r\n      this.setState({\r\n        searchQuery: String(q).toLocaleLowerCase()\r\n      });\r\n\r\n      if (this.state.selectedCountryId && !this.state.selectedCityId && !this.state.selectedUniversityId) {\r\n        if (activeHash === \"selectRegion\") {\r\n          this.loadRegions(q);\r\n        } else {\r\n          this.loadCities(q);\r\n        }\r\n      } else if (this.state.selectedCityId && !this.state.selectedUniversityId && !this.state.selectedSchoolId) {\r\n        if (activeHash === \"selectSchool\") {\r\n          this.loadSchools(q);\r\n        } else {\r\n          if (activeHash !== \"selectMetroStation\") {\r\n             this.loadUniversities(q);\r\n          }\r\n        }\r\n      }\r\n    }, 400)\r\n  }\r\n\r\n  getTargetName () {\r\n    const {activeHash} = this.props;\r\n    if (this.isEducationMethod) {\r\n      if (activeHash === \"selectSchool\") {\r\n        return 'школы';\r\n      } else if (activeHash === \"selectMetroStation\") {\r\n        return ''\r\n      } else {\r\n        return 'университета';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n  renderCountries () {\r\n    const {countries, searchQuery} = this.state;\r\n    return (\r\n      <Group header={<Header mode=\"secondary\">Выберите страну {this.getTargetName()}</Header>}>\r\n        <List>\r\n          {countries.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).map(country => (\r\n            <Cell onClick={() => this.selectCountry(country.id, country.title)} key={\"country\" + country.id}>\r\n              {country.title}\r\n            </Cell>\r\n          ))}\r\n          {!(countries.filter(c => {\r\n              return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n            }).length) ? <Div>Стран не найдено</Div> : null}\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  async loadFaculties (q=\"\") {\r\n    this.setState({\r\n      loadedFaculties: false\r\n    });\r\n\r\n    let faculties = await this.props.vkApi('database.getFaculties', {\r\n      university_id: this.state.selectedUniversityId,\r\n      q,\r\n      count: 10000\r\n    })\r\n\r\n    this.setState({\r\n      loadedFaculties: true,\r\n      faculties: faculties.items,\r\n      page: 'faculties'\r\n    })\r\n  }\r\n\r\n  async loadChairs () {\r\n    this.setState({\r\n      loadedChairs: false\r\n    });\r\n\r\n    let chairs = await this.props.vkApi('database.getChairs', {\r\n      faculty_id: this.state.selectedFacultyId,\r\n      count: 10000\r\n    })\r\n\r\n    this.setState({\r\n      loadedChairs: true,\r\n      chairs: chairs.items,\r\n      page: 'chairs'\r\n    })\r\n  }\r\n\r\n  clearUniversity = () => {\r\n    const {hashParams} = this.props;\r\n\r\n    let newState = {\r\n      selectedCityId: 0,\r\n      unversities: [],\r\n      loadedUniversities: false,\r\n      selectedUniversityId: 0,\r\n      searchQuery: '',\r\n      page: 'cities'\r\n    }\r\n    \r\n    this.scrolls['universities'] = 0;\r\n\r\n    this.setState(newState, () => {\r\n      if (hashParams.get('city_id')) {\r\n        this.loadCountries()\r\n      }\r\n    })\r\n  }\r\n\r\n  clearMetroStation = () => {\r\n    const {hashParams} = this.props;\r\n\r\n    let newState = {\r\n      selectedCityId: 0,\r\n      unversities: [],\r\n      loadedUniversities: false,\r\n      selectedUniversityId: 0,\r\n      searchQuery: '',\r\n      page: 'cities',\r\n      loadedMetroStations: false,\r\n      selectedMetroStationId: 0,\r\n      metroStations: []\r\n    }\r\n    \r\n    this.scrolls['metro_stations'] = 0;\r\n\r\n    this.setState(newState, () => {\r\n      if (hashParams.get('city_id')) {\r\n        this.loadCountries()\r\n      }\r\n    })\r\n  }\r\n\r\n  clearSchool = () => {\r\n    const {hashParams} = this.props;\r\n\r\n    let newState = {\r\n      selectedCityId: 0,\r\n      schools: [],\r\n      loadedSchools: false,\r\n      selectedSchoolId: 0,\r\n      searchQuery: ''\r\n    }\r\n    \r\n    this.scrolls['schools'] = 0;\r\n\r\n    this.setState(newState, () => {\r\n      if (hashParams.get('city_id')) {\r\n        this.loadCountries()\r\n      }\r\n    })\r\n  }\r\n\r\n  clearFaculty = () => {\r\n    const {hashParams} = this.props;\r\n\r\n    let newState = {\r\n      selectedUniversityId: 0,\r\n      faculties: [],\r\n      loadedFaculties: false,\r\n      searchQuery: '',\r\n      page: 'universities'\r\n    }\r\n\r\n    this.scrolls['faculties'] = 0;\r\n\r\n    this.setState(newState, () => {\r\n      if (hashParams.get('university_id')) {\r\n        this.loadCountries()\r\n      }\r\n    })\r\n  }\r\n\r\n  clearChair = () => {\r\n    const {hashParams} = this.props;\r\n\r\n    let newState = {\r\n      selectedFacultyId: 0,\r\n      chairs: [],\r\n      loadedChairs: false,\r\n      searchQuery: '',\r\n      page: 'faculties'\r\n    }\r\n    \r\n    this.scrolls['chairs'] = 0;\r\n\r\n    this.setState(newState, () => {\r\n      if (hashParams.get('faculty_id')) {\r\n        this.loadCountries()\r\n      }\r\n    })\r\n  }\r\n\r\n  selectUniversity = (universityId, title) => {\r\n    const {activeHash} = this.props;\r\n    if (activeHash === \"selectUniversity\") {\r\n      this.props.sendResponse({\r\n        \"country_id\": this.state.selectedCountryId,\r\n        \"country_title\": this.state.countryName,\r\n        \"city_id\": this.state.selectedCityId,\r\n        \"city_title\": this.state.cityName,\r\n        \"university_id\": universityId,\r\n        \"university_title\": title\r\n      });\r\n    } else {\r\n      this.nextPage();\r\n      this.backActions.push(this.clearFaculty)\r\n      this.setState({\r\n        selectedUniversityId: universityId,\r\n        searchQuery: '',\r\n        universityName: title,\r\n        page: 'faculties'\r\n      }, () => {\r\n        this.loadFaculties();\r\n      })\r\n    }\r\n  }\r\n\r\n  selectSchool = (schoolId, title) => {\r\n    const {activeHash} = this.props;\r\n    this.props.sendResponse({\r\n      \"country_id\": this.state.selectedCountryId,\r\n      \"country_title\": this.state.countryName,\r\n      \"city_id\": this.state.selectedCityId,\r\n      \"city_title\": this.state.cityName,\r\n      \"school_id\": schoolId,\r\n      \"school_title\": title\r\n    });\r\n  }\r\n\r\n  selectMetroStation = (stationId, title) => {\r\n    const {activeHash} = this.props;\r\n    this.props.sendResponse({\r\n      \"country_id\": this.state.selectedCountryId,\r\n      \"country_title\": this.state.countryName,\r\n      \"city_id\": this.state.selectedCityId,\r\n      \"city_title\": this.state.cityName,\r\n      \"station_id\": stationId,\r\n      \"station_title\": title\r\n    });\r\n  }\r\n\r\n  selectFaculty = (facultyId, title) => {\r\n    const {activeHash} = this.props;\r\n    if (activeHash === \"selectFaculty\") {\r\n      this.props.sendResponse({\r\n        \"country_id\": this.state.selectedCountryId,\r\n        \"country_title\": this.state.countryName,\r\n        \"city_id\": this.state.selectedCityId,\r\n        \"city_title\": this.state.cityName,\r\n        \"university_id\": this.state.selectedUniversityId,\r\n        \"university_title\": this.state.universityName,\r\n        \"faculty_id\": facultyId,\r\n        \"faculty_title\": title\r\n      });\r\n    } else {\r\n      this.nextPage();\r\n      this.backActions.push(this.clearChair)\r\n      this.setState({\r\n        selectedFacultyId: facultyId,\r\n        searchQuery: '',\r\n        facultyName: title,\r\n        page: 'chairs'\r\n      }, () => {\r\n        this.loadChairs();\r\n      })\r\n    }\r\n  }\r\n\r\n  renderUniversities () {\r\n    const {unversities, searchQuery} = this.state;\r\n    const {hashParams} = this.props;\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={hashParams.get('can_change_city') != 'no' ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.goBack}>Изменить город</Button> : null}>Выберите университет</Header>}>\r\n        <List>\r\n          {unversities.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).map(university => (\r\n            <Cell onClick={() => this.selectUniversity(university.id, university.title)} key={\"unversity\" + university.id}>\r\n              {university.title}\r\n            </Cell>\r\n          ))}\r\n\r\n          {!(unversities.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).length) ? <Div>Университетов не найдено</Div> : null}\r\n\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  renderSchools () {\r\n    const {schools, searchQuery} = this.state;\r\n    const {hashParams} = this.props;\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={hashParams.get('can_change_city') != 'no' ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.clearSchool}>Изменить город</Button> : null}>Выберите школу</Header>}>\r\n        <List>\r\n          {schools.map(school => (\r\n            <Cell onClick={() => this.selectSchool(school.id, school.title)} key={\"school\" + school.id}>\r\n              {school.title}\r\n            </Cell>\r\n          ))}\r\n\r\n          {!schools.length ? <Div>Школ не найдено</Div> : null}\r\n\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  renderMetroStations () {\r\n    const {metroStations, searchQuery} = this.state;\r\n    const {hashParams} = this.props;\r\n\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={hashParams.get('can_change_city') != 'no' ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.goBack}>Изменить город</Button> : null}>Выберите станцию</Header>}>\r\n        <List>\r\n          {metroStations.filter(c => {\r\n            return String(c.name).toLocaleLowerCase().match(searchQuery)\r\n          }).map(station => (\r\n            <Cell onClick={() => this.selectMetroStation(station.id, station.name)} key={\"station\" + station.id}>\r\n              {station.name}\r\n            </Cell>\r\n          ))}\r\n\r\n          {!(metroStations.filter(c => {\r\n            return String(c.name).toLocaleLowerCase().match(searchQuery)\r\n          }).length) ? <Div>Станций не найдено</Div> : null}\r\n\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n\r\n  renderFaculties () {\r\n    const {faculties, searchQuery} = this.state;\r\n    const {hashParams} = this.props\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={hashParams.get('can_change_university') !== 'no' ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.goBack}>Изменить университет</Button> : null}>Выберите факультет</Header>}>\r\n        <List>\r\n          {faculties.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).map(faculty => (\r\n            <Cell onClick={() => this.selectFaculty(faculty.id, faculty.title)} key={\"faculty\" + faculty.id}>\r\n              {faculty.title}\r\n            </Cell>\r\n          ))}\r\n          {!(faculties.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).length) ? <Div>Факультетов не найдено</Div> : null}\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  renderChairs () {\r\n    const {chairs, searchQuery} = this.state;\r\n    const {hashParams} = this.props\r\n    return (\r\n      <Group header={<Header mode=\"secondary\" aside={hashParams.get('can_change_faculty') !== 'no' ? <Button className=\"btn-15\" mode=\"tertiary\" onClick={this.goBack}>Изменить факультет</Button> : null}>Выберите кафедру</Header>}>\r\n        <List>\r\n          {chairs.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).map(chair => (\r\n            <Cell onClick={() => this.selectChair(chair)} key={\"chair\" + chair.id}>\r\n              {chair.title}\r\n            </Cell>\r\n          ))}\r\n          {!(chairs.filter(c => {\r\n            return String(c.title).toLocaleLowerCase().match(searchQuery)\r\n          }).length) ? <Div>Кафедр не найдено</Div> : null}\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  renderPage = () => {\r\n    const {\r\n      countries, \r\n      cities,\r\n      unversities,\r\n      faculties,\r\n      chairs,\r\n      schools,\r\n      regions,\r\n      metroStations,\r\n\r\n      countryName, \r\n      cityName,\r\n      universityName,\r\n      chairName,\r\n      regionName,\r\n      metroStationName,\r\n\r\n\r\n      selectedCountryId,\r\n      selectedCityId,\r\n      selectedUniversityId,\r\n      selectedFacultyId,\r\n      selectedChairId,\r\n      selectedSchoolId,\r\n      selectedRegionId,\r\n      selectedMetroStationId,\r\n\r\n      loadedCountries,\r\n      loadedCities,\r\n      loadedUniversities,\r\n      loadedFaculties,\r\n      loadedChairs,\r\n      loadedSchools,\r\n      loadedRegions,\r\n      loadedMetroStations,\r\n\r\n      searchQuery\r\n\r\n    } = this.state;\r\n\r\n    const {hashParams, activeHash} = this.props;\r\n\r\n\r\n    if (\r\n      // Не загрузились страны\r\n      (\r\n        (loadedCountries && !countries.length && hashParams.get('country_id') == null) || \r\n        ((hashParams.get('country_id') != null) && !countryName && loadedCountries && selectedCountryId && !countries.length)\r\n      ) ||\r\n      // Не загрузились города\r\n      (\r\n        (loadedCities && !cities.length && (hashParams.get('city_id') == null) && selectedCountryId) || \r\n        ((hashParams.get('city_id') != null) && !cityName && loadedCities && !cities.length)\r\n      ) ||\r\n      \r\n      (\r\n        (loadedUniversities && !unversities.length && hashParams.get('university_id') == null && [\"selectSchool\", \"selectMetroStation\"].indexOf(activeHash) === -1)\r\n      ) ||\r\n      (\r\n        (loadedFaculties && !faculties.length && hashParams.get('faculty_id') == null)\r\n      ) ||\r\n      (\r\n        (loadedChairs && !chairs.length)\r\n      )\r\n\r\n    ) {\r\n      // Ошибка\r\n        if (!selectedCountryId && !selectedCityId && !selectedUniversityId && !selectedFacultyId) {\r\n          return (this.renderCountries())\r\n        } else if (!selectedCityId && !selectedUniversityId && !selectedFacultyId) {\r\n          if (activeHash === \"selectRegion\") {\r\n            return this.renderRegions();\r\n          } else {\r\n            return this.renderCities();\r\n          }\r\n        } else if (!selectedUniversityId && !selectedFacultyId) {\r\n          if (activeHash === \"selectSchool\") {\r\n            return this.renderSchools()\r\n          } else if (activeHash === \"selectMetroStation\") {\r\n            return this.renderMetroStations()\r\n          } else {\r\n            return this.renderUniversities()\r\n          }\r\n        } else if (!selectedFacultyId) {\r\n          return this.renderFaculties()\r\n        } else {\r\n          return this.renderChairs()\r\n        }\r\n    } else if (\r\n      (!loadedCountries && (!selectedCountryId && !countries.length && !selectedCityId && !selectedRegionId && !selectedUniversityId && !selectedFacultyId)) ||\r\n      \r\n      (!loadedCities && (!selectedCityId && !cities.length) && selectedCountryId  && !selectedUniversityId && !selectedFacultyId && activeHash !== \"selectRegion\") ||\r\n      (!loadedRegions && (!selectedRegionId && !regions.length) && selectedCountryId  && !selectedUniversityId && !selectedFacultyId && activeHash === \"selectRegion\") ||\r\n      \r\n      (!loadedUniversities && (!selectedUniversityId && !unversities.length) && selectedCityId && !selectedFacultyId && [\"selectSchool\", \"selectMetroStation\"].indexOf(activeHash) === -1) ||\r\n      (!loadedFaculties && (!selectedFacultyId && !faculties.length) && selectedUniversityId) ||\r\n      \r\n      (!loadedSchools && (!selectedSchoolId && !schools.length) && selectedCityId && activeHash === \"selectSchool\") ||\r\n      (!loadedMetroStations && (!selectedMetroStationId && !metroStations.length) && selectedCityId && activeHash === \"selectMetroStation\") ||\r\n\r\n      (!loadedChairs && (!selectedChairId && !chairs.length) && selectedFacultyId)\r\n    ) {\r\n      // Возвращаем спиннер\r\n      return (\r\n        <PanelSpinner size=\"l\"/>\r\n      );\r\n    } else {\r\n      // Страница с итогом\r\n      if (!selectedCountryId && !selectedCityId && !selectedUniversityId && !selectedFacultyId) {\r\n        return (this.renderCountries())\r\n      } else if (\r\n        (!selectedCityId && !selectedUniversityId && !selectedFacultyId && activeHash !== \"selectRegion\") ||\r\n        (!selectedRegionId && !selectedUniversityId && !selectedFacultyId && activeHash === \"selectRegion\")\r\n      ) {\r\n        if (activeHash === \"selectRegion\") {\r\n          return this.renderRegions();\r\n        } else {\r\n          return this.renderCities();\r\n        }\r\n      } else if (\r\n        (!selectedUniversityId && !selectedFacultyId && activeHash !== \"selectSchool\") || \r\n        (!selectedSchoolId && !selectedFacultyId && activeHash === \"selectSchool\")\r\n      ) {\r\n        if (activeHash === \"selectSchool\") {\r\n          return this.renderSchools()\r\n        } else if (activeHash === \"selectMetroStation\") {\r\n          return this.renderMetroStations();\r\n        } else {\r\n          return this.renderUniversities()\r\n        }\r\n      } else if (!selectedFacultyId) {\r\n        return this.renderFaculties()\r\n      } else if (!selectedChairId) {\r\n        return this.renderChairs()\r\n      }\r\n    }\r\n\r\n  }\r\n  render () {\r\n    \r\n    const {\r\n      countries, \r\n      cities,\r\n\r\n      countryName, \r\n      cityName,\r\n\r\n      selectedCountryId,\r\n      selectedCityId,\r\n      selectedUniversityId,\r\n      selectedFacultyId,\r\n      selectedChairId,\r\n\r\n    } = this.state;\r\n\r\n    const {hashParams} = this.props;\r\n\r\n    let countryIdParams = hashParams.get('country_id');\r\n    let searchKey = '';\r\n    \r\n    if (selectedCountryId && !selectedCityId && !selectedUniversityId && !selectedChairId) {\r\n      searchKey = 'city'\r\n    } else if (selectedCityId && !selectedUniversityId && !selectedChairId) {\r\n      searchKey = 'university'\r\n    } else if (selectedUniversityId && !selectedFacultyId) {\r\n      searchKey = 'faculty'\r\n    } else if (selectedFacultyId) {\r\n      searchKey = 'chair'\r\n    } else {\r\n      searchKey = 'country'\r\n    }\r\n\r\n    return (\r\n      <Panel id={this.props.id}>\r\n        <StandardSearchHeader hashParams={hashParams} setSearch={true} key={searchKey} onChange={this.changeSearchQuery}/>\r\n        \r\n        {this.renderPage()}\r\n        <FixedLayout vertical=\"bottom\">\r\n          {this.state.showScrollToTop ? <Button onClick={() => smoothScrollToTop()} className=\"scroll-to-top-button\"><Icon28ArrowUpOutline/></Button> : null}\r\n        </FixedLayout>\r\n      </Panel>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\n\r\nimport {\r\n  Panel\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class ShowStoryBoxPanel extends React.Component {\r\n  \r\n\r\n  showStoryBox = () => {\r\n    let {hashParams} = this.props\r\n\r\n    if (bridge.supports(\"VKWebAppShowStoryBox\")) {\r\n      let backgroundType = hashParams.get('background_type') || 'none';\r\n     \r\n      let url = hashParams.get('url')\r\n      let blob = hashParams.get('blob')\r\n      let locked = Number(hashParams.get('locked')) === 1\r\n      let attachment = hashParams.get('attachment')\r\n      let stickers = hashParams.getAll('stickers')\r\n\r\n      let params = {}\r\n\r\n      if (backgroundType) params.background_type = backgroundType\r\n      if (url) params.url = url\r\n      if (blob) params.blob = blob\r\n\r\n      stickers.forEach((sticker, i) => {\r\n        try {\r\n          sticker = JSON.parse(decodeURIComponent(sticker))\r\n        } catch (e) {\r\n          sticker = {}\r\n        }\r\n        stickers[i] = sticker;\r\n      })\r\n\r\n      if (stickers.length) params.stickers = stickers\r\n\r\n      if (attachment) {\r\n        try {\r\n          attachment = JSON.parse(attachment)\r\n          params.attachment = attachment\r\n        } catch (e) {\r\n          params.attachment = {}\r\n        }\r\n      }\r\n\r\n\r\n      params.locked = locked\r\n\r\n      bridge.send(\"VKWebAppShowStoryBox\", params).then(res => {\r\n        this.props.sendResponse(res);\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось опубликовать историю\", e)\r\n      });\r\n\r\n    } else {\r\n      this.props.sendError(\"Редактор историй на этом устройстве не доступен\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.showStoryBox} \r\n          hashParams={hashParams} \r\n          requests=\"Предлагает Вам опубликовать историю\"\r\n          actionText=\"Опубликовать\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  List,\r\n  Cell,\r\n  Avatar,\r\n  Spinner,\r\n  Search,\r\n  Card,\r\n  CardGrid,\r\n  Button,\r\n  Gallery,\r\n  Div,\r\n  Footer,\r\n  Checkbox,\r\n  FixedLayout,\r\n  Counter,\r\n  Link\r\n} from '@vkontakte/vkui';\r\n\r\nimport Flickity from 'react-flickity-component';\r\n\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\nimport Icon28ChecksOutline from '@vkontakte/icons/dist/28/checks_outline';\r\n\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24MarketOutline from '@vkontakte/icons/dist/24/market_outline';\r\n\r\nimport {fetch} from 'whatwg-fetch'\r\nimport {smoothScrollToTop} from '../services/functions';\r\n\r\nimport classnames from 'classnames';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\n\r\n\r\n\r\nimport './css/renderList.css';\r\n\r\n// class Flickity {}\r\nexport default class RenderListPanel extends React.Component {\r\n  \r\n  constructor (props) {\r\n    super(props)\r\n\r\n    const {hashParams} = props;\r\n\r\n    let list = hashParams.get('list');\r\n    if (!list.options) list.options = {}\r\n\r\n\r\n    let items = list.items;\r\n\r\n    this.list = list\r\n    \r\n    this.itemsGalleries = {}\r\n    this.state = {\r\n      items,\r\n      hasMore: list.options.load_more_url ? true : false,\r\n      nextPageUrl: this.list.options.load_more_url || \"\",\r\n      enableSearch: Boolean(this.list.options.enable_search),\r\n      searchQuery: \"\",\r\n      cardSize: 0,\r\n      windowWidth: window.innerWidth,\r\n      selectedItemIds: []\r\n    }\r\n\r\n    this.loading = false;\r\n  }\r\n\r\n  loadMore = async () => {\r\n    if (this.state.nextPageUrl) {\r\n      if (!this.loading) {\r\n        return this.fetchMore()\r\n      }\r\n    } else {\r\n      this.setState({\r\n        hasMore: false\r\n      })\r\n      return true;\r\n    }\r\n  }\r\n\r\n  fetchMore (q=\"\", refresh=false) {\r\n\r\n    this.loading = true;\r\n    const {hashParams} = this.props;\r\n\r\n\r\n    let nextPageUrl = q && refresh ? hashParams.get('launch_options') : this.state.nextPageUrl;\r\n    let {searchQuery} = this.state;\r\n    \r\n    let url = new URL(nextPageUrl),\r\n    \r\n    params = {\r\n      q: q ? q : searchQuery\r\n    }\r\n    \r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n    \r\n\r\n\r\n    return fetch(url).then(async (res) => {\r\n      res = await res.json();\r\n      let items = q && refresh ? (res.list.items || []) : (res.items || []);\r\n\r\n      let hasMore = q && refresh ? true : Boolean(res.has_more);\r\n      let nextPageUrl = q && refresh ? res.list.options.load_more_url : (res.next_page_url || \"\");\r\n\r\n      this.setState({\r\n        items: [...this.state.items, ...items],\r\n        hasMore,\r\n        nextPageUrl\r\n      })\r\n\r\n      this.loading = false;\r\n    }).catch(e => {\r\n      this.setState({\r\n        hasMore: false\r\n      })\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  makeSearch = (event) => {\r\n    if (!window.scrolling) {\r\n      smoothScrollToTop();\r\n    }\r\n    if (this.list.options.enable_server_search) {\r\n      // Make new fetch for refresh\r\n      this.fetchMore(event.target.value, true)\r\n    }\r\n    this.setState({\r\n      searchQuery: event.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount () {\r\n    let card = document.querySelector('.card');\r\n    if (card) {\r\n      this.setState({\r\n        cardSize: card.offsetWidth\r\n      })\r\n    }\r\n\r\n    window.onresize = () => {\r\n      let card = document.querySelector('.card');\r\n      let windowWidth = window.innerWidth;\r\n      \r\n      if (windowWidth <= 400 && this.state.windowWidth > 400 || windowWidth > 400 && this.state.windowWidth <= 400) {\r\n        this.updateCardWidth = true;\r\n      }\r\n\r\n      if (card) {\r\n        this.setState({\r\n          cardSize: card.offsetWidth,\r\n          windowWidth\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (this.updateCardWidth) {\r\n      let card = document.querySelector('.card');\r\n      this.updateCardWidth = false;\r\n      if (card) {\r\n        this.setState({\r\n          cardSize: card.offsetWidth\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.onresize = null;\r\n  }\r\n\r\n  renderIcon (icon=\"\") {\r\n    switch (icon) {\r\n      case 'market':\r\n        return <Icon28MarketOutline/>\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderActionIcon (icon=\"\") {\r\n    switch (icon) {\r\n      case 'done':\r\n        return <Icon24DoneOutline/>\r\n      case 'market':\r\n        return <Icon24MarketOutline/>\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  sendClick (itemId=0, payload=\"\") {\r\n    return this.sendResponse({\r\n      \"button_payload\": payload,\r\n      \"selected_item_id\": itemId\r\n    })\r\n  }\r\n\r\n  sendResponse (options={}) {\r\n    return this.props.sendResponse({\r\n      ...options,\r\n      \"list_type\": this.list.type,\r\n      \"list_name\": this.list.name || \"\"\r\n    })\r\n  }\r\n\r\n  sendSelectedItems = () => {\r\n    return this.sendResponse({\r\n      \"selected_item_ids\": this.state.selectedItemIds\r\n    })\r\n  }\r\n\r\n  renderButtons (item={}, k) {\r\n    let buttons = item.buttons || [];\r\n    if (!buttons.length) buttons = this.list.options.buttons || [];\r\n    const {windowWidth} = this.state;\r\n    return (\r\n      <div className=\"buttons\">\r\n        {buttons.map((button, i) => {\r\n          \r\n          let key = \"button_\" + i + \"_\" + k;\r\n          let size = windowWidth > 400 && windowWidth < 600 ? \"m\" : \"xl\";\r\n          let isSelectedItem = this.isSelectedItem(item);\r\n          \r\n\r\n          if (button.action && button.action.type) {\r\n            \r\n            let selectedStateColor = button.action.selected_state && button.action.selected_state.color ? button.action.selected_state.color : button.color;\r\n            let selectedStateLabel = button.action.selected_state && button.action.selected_state.label ? button.action.selected_state.label : button.action.label;\r\n            let selectedStateIcon = button.action.selected_state && button.action.selected_state.icon ? button.action.selected_state.icon : button.icon;\r\n\r\n            switch (button.action.type) {\r\n              case 'text':\r\n                return (<div className=\"button-wrap\" key={key}>\r\n                      <Button before={this.renderActionIcon(button.icon)} size={size} onClick={() => button.action.payload ? this.sendClick(item.id, button.action.payload) : null} stretched mode={button.color || \"primary\"}>\r\n                        {button.action.label}\r\n                      </Button>\r\n                  </div>);\r\n              case 'open_link':\r\n                return (\r\n                  <div className=\"button-wrap\" key={key}>\r\n                    <Link rel=\"noreferrer noopener\" href={button.action.link || \"\"} target=\"_blank\">\r\n                      <Button before={this.renderActionIcon(button.icon)} size={size} stretched mode={button.color || \"primary\"}>\r\n                        {button.action.label}\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              case 'select':\r\n                if (this.list.options.enable_select) {\r\n                  return (\r\n                    <div className=\"button-wrap\" key={key}>\r\n                      <Button before={isSelectedItem ? selectedStateIcon ? this.renderActionIcon(selectedStateIcon) : this.renderActionIcon(button.icon) : this.renderActionIcon(button.icon)} onClick={() => this.selectItem(item)} size={size} stretched mode={isSelectedItem ? selectedStateColor : button.color || \"primary\"}>\r\n                        {isSelectedItem ? selectedStateLabel : button.action.label}\r\n                      </Button>\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n            }\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n      );\r\n  }\r\n\r\n  getButtons (item) {\r\n    if (item.buttons && item.buttons.length) return item.buttons;\r\n    return this.list.options.buttons || [];\r\n  }\r\n\r\n  selectItem = (item={}) => {\r\n    if (item.id) {\r\n      let selectedItemIds = [...this.state.selectedItemIds]\r\n      if (this.isSelectedItem(item)) {\r\n        selectedItemIds.splice(selectedItemIds.indexOf(item.id), 1)\r\n      } else {\r\n        selectedItemIds.push(item.id)\r\n      }\r\n\r\n      this.setState({selectedItemIds})\r\n    }\r\n  }\r\n\r\n  isSelectedItem (item={}) {\r\n    if (item.id) {\r\n      return this.state.selectedItemIds.indexOf(item.id) !== -1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n    let {items, hasMore} = this.state;\r\n    let searchQuery = this.state.searchQuery.toLocaleLowerCase()\r\n\r\n    const spinnerStyle = {\r\n      marginTop: 24\r\n    }\r\n\r\n    if (!this.list.options.enable_server_search) {\r\n      let itemsMatchByTitle = items.filter((item, i)=> {\r\n        if (this.list.options.enable_server_search) return true;\r\n        item.__key = i;\r\n        return String(item.title).toLocaleLowerCase().indexOf(searchQuery) !== -1\r\n      })\r\n\r\n      let itemsMatchByDescription = items.filter((item, i)=> {\r\n        item.__key = i;\r\n        return String(item.description).toLocaleLowerCase().indexOf(searchQuery) !== -1\r\n      })\r\n\r\n      items = [...itemsMatchByTitle];\r\n      itemsMatchByDescription.forEach((item) => {\r\n        if (!itemsMatchByTitle.find(i => i.__key === item.__key)) {\r\n          items.push(item)\r\n        }\r\n      })\r\n    }\r\n\r\n    let listType = this.list.type;\r\n    let list = null;\r\n    let {cardSize, windowWidth, selectedItemIds} = this.state;\r\n    \r\n    let ratio = this.list.options.aspect_ratio ? this.list.options.aspect_ratio.split(\":\") : \"\";\r\n    if (!ratio.length) ratio = [13, 8];\r\n\r\n    let galleryHeight = (cardSize * ratio[1]) / ratio[0] || \"auto\";\r\n    const galleryStyles = {height: galleryHeight}\r\n\r\n    // items = [];\r\n\r\n    if (items.length) {\r\n      switch (listType) {\r\n        case 'vk_entities':\r\n          list = items.map((item, i) => (\r\n            <Cell \r\n              before={item.avatar_src ? <Avatar size={this.list.options.avatar_size || 48} src={item.avatar_src}/> : null}\r\n              description={item.description}\r\n              multiline={this.list.options.multiline}\r\n              href={item.link}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n              key={\"cell-item\" + i}\r\n            >{item.title}</Cell>\r\n          ));\r\n          break;\r\n        case 'cards':\r\n          let items_ = [];\r\n\r\n          items.forEach((el, i) => {\r\n            let arr = [];\r\n            if ((i + 1) % 2 === 1) {\r\n              arr.push(items[i]);\r\n              if (items[i + 1]) {\r\n                arr.push(items[i + 1]) \r\n              } else {\r\n                arr.push(null) \r\n              }\r\n            }\r\n\r\n            if (arr.length) {\r\n              items_.push(arr);\r\n            }\r\n          });\r\n          \r\n          let cardSize = windowWidth > 400 ? \"m\" : \"l\";\r\n          list = (\r\n            <Grid fluid>\r\n              <Row>\r\n              {items.map((item, k) => {\r\n                if (item) {\r\n                  \r\n                  let haveSelectButton = this.getButtons(item).find(b => b.action && b.action.type === \"select\");\r\n                  const flckityOptions = {\r\n                    initialIndex: this.itemsGalleries[item.id] || 0,\r\n                    pageDots: false,\r\n                    prevNextButtons: false,\r\n                    fullscreen: true,\r\n                    adaptiveHeight: true,\r\n                    wrapAround: true\r\n                  }\r\n\r\n                  return (\r\n                    <Col xs={12} md={3} key={\"card\" + k + \"_\" + item.id}><Card mode=\"shadow\" className=\"card\" size={cardSize}>\r\n                    {item.images && Array.isArray(item.images) ?\r\n                      <div>\r\n                      {this.list.options.enable_select && !haveSelectButton ? <Checkbox defaultChecked={this.isSelectedItem(item)} onChange={() => this.selectItem(item)} className=\"card--checkbox\"/> : null}\r\n                      <Flickity flickityRef={c => {\r\n                        c.on('settle', () => this.itemsGalleries[item.id] = c.selectedIndex)\r\n                      }} options={flckityOptions}\r\n                        onClick={() => bridge.send(\"VKWebAppShowImages\", {\r\n                          \"images\": item.images,\r\n                          \"start_index\": this.itemsGalleries[item.id] || 0,\r\n                       })}\r\n                      >\r\n                         {item.images.map(src => (<div className=\"slide-wrap\"><img style={galleryStyles} src={src} alt=\"Слайд\"/></div>))}\r\n                      </Flickity>\r\n                      </div>\r\n                     : null}\r\n                     <Div className=\"card--footer\">\r\n                      <div className=\"card--footer-title\">{item.title ? <b>{item.title}</b> : null}\r\n                      {item.description ? <span className=\"card--description\">\r\n                        <span className=\"description\">{item.description}</span>\r\n                      </span> : null}\r\n                      </div>\r\n                      {this.renderButtons(item, k + \"_\")}\r\n                    </Div>\r\n                    </Card></Col>\r\n                  );\r\n                } else {\r\n                  return (<div className=\"card\"></div>);\r\n                }\r\n              })}\r\n              </Row>\r\n              </Grid>\r\n          );\r\n\r\n\r\n          // list = items_.map((row, i) => (\r\n          //   <div key={\"row\" + i}><CardGrid className=\"cards-wrapper\">\r\n          //     {row.map((item, k) => {\r\n          //       if (item) {\r\n                  \r\n          //         let haveSelectButton = this.getButtons(item).find(b => b.action && b.action.type === \"select\");\r\n          //         const flckityOptions = {\r\n          //           initialIndex: this.itemsGalleries[item.id] || 0,\r\n          //           pageDots: false,\r\n          //           prevNextButtons: false,\r\n          //           fullscreen: true,\r\n          //           adaptiveHeight: true,\r\n          //           wrapAround: true\r\n          //         }\r\n\r\n          //         return (\r\n          //           <Card key={\"card\" + i + \"_\" + item.id} mode=\"shadow\" className=\"card\" size={cardSize}>\r\n          //           {item.images && Array.isArray(item.images) ?\r\n          //             <div>\r\n          //             {this.list.options.enable_select && !haveSelectButton ? <Checkbox defaultChecked={this.isSelectedItem(item)} onChange={() => this.selectItem(item)} className=\"card--checkbox\"/> : null}\r\n          //             <Flickity flickityRef={c => {\r\n          //               c.on('settle', () => this.itemsGalleries[item.id] = c.selectedIndex)\r\n          //             }} options={flckityOptions}\r\n          //               onClick={() => bridge.send(\"VKWebAppShowImages\", {\r\n          //                 \"images\": item.images,\r\n          //                 \"start_index\": this.itemsGalleries[item.id] || 0,\r\n          //              })}\r\n          //             >\r\n          //                {item.images.map(src => (<img style={galleryStyles} src={src} alt=\"Слайд\"/>))}\r\n          //             </Flickity>\r\n          //             </div>\r\n          //            : null}\r\n          //            <Div className=\"card--footer\">\r\n          //             <div className=\"card--footer-title\">{item.title ? <b>{item.title}</b> : null}\r\n          //             {item.description ? <span className=\"card--description\">\r\n          //               <span className=\"description\">{item.description}</span>\r\n          //             </span> : null}\r\n          //             </div>\r\n          //             {this.renderButtons(item, k + \"_\" + i)}\r\n          //           </Div>\r\n          //           </Card>\r\n          //         );\r\n          //       } else {\r\n          //         return (<div className=\"card\"></div>);\r\n          //       }\r\n          //     })}\r\n          //   </CardGrid></div>\r\n          // ))\r\n          break;\r\n      }\r\n    } else {\r\n      list = (<Footer>{searchQuery ? (this.list.options.empty_search_error_text ? this.list.options.empty_search_error_text : \"Поиск не дал результатов\") :  this.list.options.empty_error_text ? this.list.options.empty_error_text : \"Список пуст\"}</Footer>)\r\n    }\r\n\r\n    return (  \r\n      <Panel id={id}>\r\n        <StandardSearchHeader hashParams={hashParams} after={this.state.enableSearch ? <FixedLayout vertical=\"top\"><Search onChange={this.makeSearch}/></FixedLayout> : null}/>\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          hasMore={hasMore}\r\n          loader={<div style={spinnerStyle}><Spinner/></div>}\r\n          loadMore={this.loadMore}\r\n          threshold={10}\r\n        >\r\n          <div className={classnames(\"content-page\", {\r\n            \"search\": this.state.enableSearch\r\n          })}>\r\n            {list}\r\n          </div>\r\n        </InfiniteScroll>\r\n        {this.list.options.enable_select ? <FixedLayout vertical=\"bottom\">\r\n            <div className=\"bottom-list-actions\">\r\n              <div className=\"bottom-list-actions--items\">\r\n                <Div>\r\n                  <Button size=\"l\" stretched after={<Counter>{selectedItemIds.length}</Counter>} mode=\"secondary\"><Icon28ChecksOutline/></Button>\r\n                </Div>\r\n                <Div className=\"primary-action\">\r\n                  <Button disabled={selectedItemIds.length === 0} size=\"l\" onClick={this.sendSelectedItems} stretched before={this.renderIcon(this.list.options.complete_action_icon)}>{this.list.options.complete_action_text ? this.list.options.complete_action_text : \"Готово\"}</Button>\r\n                </Div>\r\n              </div>\r\n            </div>\r\n          </FixedLayout> : null}\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Search\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\n\r\nimport './css/selectGeo.css';\r\n\r\nexport default class SelectGeoPanel extends React.Component {\r\n  \r\n  componentDidMount () {\r\n    window.DG.then(function () {\r\n        window.DG.map('map', {\r\n            center: [54.98, 82.89],\r\n            zoom: 13\r\n        });\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {hashParams} = this.props;\r\n    return (\r\n      <Panel id={this.props.id}>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <div id=\"map\" className=\"two-gis-map-container\"></div>\r\n      </Panel>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport default class GetUserEmailPanel extends React.Component {\r\n  \r\n  getInfo = () => {\r\n    if (bridge.supports(\"VKWebAppGetUserInfo\")) {\r\n      bridge.send(\"VKWebAppGetUserInfo\", {}).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось получить информацию о пользователе\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Получение информации о пользователеl на этом устройстве не доступно\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.getInfo} \r\n          hashParams={hashParams} \r\n          requests=\"Запрашивает доступ к общей информации о Вас\"\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Panel,\r\n  CardGrid,\r\n  Card,\r\n  Placeholder,\r\n  Button,\r\n  Avatar,\r\n  Checkbox,\r\n  Div\r\n} from '@vkontakte/vkui';\r\n\r\nimport StandardSearchHeader from '../components/standardSearchHeader';\r\nimport StandardRequestAccess from '../components/standardRequestAccess';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {getSplittedAndFilteredString} from '../services/functions';\r\n\r\nimport './css/getUserData.css';\r\n\r\n/**\r\n  Опции метода:\r\n\r\n  scope - Список полей (прав), доступ к которым необходимо получить. Через запятую.\r\n  Возможные значения:\r\n   email - доступ к email'у\r\n   phone - доступ к номеру телефона\r\n   info - доступ к информации о пользователе\r\n   all - доступ ко всем данным сразу\r\n\r\n  disabled - Поля, которые необходимо отключить для изменения\r\n  Значения: all, или имена прав доступа через запятую, например: email,phone,info\r\n  use_token - Нужно ли использовать токен для получения информации о пользователе (1/0)\r\n  info_fields - Если используется токен, то это поля, которые необходимо получить о пользователе (читайте документацию метода users.get)\r\n  Этот параметр имеет обобщенные значения, при вводе которых скоуп автоматически расширяется. Например:\r\n    minimal - включает в себя bdate,city,country,verified,nickname\r\n    photos - включает в себя photo_50,photo_100,photo_200_orig,photo_200,photo_400_orig,photo_max,photo_max_orig\r\n    personal - включает в себя personal,interests,music,books,tx,movies,games,quotes,about,status,education,universities,schools\r\n\r\n    minimal_and_photos - включает в себя все поля minimal и поля photos\r\n    minimal_and_personal - включает в себя все поля minimal и поля personal\r\n    all - включает в себя все описанные поля (других не предусмотрено)\r\n\r\n    Для полее точной настройки возможно самостоятельно перечисление полей через запятую.\r\n*/\r\n\r\nexport default class GetUserDataPanel extends React.Component {\r\n  \r\n  constructor (props) {\r\n    super(props)\r\n    this.scope = getSplittedAndFilteredString(props.hashParams.get('scope') || \"\")\r\n    \r\n    if (props.hashParams.get('scope') === \"all\") this.scope = ['info', 'phone', 'email'];\r\n\r\n    this.disabled = getSplittedAndFilteredString(props.hashParams.get('disabled') || \"\").filter((a) => a !== \"all\")\r\n    this.disabledAll = props.hashParams.get('disabled') === \"all\";\r\n    this.state = {\r\n      scopeSelected: {\r\n        phone: true,\r\n        email: true,\r\n        info: true\r\n      },\r\n      loading: false\r\n    }\r\n    \r\n    this.useToken = Number(this.props.hashParams.get('use_token')) === 1;\r\n    this.dataFields = this.props.hashParams.get('info_fields') || \"photo_200\";\r\n    \r\n    this.fieldsTypes = {\r\n      minimal: \"bdate,city,country,verified,nickname\",\r\n      personal: \"personal,interests,music,books,tx,movies,games,quotes,about,status,education,universities,schools,career,military\",\r\n      photos: \"photo_50,photo_100,photo_200_orig,photo_200,photo_400_orig,photo_max,photo_max_orig\",\r\n    }\r\n\r\n    if (this.dataFields === \"minimal\") {\r\n      this.dataFields = this.fieldsTypes.minimal\r\n    } else if (this.dataFields === \"minimal_and_photos\") {\r\n      this.dataFields = this.fieldsTypes.minimal + \",\" + this.fieldsTypes.photos;\r\n    } else if (this.dataFields === \"personal\") {\r\n      this.dataFields = this.fieldsTypes.personal\r\n    } else if (this.dataFields === \"minimal_and_personal\") {\r\n      this.dataFields = this.fieldsTypes.minimal + \",\" + this.fieldsTypes.personal\r\n    } else if (this.dataFields === \"photos\") {\r\n      this.dataFields = this.fieldsTypes.photos\r\n    } else if (this.dataFields === \"all\") {\r\n      this.dataFields = this.fieldsTypes.minimal + \",\" + this.fieldsTypes.photos + \",\" + this.fieldsTypes.personal\r\n    }\r\n  }\r\n\r\n  getEmail = () => {\r\n    if (bridge.supports(\"VKWebAppGetUserInfo\")) {\r\n      bridge.send(\"VKWebAppGetUserInfo\", {}).then(res => {\r\n        this.props.sendResponse(res)\r\n      }).catch(e => {\r\n        this.props.sendError(\"Не удалось получить информацию о пользователе\", e)\r\n      });\r\n    } else {\r\n      this.props.sendError(\"Получение информации о пользователеl на этом устройстве не доступно\", {\r\n        error_code: \"not_supports\"\r\n      })\r\n    }\r\n  }\r\n\r\n  renderRequestsContent () {\r\n    if (!this.scope.length) return (\r\n      <Div className=\"align-center\">\r\n        <span className=\"description\">Произошла ошибка. Параметр scope не обозначен</span>\r\n      </Div>\r\n    );\r\n\r\n    return this.scope.map((permission, i) => {\r\n      return <Checkbox key={\"permission-\" + i} onChange={(e) => {\r\n        this.setState({\r\n          scopeSelected: {\r\n            ...this.state.scopeSelected,\r\n            [permission]: e.target.checked\r\n          }\r\n        })\r\n      }} disabled={this.disabledAll || this.disabled.indexOf(permission) !== -1} className=\"checkkox-mini\" defaultChecked={true}>{this.getPermissionTitle(permission)}</Checkbox>\r\n    });\r\n  }\r\n\r\n  getPermissionTitle (permission) {\r\n    switch (permission) {\r\n      case 'email':\r\n        return \"Доступ к email\";\r\n      case 'phone':\r\n        return \"Доступ к номеру телефона\";\r\n      case 'info':\r\n        return \"Доступ к общей информации\";\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  getData = async () => {\r\n    let data = {}\r\n    \r\n    for (let permission of this.scope) {\r\n      if (this.state.scopeSelected[permission]) {\r\n        data[permission] = await this.getDataField(permission);\r\n      } else {\r\n        data[permission] = {\r\n          error: true,\r\n          error_message: \"Пользователь отключил это поле\",\r\n          error_code: \"user_canceled\"\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.props.sendResponse(data)\r\n  }\r\n\r\n  async getDataField (permission) {\r\n    switch (permission) {\r\n      case 'email':\r\n        return this.makeApiDataRequest(\"VKWebAppGetEmail\", \"Не удалось получить email\").then(res => {\r\n          \r\n          if (res.email) {\r\n            res = {\r\n              email: res.email\r\n            }\r\n          }\r\n\r\n          return res;\r\n        });\r\n      case 'phone':\r\n        return this.makeApiDataRequest(\"VKWebAppGetPhoneNumber\", \"Не удалось получить номер телефона\").then(res => {\r\n          if (res.phone_number) {\r\n            res = {\r\n              phone_number: res.phone_number\r\n            }\r\n          }\r\n          return res;\r\n        });\r\n      case 'info':\r\n\r\n        if (this.useToken) {\r\n          if (this.props.userToken) {\r\n            return this.getUserInfoByToken(this.props.userToken);\r\n          } else {\r\n            let token = await this.props.onRequestToken();\r\n            return this.getUserInfoByToken(token);\r\n          }\r\n        }\r\n\r\n        return this.makeApiDataRequest(\"VKWebAppGetUserInfo\", \"Не удалось получить информацию о пользователе\");\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  async getUserInfoByToken (token=\"\") {\r\n    if (!token) return {error: true, error_code: \"invalid_token\"}\r\n      console.log(this.dataFields)\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    return this.props.vkApi(\"users.get\", {\r\n      access_token: token,\r\n      fields: this.dataFields\r\n    }).then(u => {\r\n      return u[0];\r\n    }).catch(e => {\r\n      return {\r\n        error: true,\r\n        ...e\r\n      }\r\n    }).then(r => {\r\n      \r\n      this.setState({\r\n        loading: false\r\n      });\r\n\r\n      return r;\r\n    })\r\n  }\r\n\r\n  async makeApiDataRequest (apiMethod, apiErrorMessage=\"Не удалось выполнить метод\", options={}) {\r\n    if (bridge.supports(apiMethod)) {\r\n      return bridge.send(apiMethod, options).then(res => {\r\n        return res;\r\n      }).catch(e => {\r\n        return {\r\n          error: true,\r\n          error_message: apiErrorMessage,\r\n          ...e\r\n        }\r\n      });\r\n    } else {\r\n      return {\r\n        error: true,\r\n        error_message: \"Метод не доступен\",\r\n        error_code: \"not_supports\"\r\n      }\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {id, hashParams} = this.props;\r\n\r\n    return (\r\n      <Panel id={id} centered>\r\n        <StandardSearchHeader hashParams={hashParams}/>\r\n        <StandardRequestAccess \r\n          onClick={this.getData} \r\n          hashParams={hashParams}\r\n          content={this.renderRequestsContent()}\r\n          requests=\"Запрашивает доступ к следующим данным\"\r\n          hideButton={!this.scope.length}\r\n          showSpinner={this.state.loading}\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}","import 'url-search-params-polyfill';\n\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport {\n\tView,\n\tScreenSpinner,\n\tPanelSpinner,\n\tPanel\n} from '@vkontakte/vkui';\n\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport GetCitiesPanel from './panels/getCities';\nimport GettingAuthPanel from './panels/gettingAuth';\nimport NotFoundPanel from './panels/notFound';\nimport HelloPanel from './panels/hello';\nimport GetEmailPanel from './panels/getEmail';\nimport GetPhoneNumberPanel from './panels/getPhoneNumber';\nimport JoinGroupPanel from './panels/joinGroup';\nimport AllowMessagesFromGroupPanel from './panels/allowMessagesFromGroup';\nimport RouteDialogPanel from './panels/routeDialog';\nimport GetAppVersionPanel from './panels/getAppVersion';\nimport ReadQRCodePanel from './panels/readQRCode';\nimport DownloadFilePanel from './panels/downloadFile';\nimport FillFormPanel from './panels/fillForm';\nimport WallPostPanel from './panels/wallPost'\nimport GetChairsPanel from './panels/getChairs';\nimport ShowStoryBoxPanel from './panels/showStoryBox';\nimport RenderListPanel from './panels/renderList';\nimport SelectGeoPanel from './panels/selectGeo';\nimport GetUserInfoPanel from './panels/getUserInfo';\nimport GetUserDataPanel from './panels/getUserData';\n\n\nimport {fetch} from 'whatwg-fetch'\n\nimport './css/main.css';\n\nexport const APP_ID = 7388296;\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.queryString = window.location.search;\n\t\t\n\t\tthis.lastTimeApiCallLastTick = 0;\n\t\tthis.lastTimeApiCallFirstTick = 0;\n\n\t\tthis.apiCallsCounter = 0;\n\n\t\tthis.queryParams = new URLSearchParams(this.queryString);\n\t\t\n\t\twindow.isWEB = this.queryParams.get('vk_platform') === 'desktop_web' || this.queryParams.get('vk_platform') === 'mobile_web';\n\t\t\n\t\twindow.isAndroid = this.queryParams.get('vk_platform') === 'mobile_android' || this.queryParams.get('vk_platform') === 'mobile_android_messenger';\n\t\twindow.isIOS = this.queryParams.get('vk_platform') === 'mobile_ios' || this.queryParams.get('vk_platform') === 'mobile_ios_messenger';\n\n\t\tthis.supportsHashes = [\n\t\t\t'selectCity', \n\t\t\t'selectCountry', \n\t\t\t'getEmail', \n\t\t\t'getPhoneNumber',\n\t\t\t'joinGroup',\n\t\t\t'allowMessagesFromGroup',\n\t\t\t'routeDialog',\n\t\t\t'getAppVersion',\n\t\t\t'readQRCode',\n\t\t\t'downloadFile',\n\t\t\t'fillForm',\n\t\t\t'wallPost',\n\t\t\t'selectChair',\n\t\t\t'selectFaculty',\n\t\t\t'selectUniversity',\n\t\t\t'showStoryBox',\n\t\t\t'selectSchool',\n\t\t\t'selectRegion',\n\t\t\t'selectMetroStation',\n\t\t\t'renderList',\n\t\t\t'selectGeo',\n\t\t\t'getUserInfo',\n\t\t\t'getUserData'\n\t\t];\n\n\n\t\tthis.databaseMethods = ['selectCountry', 'selectCity', 'selectChair', 'selectCountry', 'selectFaculty', 'selectUniversity', 'selectRegion', 'selectSchool', 'selectMetroStation']\n\t\tthis.apiCache = {}\n\t\tthis.wasClosed = false;\n\n\n\t\tlet hashParams = window.location.hash.replace(/^#/, '?');\n\t\tif (hashParams.replace('?', '').match(/^(\\d+)/)) hashParams = `?method=routeDialog&bot_id=${hashParams.replace('?', '')}`;\n\n\t\t\n\n\t\thashParams = new URLSearchParams(hashParams);\n\n\t\tthis.hashParams = hashParams;\n\n\n\t\tthis.state = {\n\t\t\tuserToken: '',\n\t\t\tactivePanel: 'loading',\n\t\t\tactiveHash: '',\n\t\t\tpopout: null,\n\t\t\thashParams\n\t\t}\n\n\t\tbridge.subscribe((e) => {\n\t\t\tif (!e.detail) return;\n\t\t\tif (e.detail.type === \"VKWebAppLocationChanged\" || (e.detail.type === \"VKWebAppViewRestore\" && this.wasClosed)) {\n\t\t\t\t// window.location.reload();\n\t\t\t} else if (e.detail.type === \"VKWebAppViewHide\") {\n\t\t\t\tthis.wasClosed = true;\n\t\t\t} else if (e.detail.type === \"VKWebAppUpdateConfig\") {\n\t\t\t\tdocument.body.setAttribute(\"scheme\", e.detail.data.scheme)\n\t\t\t}\n\t\t})\n \t}\n\n \tcomponentWillMount () {\n \t\tthis.getAppOptions();\n \t}\n\n \tasync getAppOptions () {\n \t\tlet options = this.hashParams;\n \t\tlet setOptions = new Map();\n \t\t\n \t\tsetOptions.__proto__.getAll = function (e) {return setOptions.get(e)}\n\n\n \t\tif (this.hashParams.get('launch_options')) {\n \t\t\toptions = await fetch(this.hashParams.get('launch_options')).catch(e => {\n \t\t\t\tthis.sendError(\"Сервер не ответил или ответил неправильно\", {\n \t\t\t\t\t...e,\n \t\t\t\t\terror_code: \"launch_options_unavailable\"\n \t\t\t\t})\n \t\t\t\tthrow e;\n \t\t\t});\n\n \t\t\toptions = await options.text()\n\n \t\t\ttry {\n \t\t\t\toptions = JSON.parse(options)\n \t\t\t} catch (e) {\n \t\t\t\tthis.sendError(\"Неправильный формат параметров запуска\", {\n \t\t\t\t\terror_code: \"launch_options_invalid_json\"\n \t\t\t\t})\n \t\t\t\treturn\n \t\t\t}\n\n \t\t\tif (!options.options || Object.prototype.toString.call(options) !== '[object Object]') {\n \t\t\t\tthis.sendError(\"Неправильный формат параметров запуска. Отсутствует поле options{} \", {\n \t\t\t\t\terror_code: \"launch_options_invalid_format\"\n \t\t\t\t})\n \t\t\t}\n\n \t\t\tfor (let i in options.options) {\n \t\t\t\tsetOptions.set(i, options.options[i])\n \t\t\t}\n\n \t\t\tsetOptions.set('launch_options', this.hashParams.get('launch_options'))\n\n \t\t\toptions = setOptions\n \t\t}\n\n \t\tthis.hashParams = options\n\n \t\tlet activeHash = options.get('method');\n\n\t\tif (this.supportsHashes.indexOf(activeHash) === -1) {\n\t\t\tif (activeHash && activeHash.length) {\n\t\t\t\tactiveHash = 'notFound';\n\t\t\t} else {\n\t\t\t\tactiveHash = 'hello';\n\t\t\t}\n\t\t}\n\n\t\tlet activePanel = 'gettingAuth';\n\t\tlet alreadyAuth = this.queryParams.get('vk_access_token_settings') === \"status\";\n\n\t\tif (alreadyAuth || (this.databaseMethods.indexOf(activeHash) === -1)) {\n\t\t\tactivePanel = activeHash;\n\t\t}\n\n\t\tif (alreadyAuth) {\n\t\t\tthis.requestToken();\n\t\t}\n\n\t\tthis.setState({\n\t\t\tactiveHash,\n\t\t\tactivePanel,\n\t\t\thashParams: options\n\t\t})\n\n \t}\n\n \tcomponentDidMount () {\n \t\tif (this.state.activeHash === 'notFound') {\n \t\t\tthis.sendError(\"Метод не найден\", {\n \t\t\t\t\"errror_code\": \"method_not_found\"\n \t\t\t}, false)\n \t\t}\n \t}\n\n \tsendResponse = async (response={}, close=true) => {\n \t\t\n \t\tlet appPayload = {\n \t\t\tmethod: this.state.activeHash,\n \t\t\thash: window.location.hash.replace('#', ''),\n \t\t\t...response\n \t\t}\n\n \t\tif (!appPayload.error) appPayload.success = true;\n\n \t\tlet botId = this.hashParams.get('bot_id');\n\n    if (botId) {\n      await bridge.send(\"VKWebAppSendPayload\", {\n        \"group_id\": Number(botId), \n        \"payload\": appPayload\n      });\n    }\n\n    if (close) {\n    \tthis.wasClosed = true;\n    \tif (this.queryParams.get('vk_platform') === 'desktop_web' || this.queryParams.get('vk_platform') === 'mobile_web') {\n    \t\twindow.history.back();\n    \t} else {\n    \t\tbridge.send(\"VKWebAppSetLocation\", {\"location\": window.location.hash + '&' + new Date().getTime()});\n    \t\tawait bridge.send(\"VKWebAppClose\", {\n\t\t      \"status\": \"success\", \n\t\t      \"payload\": appPayload\n\t\t    });\n    \t}\n    }\n \t}\n\n \tsendError = async (message=\"\", response={}, close=true) => {\n \t\treturn this.sendResponse({\n \t\t\t...response,\n \t\t\terror: true,\n \t\t\terror_message: message\n \t\t}, close)\n \t}\n\n\trequestToken = async () => {\n\n\t\treturn bridge.send(\"VKWebAppGetAuthToken\", {\n\t\t\t\"app_id\": APP_ID, \n\t\t\t\"scope\": \"status\"\n\t\t}).then(token => {\n\t\t\tthis.setState({\n\t\t\t\tuserToken: token.access_token,\n\t\t\t\tactivePanel: this.state.activePanel === 'gettingAuth' ? this.state.activeHash : this.state.activePanel\n\t\t\t});\n\n\t\t\treturn token.access_token;\n\t\t});\n\t}\n\n\tasync sleep (ts) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => resolve(true), ts)\n\t\t})\n\t}\n\n\tmakeApiCall = async (method, params={}, cache=true) => {\n\n\t\tlet requestbase64 = '';\n\n\t\tif (cache) {\n\t\t\trequestbase64 = btoa(JSON.stringify([method, params]))\n\t\t\tif (this.apiCache[requestbase64]) return this.apiCache[requestbase64];\n\t\t}\n\n\t\tif (this.apiCallsCounter % 2 === 0) {\n\t\t\t// Check limits\n\t\t\tif (this.lastTimeApiCallLastTick - this.lastTimeApiCallFirstTick <= 1000) {\n\t\t\t\tconsole.error('freeze api for ', 1000 - (this.lastTimeApiCallLastTick - this.lastTimeApiCallFirstTick))\n\t\t\t\tawait this.sleep(1000 - (this.lastTimeApiCallLastTick - this.lastTimeApiCallFirstTick))\n\t\t\t}\n\t\t}\n\n\t\tconst {userToken} = this.state;\n\t\t\n\t\tif (this.apiCallsCounter % 2 === 0) {\n\t\t\tthis.lastTimeApiCallFirstTick = new Date().getTime()\n\t\t}\n\n\t\tthis.apiCallsCounter += 1;\n\t\tthis.lastTimeApiCallLastTick = new Date().getTime()\n\n\t\treturn bridge.send(\"VKWebAppCallAPIMethod\", {\n      \"method\": method, \n      \"request_id\": String(new Date().getTime()), \n      \"params\": {\n      \t\"v\": \"5.103\",\n      \t\"access_token\": userToken,\n      \t...params\n      }\n    }).then(res => {\n    \tif (cache) this.apiCache[requestbase64] = res.response;\n    \treturn res.response;\n    }).catch(async e => {\n    \tif (e.error_data.error_reason.error_code === 6) {\n    \t\tconsole.error(e)\n    \t\tawait this.sleep(500)\n    \t\treturn this.makeApiCall(method, params)\n    \t} else {\n    \t\tthrow e\n    \t}\n    })\n\t}\n\n\trender () {\n\t\tlet {activePanel} = this.state;\n\t\tconst {popout, userToken, hashParams, activeHash} = this.state;\n\t\t\n\t\tif (activePanel !== \"notFound\" && activePanel !== \"gettingAuth\" && activePanel !== \"hello\" && !userToken\n\t\t\t&& this.databaseMethods.indexOf(activeHash) !== -1) {\n\t\t\tactivePanel = \"loading\";\n\t\t}\n\n\t\tif (this.databaseMethods.indexOf(activePanel) !== -1) {\n\t\t\tactivePanel = \"selectChair\"\n\t\t}\n\n\t\tif (activePanel === \"loading\") {\n\t\t\treturn (\n\t\t\t\t<View key=\"loading\" activePanel=\"loading\" header={false}>\n\t\t\t\t\t<Panel id=\"loading\" centered>\n\t\t\t\t\t\t<PanelSpinner size=\"xl\"/>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<View activePanel={activePanel} popout={popout} header={true}>\n\t\t\t\t<HelloPanel id=\"hello\" hashParams={hashParams}/>\n\t\t\t\t<NotFoundPanel id=\"notFound\" hashParams={hashParams}/>\n\n\t\t\t\t<RenderListPanel id=\"renderList\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\n\n\t\t\t\t<GetEmailPanel id=\"getEmail\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetUserInfoPanel id=\"getUserInfo\" activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetUserDataPanel id=\"getUserData\" onRequestToken={this.requestToken} activeHash={this.state.activeHash} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<WallPostPanel id=\"wallPost\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<ReadQRCodePanel id=\"readQRCode\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<DownloadFilePanel id=\"downloadFile\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<RouteDialogPanel id=\"routeDialog\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<FillFormPanel id=\"fillForm\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<ShowStoryBoxPanel id=\"showStoryBox\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<JoinGroupPanel id=\"joinGroup\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetAppVersionPanel id=\"getAppVersion\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<AllowMessagesFromGroupPanel id=\"allowMessagesFromGroup\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetPhoneNumberPanel id=\"getPhoneNumber\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<GetCitiesPanel id=\"selectCity\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} userToken={userToken} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<GetChairsPanel id=\"selectChair\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} userToken={userToken} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t<SelectGeoPanel id=\"selectGeo\" activeHash={this.state.activeHash} sendError={this.sendError} sendResponse={this.sendResponse} userToken={userToken} vkApi={this.makeApiCall} hashParams={hashParams}/>\n\t\t\t\t\n\t\t\t\t<GettingAuthPanel hashParams={hashParams} id=\"gettingAuth\" activeHash={this.state.activeHash} sendError={this.sendError} onRequestToken={this.requestToken}/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// import(\"./eruda\").then(eruda => {});\n\nwindow.onerror = function (errorMsg, url, lineNumber, columnNumber, error) {\n    let textAoutput = '<br/><pre>'+ errorMsg \n    + '\\n' +  url + ':' + lineNumber + ':' + columnNumber + '\\n' + (error || {}).stack + '</pre><br/>' + window.navigator.userAgent;\n\n    document.body.innerHTML = textAoutput;\n    console.error(error);\n    console.info(textAoutput);\n    return false;\n}\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(eruda => {}); //runtime download\n// }\n"],"sourceRoot":""}